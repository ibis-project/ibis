# vim: filetype=yaml
name: Relock conda environment files

on:
  repository_dispatch:
    types:
      - condalock-command

jobs:
  condalock:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          miniforge-version: latest
          miniforge-variant: Mambaforge
          activate-environment: conda-lock
          python-version: ${{ matrix.python-version }}
          condarc-file: ci/condarc

      - name: install conda-lock
        run: mamba install conda-lock

      - name: generate lock file
        run: |
          set -euo pipefail

          python_version_file="$(mktemp --suffix=.yml)"

          {
            echo 'name: conda-lock'
            echo 'dependencies:'
            echo '  - python=${{ matrix.python-version }}'
          } > "${python_version_file}"

          conda lock \
            --file pyproject.toml \
            --file "${python_version_file}" \
            --platform linux-64 \
            --platform osx-64 \
            --platform win-64 \
            --filename-template 'conda-lock/{platform}-${{ matrix.python-version }}.lock' \
            --extras clickhouse \
            --extras dask \
            --extras geospatial \
            --extras hdf5 \
            --extras impala \
            --extras mysql \
            --extras parquet \
            --extras postgres \
            --extras pyspark \
            --extras sqlite \
            --mamba

      - name: create conda environment
        run: mamba create --name ibis${{ matrix.python-version }} --file conda-lock/linux-64-${{ matrix.python-version }}.lock

      - name: upload conda lock files
        uses: actions/upload-artifact@v2
        with:
          name: conda-lock-files-${{ github.run_attempt }}
          path: conda-lock/*-${{ matrix.python-version }}.lock

  condalock_push:
    runs-on: ubuntu-latest
    needs:
      - condalock
    steps:
      - name: Generate a GitHub token
        uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}
          private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}

      - name: checkout
        uses: actions/checkout@v2
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: download conda lock files
        uses: actions/download-artifact@v2
        with:
          name: conda-lock-files-${{ github.run_attempt }}
          path: conda-lock

      - name: set git user info
        run: |
          set -euo pipefail

          git config --global user.name 'ibis-project-bot[bot]'
          git config --global user.email 'ibis-project-bot[bot]@users.noreply.github.com'

      - name: commit lock files and push to PR
        run: |
          set -euo pipefail

          git add conda-lock/*.lock

          if git commit -m'chore(conda-lock): relock'; then
            # pull in case another commit happened in the meantime
            #
            # `ours` is actually the *other* changeset, not the current branch, per
            # https://stackoverflow.com/a/3443225/564538
            git pull --rebase -s recursive -X ours
            git push
          fi

      - name: react on success
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray
