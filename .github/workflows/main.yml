name: Main

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  Tests_pandas:
    name: Tests pandas / files
    runs-on: ${{ matrix.os }}
    env:
      BACKENDS: "pandas csv parquet hdf5"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  # TODO add windows and fix bash scripts (conda not found)
        python_version: ["3.7", "3.8"]
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: set up environment
      run: ./ci/setup_env.sh "${{ matrix.python_version }}" "$BACKENDS"
      shell: bash

    - name: run tests
      run: PYTEST_BACKENDS=$BACKENDS PYTEST_EXPRESSION="not udf and not hdfs" ./ci/run_tests.sh
      shell: bash

  Tests_sql:
    name: Tests SQL
    runs-on: ubuntu-latest
    env:
      BACKENDS: "postgres mysql sqlite"
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.7", "3.8"]
    services:
      postgres:
        image: shajekpivotal/ibis-docker-postgres-9.5
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ''
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mysql:
        image: mariadb:10.4.12
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: ibis_testing
          MYSQL_USER: ibis
          MYSQL_PASSWORD: ibis
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: set up environment
      run: ./ci/setup_env.sh "${{ matrix.python_version }}" "$BACKENDS"

    - name: run tests
      run: PYTEST_BACKENDS=$BACKENDS PYTEST_EXPRESSION="not udf and not hdfs" ./ci/run_tests.sh

  Tests_impala_clickhouse:
    name: Tests Impala / Clickhouse
    runs-on: ubuntu-latest
    if: false # TODO: temporary disabling this build, since the impala container seems to not be starting properly
    env:
      BACKENDS: "impala clickhouse"
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.7", "3.8"]
    services:
      impala:
        image: ibisproject/impala:latest
        env:
          PGPASSWORD: postgres
        ports:
          # HDFS
          - 9020:9020
          - 50070:50070
          - 50075:50075
          - 8020:8020
          - 8042:8042
          # Hive
          - 9083:9083

          # Impala
          - 21000:21000
          - 21050:21050
          - 25000:25000
          - 25010:25010
          - 25020:25020
        options: --health-cmd "nc -z 127.0.0.1 21050 && nc -z 127.0.0.1 50070" --health-interval 30s --health-timeout 10s --health-retries 20
      clickhouse:
        # XXX does clickhouse backend require the impala container too?
        image: yandex/clickhouse-server:18.14
        ports:
          - 8123:8123
          - 9000:9000

    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: set up environment
      run: ./ci/setup_env.sh "${{ matrix.python_version }}" "$BACKENDS"

    - name: run tests
      run: PYTEST_BACKENDS=$BACKENDS ./ci/run_tests.sh

  Tests_omniscidb_spark:
    name: Tests OmniSciDB/Spark
    runs-on: ubuntu-latest
    env:
      BACKENDS: "omniscidb spark pyspark"
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.7"]
    services:
      omnisci:
        image: omnisci/core-os-cpu:v5.2.2
        ports:
          - 6274:6274
          - 6278:6278
        volumes:
          - omniscidb.conf:/omnisci-storage/omnisci.conf
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: set up environment
      run: ./ci/setup_env.sh "${{ matrix.python_version }}" "$BACKENDS"

    - name: run tests
      run: PYTEST_BACKENDS=$BACKENDS PYTEST_EXPRESSION="not udf and not hdfs" ./ci/run_tests.sh


  Lint_package_benchmark:
    name: Lint, package and benckmark
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v1

    - name: set up environment
      run: ./ci/setup_env.sh

    - name: black
      run: black --check .
      if: always()

    - name: mypy
      # TODO: mypy has errors that need to be fixed before it can be added
      run: mypy --ignore-missing-imports ibis || true
      if: always()

    - name: pydocstyle
      # TODO: change match-dir when docstrings are fixed for other backends
      run: pydocstyle --match-dir="(ibis|omniscidb)"
      if: always()

    - name: isort
      # TODO: isort has errors that need to be fixed before it can be added
      run: isort --check-only . || true
      if: always()

    - name: feedstock
      run: |
        ./ci/feedstock.py clone
        ./ci/feedstock.py update
        ./ci/feedstock.py build --python 3.7
        ./ci/feedstock.py deploy /usr/share/miniconda/conda-bld/
      if: always()

    - name: publish feedstock artifact
      uses: actions/upload-artifact@master
      with:
        name: LinuxCondaPackage
        path: /tmp/ibis/packages
      if: github.event_name == 'push'

    - name: benckmark
      run: ./ci/benchmark.sh azure "${{ github.sha }}"
      if: always()
