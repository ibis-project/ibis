name: Check Generated Files

on:
  push:
    paths:
      - ./dev/poetry2setup
      - ./dev/poetry2setup.py
      - README.md
      - poetry.lock
      - pyproject.toml
      - setup.py
      - .github/workflows/check-setup-py.yml
  pull_request:
    paths:
      - ./dev/poetry2setup
      - ./dev/poetry2setup.py
      - README.md
      - poetry.lock
      - pyproject.toml
      - setup.py
      - .github/workflows/check-setup-py.yml

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check_setup_py:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: ibis
          extraPullNames: nix-community,poetry2nix

      - name: generate setup.py
        run: ./dev/poetry2setup -o setup.py

      - name: check whether setup.py needs to be regenerated
        run: git diff --exit-code setup.py

  check_setuptools_install:
    runs-on: ubuntu-latest
    needs:
      - check_setup_py
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v3
        id: install_python
        with:
          python-version: "3.10"

      - name: update apt-get
        run: sudo apt-get update -y -q

      - name: install system dependencies
        run: sudo apt-get install -y -q build-essential graphviz krb5-config libkrb5-dev

      - name: install poetry
        run: pip install poetry

      - name: generate requirements.txt
        run: poetry export --dev --extras all --without-hashes > requirements.txt

      - uses: syphar/restore-virtualenv@v1
        with:
          requirement_files: requirements.txt
          custom_cache_key_element: check-setuptools-install-${{ steps.install_python.outputs.python-version }}

      - uses: syphar/restore-pip-download-cache@v1
        with:
          requirement_files: requirements.txt
          custom_cache_key_element: check-setuptools-install-${{ steps.install_python.outputs.python-version }}

      - name: install using requirements.txt
        run: pip install -r requirements.txt

      - name: install ibis in development mode
        run: pip install -e .

      - name: run tests
        run: pytest -m core --cov-report=xml:coverage.xml --cov=ibis

      - name: upload code coverage
        if: success()
        uses: codecov/codecov-action@v3
        with:
          flags: core,${{ runner.os }},python-${{ steps.install_python.outputs.python-version }}

  check_poetry_lock:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: install poetry
        run: pip install poetry

      - name: run poetry lock
        run: poetry lock --no-update

      - name: check whether poetry lockfile needs to be updated
        run: git diff --exit-code poetry.lock
