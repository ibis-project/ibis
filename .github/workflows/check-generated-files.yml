name: Check Generated Files

on:
  push:
    paths:
      - README.md
      - poetry.lock
      - pyproject.toml
      - requirements.txt
      - .github/workflows/check-requirements-txt.yml
  pull_request:
    paths:
      - README.md
      - poetry.lock
      - pyproject.toml
      - requirements.txt
      - .github/workflows/check-requirements-txt.yml

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check_setuptools_install:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v4
        id: install_python
        with:
          python-version: "3.10"

      - name: update apt-get
        run: sudo apt-get update -y -q

      - name: install system dependencies
        run: sudo apt-get install -y -q build-essential graphviz libgeos-dev

      - name: install poetry
        run: pip install 'poetry>=1.2'

      - name: check consistency with pyproject.toml
        run: poetry lock --check

      - name: generate requirements.txt
        run: poetry export --extras all --with dev --with test --with docs --without-hashes --no-ansi > requirements.txt

      - name: check requirements.txt
        run: git diff --exit-code requirements.txt

      - uses: syphar/restore-virtualenv@v1
        with:
          requirement_files: requirements.txt
          custom_cache_key_element: check-setuptools-install-${{ steps.install_python.outputs.python-version }}

      - uses: syphar/restore-pip-download-cache@v1
        with:
          requirement_files: requirements.txt
          custom_cache_key_element: check-setuptools-install-${{ steps.install_python.outputs.python-version }}

      - name: install using requirements.txt
        run: pip install -r requirements.txt

      - name: install ibis in development mode
        run: pip install -e .

      - name: run tests
        run: pytest -m core --cov-report=xml:coverage.xml --cov=ibis

      - name: upload code coverage
        if: success()
        uses: codecov/codecov-action@v3
        with:
          flags: core,${{ runner.os }},python-${{ steps.install_python.outputs.python-version }}
