name: Check setup.py

on:
  push:
    paths:
      - ./dev/poetry2setup
      - ./dev/poetry2setup.py
      - README.md
      - poetry.lock
      - pyproject.toml
      - setup.py
  pull_request:
    paths:
      - ./dev/poetry2setup
      - ./dev/poetry2setup.py
      - README.md
      - poetry.lock
      - pyproject.toml
      - setup.py

jobs:
  check_setup_py:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: ibis
          extraPullNames: nix-community,poetry2nix

      - name: generate setup.py
        run: ./dev/poetry2setup -o setup.py

      - name: check whether setup.py needs to be regenerated
        run: git diff --exit-code setup.py

  check_setuptools_install:
    runs-on: ubuntu-latest
    needs:
      - check_setup_py
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        id: install_python
        with:
          python-version: "3.9"

      - name: install poetry
        run: pip install poetry

      - name: install system dependencies
        run: sudo apt-get install -y -q build-essential cmake krb5-config python-dev libkrb5-dev libboost-all-dev graphviz

      - name: generate requirements.txt
        run: poetry export --dev --extras all --without-hashes > requirements.txt

      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: check-setuptools-install-${{ runner.os }}-${{ steps.install_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: install using requirements.txt
        run: pip install -r requirements.txt

      - name: install ibis in development mode
        run: pip install -e .

      - name: run simple tests
        run: pytest ibis/tests --numprocesses auto

  check_poetry_lock:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: install poetry
        run: pip install poetry

      - name: run poetry lock
        run: poetry lock --no-update

      - name: check whether poetry lockfile needs to be updated
        run: git diff --exit-code poetry.lock
