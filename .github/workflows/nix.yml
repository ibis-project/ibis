# vim: filetype=yaml
name: Nix

on:
  push:
    paths:
      - "**/*.nix"
      - "pyproject.toml"
      - "poetry.lock"
      - "nix/**"
    branches:
      - master
      - "*.x.x"
  pull_request:
    paths:
      - "**/*.nix"
      - "pyproject.toml"
      - "poetry.lock"
      - "nix/**"
    branches:
      - master
      - "*.x.x"

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  nix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install nix
        uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: ibis
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: nix build and run tests
        continue-on-error: ${{ matrix.os == 'macos-latest' && matrix.python-version == '3.8' }}
        run: nix build --keep-going --print-build-logs --file . --argstr python ${{ matrix.python-version }}
