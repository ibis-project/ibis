name: Nix

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.qmd"
      - ".envrc"
    branches:
      - main
      - "*.x.x"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.qmd"
      - ".envrc"
    branches:
      - main
      - "*.x.x"
  merge_group:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  nix:
    runs-on: ${{ matrix.os }}
    name: nix (${{ matrix.os }}, ${{ matrix.python-version }})
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest # x86_64-linux
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
        continue-on-error:
          - false
        include:
          - os: ubuntu-arm64-24.04 # aarch64-linux
            python-version: "3.12"
            continue-on-error: false
          - os: macos-14 # aarch64-darwin
            python-version: "3.12"
            continue-on-error: true
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: setup cachix
        uses: cachix/cachix-action@v15
        with:
          name: ibis
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: nix build and test
        continue-on-error: ${{ matrix.continue-on-error }}
        run: |
          set -euo pipefail

          version='${{ matrix.python-version }}'
          nix build ".#ibis${version//./}" --fallback --keep-going --print-build-logs

      - name: nix build devShell
        continue-on-error: ${{ matrix.continue-on-error }}
        run: |
          set -euo pipefail

          version='${{ matrix.python-version }}'
          host_system="$(nix eval --raw 'nixpkgs#stdenv.hostPlatform.system')"
          flake=".#devShells.${host_system}.ibis${version//./}"

          args=("--fallback" "--keep-going" "--print-build-logs")
          if [[ "${{ github.event_name }}" != "push" ]]; then
            args+=("--dry-run")
          fi

          nix build "$flake" "${args[@]}"
