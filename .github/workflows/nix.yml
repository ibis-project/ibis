name: Nix

on:
  push:
    paths:
      - "**/*.nix"
      - "pyproject.toml"
      - "poetry.lock"
      - "nix/**"
    branches:
      - master
      - "*.x.x"
  pull_request:
    paths:
      - "**/*.nix"
      - "pyproject.toml"
      - "poetry.lock"
      - "nix/**"
    branches:
      - master
      - "*.x.x"
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  nix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install nix
        uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=./nix

      - name: setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: ibis
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: set target path for build
        run: |
          event_name="${{ github.event_name }}"
          target="$PWD"
          if [ "$event_name" == "schedule" ] || [ "$event_name" == "workflow_dispatch" ]; then
            target+="/shell.nix"
          fi
          echo "TARGET_PATH=$target" >> "$GITHUB_ENV"

      - name: nix build
        run: nix build --fallback --keep-going --print-build-logs --file "$TARGET_PATH" --argstr python ${{ matrix.python-version }}
