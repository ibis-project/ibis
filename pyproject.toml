[tool.poetry]
name = "ibis-framework"
version = "2.0.0"
packages = [{ include = "ibis" }]
homepage = "https://ibis-project.org"
repository = "https://github.com/ibis-project/ibis"
documentation = "https://ibis-project.org/docs"
description = "Productivity-centric Python Big Data Framework"
authors = ["Ibis Contributors"]
maintainers = ["Ibis Contributors"]
license = "Apache-2.0"
readme = "README.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
atpublic = ">=2.3,<3"
cached_property = ">=1,<2"
cryptography = ">=3,<4"
importlib-metadata = { version = ">=4,<5", python = "<3.8" }
multipledispatch = ">=0.6,<0.7"
numpy = [
  { version = ">=1,<2", platform = "!= win32" },
  { version = ">=1,<2", python = "<3.10", platform = "win32" },
  # wheels exist for python 3.10 + windows from numpy 1.21.3 and higher
  { version = ">=1.21.3,<2", python = ">=3.10", platform = "win32" },
]
pandas = ">=1.2.5,<2"
parsy = ">=1.3.0,<2"
pytz = "^2021.1"
regex = "^2021.7.6"
cytoolz = { version = ">=0.11,<0.12", python = "<3.10" }
toolz = ">=0.11,<0.12"
clickhouse-driver = { version = ">=0.1,<0.3", optional = true }
clickhouse-sqlalchemy = { version = ">=0.1.4,<0.2", optional = true }
dask = { version = "^2021.2.0", optional = true, extras = [
  "array",
  "dataframe"
] }
geoalchemy2 = { version = ">=0.6,<0.11", optional = true }
geopandas = { version = ">=0.6,<0.11", optional = true }
graphviz = { version = ">=0.16,<0.20", optional = true }
hdfs = { version = ">=2,<3", optional = true, extras = ["kerberos"] }
impyla = { version = ">=0.17,<0.19", optional = true, extras = ["kerberos"] }
psycopg2 = { version = ">=2.7.6,<3", optional = true }
pyarrow = { version = ">=1,<7", optional = true }
pymysql = { version = ">=1,<2", optional = true }
pyspark = { version = ">=2.4.3,<4", optional = true }
requests = { version = ">=2,<3", optional = true }
shapely = { version = ">=1.6,<2", optional = true }
sqlalchemy = { version = "~1.3", optional = true } # TODO: this can't be relaxed due to clickhouse-sqlalchemy not supporting 1.4
tables = { version = ">=3,<4", optional = true }

[tool.poetry.dev-dependencies]
Sphinx = "^4.2.0"
asv = "^0.4.2"
black = "^21.9b0"
click = "^8.0.1"
commitizen = "^2.20.3"
flake8 = "^4.0.0"
ipykernel = "^6"
ipython = "^7.27.0"
isort = "^5.9.3"
markdown = "<3.3.5"
mypy = "^0.921"
nbsphinx = "^0.8.7"
plumbum = "^1.7.0"
pydocstyle = "^6.1.1"
pysuerga = "^0.1.0"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-mock = "^3.6.1"
pytest-randomly = "^3.10.1"
pytest-xdist = "^2.3.0"
pyupgrade = "^2.26.0"
releases = "^1.6.3"
setuptools = ">=57,<61"
sphinx_rtd_theme = "^1.0.0"
sqlalchemy = "~1.3"

[tool.poetry.extras]
all = [
  "clickhouse-driver",
  "clickhouse-sqlalchemy",
  "dask",
  "geoalchemy2",
  "geopandas",
  "graphviz",
  "hdfs",
  "impyla",
  "psycopg2",
  "pyarrow",
  "pymysql",
  "pyspark",
  "requests",
  "shapely",
  "sqlalchemy",
  "tables",
]
clickhouse = ["sqlalchemy", "clickhouse-sqlalchemy", "clickhouse-driver"]
csv = []
dask = ["dask", "pyarrow"]
geospatial = ["geoalchemy2", "geopandas", "shapely"]
hdf5 = ["tables"]
impala = ["hdfs", "sqlalchemy", "requests", "impyla"]
mysql = ["sqlalchemy", "pymysql"]
pandas = []
parquet = ["pyarrow"]
postgres = ["sqlalchemy", "psycopg2"]
pyspark = ["pyspark", "pyarrow"]
sqlite = ["sqlalchemy"]
visualization = ["graphviz"]

[tool.poetry.plugins."ibis.backends"]
clickhouse = "ibis.backends.clickhouse"
csv = "ibis.backends.csv"
dask = "ibis.backends.dask"
hdf5 = "ibis.backends.hdf5"
impala = "ibis.backends.impala"
mysql = "ibis.backends.mysql"
pandas = "ibis.backends.pandas"
parquet = "ibis.backends.parquet"
postgres = "ibis.backends.postgres"
pyspark = "ibis.backends.pyspark"
spark = "ibis.backends.pyspark"
sqlite = "ibis.backends.sqlite"

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = [
  "ibis/__init__.py:__version__",
  "docs/source/conf.py:version"
]
branch = "master"
upload_to_pypi = false
upload_to_release = false
build_command = "poetry build"
commit_subject = "chore(release): {version}"
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
changelog_file = "docs/web/release_notes.md"

[tool.pytest.ini_options]
xfail_strict = true
addopts = [
  "--ignore=site-packages",
  "--ignore=dist-packages",
  "--strict-markers"
]
norecursedirs = ["site-packages", "dist-packages"]
markers = [
  "backend",
  "geo",
  "hdfs",
  "kudu",
  "min_spark_version",
  "only_on_backends",
  "skip_backends",
  "skip_missing_feature",
  "superuser",
  "udf",
  "xfail_backends",
  "xfail_unsupported",
  "xpass_backends",
]

[tool.black]
line_length = 79
skip_string_normalization = true
exclude = ".+\\.ipynb"

[tool.isort]
ensure_newline_before_comments = true
line_length = 79
multi_line_output = 3
include_trailing_comma = true
profile = "black"

[tool.pydocstyle]
inherit = false
convention = "numpy"
match_dir = "ibis"
add_ignore = ["D100", "D101", "D102", "D103", "D104", "D105"]

[tool.conda-lock]
channels = ["conda-forge"]

[build-system]
requires = ["poetry-core", "setuptools"]
build-backend = "poetry.core.masonry.api"
