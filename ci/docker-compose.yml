version: '3'
services:

  postgres:
    image: shajekpivotal/ibis-docker-postgres-9.5
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ''

  mysql:
    image: mariadb:10.2
    hostname: mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: ibis_testing
      MYSQL_USER: ibis
      MYSQL_PASSWORD: ibis
      # see: https://github.com/docker-library/mariadb/issues/262
      MYSQL_INITDB_SKIP_TZINFO: 1

  impala:
    image: ibisproject/impala:latest
    hostname: impala
    environment:
      PGPASSWORD: postgres
    ports:
      # HDFS
      - 9020:9020
      - 50070:50070
      - 50075:50075
      - 8020:8020
      - 8042:8042
      # Hive
      - 9083:9083

      # Impala
      - 21000:21000
      - 21050:21050
      - 25000:25000
      - 25010:25010
      - 25020:25020
    depends_on:
      - postgres
    # as postgres restart some times until be ready,
    # dockerize -wait could finish before postgres
    # be indead ready.
    # Using sleep 40 seconds before in fact start
    # helps to ensure postgres will be available.
    entrypoint:
      - bash
      - -c
      - "sleep 80 && supervisord -c /etc/supervisord.conf -n"

  clickhouse:
    image: yandex/clickhouse-server:18.12
    hostname: clickhouse
    ports:
      - 8123:8123
      - 9000:9000

  kudu-master:
    image: ibisproject/kudu:latest
    hostname: kudu-master
    networks:
      default:
        aliases:
          - kudu
    cap_add:
      - SYS_TIME
    ports:
      - 7051:7051
      - 8051:8051
    environment:
      KUDU_MASTER: "true"

  kudu-tserver:
    image: ibisproject/kudu:latest
    hostname: kudu-tserver
    cap_add:
      - SYS_TIME
    ports:
      - 7050:7050
      - 8050:8050
    environment:
      KUDU_MASTER: "false"

  omniscidb:
    image: omnisci/core-os-cpu:v5.1.0
    hostname: omniscidb

    ports:
      - 6274:6274
      - 6278:6278
    volumes:
      - ./omniscidb.conf:/omnisci-storage/omnisci.conf

  waiter:
    image: jwilder/dockerize

  ibis:
    image: ibis:${PYTHON_VERSION:-3.6}
    env_file:
      - ./.env
    volumes:
      - /tmp/ibis:/tmp
      - ..:/ibis
    build:
      context: ..
      dockerfile: ci/Dockerfile.dev
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.6}

  ibis-docs:
    image: ibis-docs:${PYTHON_VERSION:-3.6}
    env_file:
      - ./.env
    volumes:
      - /tmp/ibis:/tmp
      - ..:/ibis
    build:
      context: ..
      dockerfile: ci/Dockerfile.docs
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.6}
