machine:
  python:
    version: 3.6.1
  pre:
    # upgrade sqlite3 to # make sure we have the "instr" function available
    - sudo apt-get -qq install --only-upgrade sqlite3
    # clang/boost for UDFs and graphviz for visualization
    - sudo apt-get -qq install clang libboost-dev graphviz
  environment:
    IBIS_TEST_SQLITE_DB_PATH: $HOME/ibis-testing-data/ibis_testing.db
    IBIS_TEST_POSTGRES_DB: circle_test
    IBIS_TEST_CRUNCHBASE_DB: $HOME/crunchbase.db

    # The following environment variables are necessary to run impala tests
    IBIS_TEST_IMPALA_HOST: impala
    IBIS_TEST_IMPALA_PORT: 21050
    IBIS_TEST_NN_HOST: impala
    IBIS_TEST_WEBHDFS_PORT: 50070
    IBIS_TEST_WEBHDFS_USER: ubuntu
  post:
    # download the crunchbase sqlite database, for lineage testing
    - wget https://storage.googleapis.com/ibis-ci-data/crunchbase.db

    # download the data
    - wget https://storage.googleapis.com/ibis-ci-data/ibis-testing-data.tar.gz

    # untar it
    - tar xvzf ibis-testing-data.tar.gz

  services:
    - docker

dependencies:
  cache_directories:
    - ~/docker
  override:
    - >
      if [[ -e ~/docker/impala.tar ]]; then
        echo "Loading impala docker image from cache"
        docker load -i ~/docker/impala.tar
      else
        echo "Pulling impala docker image from Docker Hub"
        docker pull cpcloud86/impala:metastore
        mkdir -p ~/docker
        docker save -o ~/docker/impala.tar cpcloud86/impala:metastore
      fi
    - pip install -U pip
    - cd $(pyenv root); git pull
    - pip install -U tox tox-pyenv
  post:

    # run the docker image, exposing relevant ports
    - docker run -it -d --name impala --hostname impala -p 50070:50070 -p 21050:21050 cpcloud86/impala:metastore

    # map the docker container's IP address to a human-readable hostname
    - echo "$(docker inspect --format '{{.NetworkSettings.IPAddress}}' impala) impala" | sudo tee -a /etc/hosts

    # make sure the previous step worked
    - ping -c 1 impala

    # wait for impala to start accepting queries
    - while ! sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' impala)" -- impala-shell -i impala -q 'SELECT VERSION() AS version' 2> /dev/null; do sleep 0; done

    # make sure hiveuser has permissions on tables in the public schema in the metastore database
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' impala)" -- psql -U hiveuser -d metastore -c 'SELECT * FROM "VERSION"'

    # make sure the hive metastore is working
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' impala)" -- hive -e 'show tables'

test:
  override:
    - case $CIRCLE_NODE_INDEX in 0) ci/run.sh 2.7.12 ;; 1) ci/run.sh 3.4.4 ;; 2) ci/run.sh 3.5.3 ;; 3) ci/run.sh 3.6.1 ;; esac:
        parallel: true
