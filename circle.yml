machine:
  python:
    version: 3.6.1
  pre:
    # upgrade sqlite3 to # make sure we have the "instr" function available
    - sudo apt-get -qq install --only-upgrade sqlite3
    # clang/boost for UDFs and graphviz for visualization
    - sudo apt-get -qq install clang libboost-dev graphviz
  environment:
    IBIS_TEST_SQLITE_DB_PATH: $HOME/ibis-testing-data/ibis_testing.db
    IBIS_TEST_POSTGRES_DB: circle_test
    IBIS_TEST_CRUNCHBASE_DB: $HOME/crunchbase.db

    # The following environment variables are necessary to run impala tests
    IBIS_TEST_IMPALA_HOST: impala
    IBIS_TEST_IMPALA_PORT: 21050
    IBIS_TEST_NN_HOST: impala
    IBIS_TEST_WEBHDFS_PORT: 50070
    IBIS_TEST_WEBHDFS_USER: ubuntu

    DOCKERHUB_USER: cpcloud86
    DOCKER_IMAGE_NAME: impala
    DOCKER_IMAGE_TAG: java7
    DOCKER_IMAGE: $DOCKERHUB_USER/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
    CACHED_DOCKER_IMAGE: $DOCKER_IMAGE_NAME-$DOCKER_IMAGE_TAG
  post:
    # download the crunchbase sqlite database, for lineage testing
    - wget https://storage.googleapis.com/ibis-ci-data/crunchbase.db

    # download the data
    - wget https://storage.googleapis.com/ibis-ci-data/ibis-testing-data.tar.gz

    # untar it
    - tar xvzf ibis-testing-data.tar.gz

  services:
    - docker

dependencies:
  cache_directories:
    - ~/docker
  override:
    - >
      if [[ -e ~/docker/$CACHED_DOCKER_IMAGE.tar ]]; then
        echo "Loading impala docker image from cache"
        docker load -i ~/docker/$CACHED_DOCKER_IMAGE.tar
      else
        echo "Pulling impala docker image from Docker Hub"
        docker pull $DOCKER_IMAGE
        rm -rf ~/docker
        mkdir -p ~/docker
        echo "Saving image $DOCKER_IMAGE to $HOME/docker/$CACHED_DOCKER_IMAGE.tar"
        docker save -o ~/docker/$CACHED_DOCKER_IMAGE.tar $DOCKER_IMAGE
      fi
    - pip install -U pip
    - cd $(pyenv root); git pull
    - pip install -U tox tox-pyenv

    # these are used for benchmarking
    - pip install -U asv
    - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/miniconda.sh
    - bash $HOME/miniconda.sh -b -p $HOME/miniconda
    - ci/asvconfig.py | tee $HOME/.asv-machine.json
  post:
    # run the docker image, exposing relevant ports
    - docker run --detach --name impala --hostname impala -p $IBIS_TEST_WEBHDFS_PORT -p $IBIS_TEST_IMPALA_PORT $DOCKER_IMAGE

    # map the docker container's IP address to a human-readable hostname
    - echo "$(docker inspect --format '{{.NetworkSettings.IPAddress}}' impala) impala" | sudo tee -a /etc/hosts

    # make sure the previous step worked
    - ping -c 1 impala

    # wait for impala to start accepting queries
    - >
      CID=$(docker inspect --format '{{.Id}}' impala)

      CID_PATH=/var/lib/docker/containers/$CID/config.lxc

      while ! sudo lxc-attach -n $CID -f $CID_PATH -- impala-shell -i impala -q 'SELECT VERSION() AS version'; do
        sleep 10
      done

    - >
      CID=$(docker inspect --format '{{.Id}}' impala)

      CID_PATH=/var/lib/docker/containers/$CID/config.lxc

      sudo lxc-attach -n $CID -f $CID_PATH -- psql -U hiveuser -d metastore -c 'SELECT * FROM "VERSION"'

    - >
      CID=$(docker inspect --format '{{.Id}}' impala)

      CID_PATH=/var/lib/docker/containers/$CID/config.lxc

      sudo lxc-attach -n $CID -f $CID_PATH -- hive -e 'SHOW TABLES'

test:
  override:
    - case $CIRCLE_NODE_INDEX in 0) ci/run.sh 2.7.12 ;; 1) ci/run.sh 3.4.4 ;; 2) ci/run.sh 3.5.3 ;; 3) ci/run.sh 3.6.1 ;; esac:
        parallel: true

# Run benchmarks
deployment:
  pr:  # PRs
    branch: /^(?!master$).*$/
    commands:
      - git remote add upstream git://github.com/ibis-project/ibis.git
      - git fetch upstream refs/heads/master
      - PATH="$HOME/miniconda/bin:$PATH" asv continuous -f 1.5 -e upstream/master ${CIRCLE_SHA1} || echo > /dev/null
  master:  # Merges to master
    branch: master
    owner: ibis-project
    commands:
      - git remote add upstream git://github.com/ibis-project/ibis.git
      - git fetch upstream refs/heads/master
      - PATH="$HOME/miniconda/bin:$PATH" asv continuous -f 1.5 -e upstream/master^ ${CIRCLE_SHA1} || echo > /dev/null
