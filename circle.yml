machine:
  python:
    version: 3.4.3
  pre:
    # upgrade sqlite3 to # make sure we have instr
    - sudo apt-get -qq install --only-upgrade sqlite3
    - sudo apt-get -qq install clang libboost-dev
  environment:
    IBIS_TEST_SQLITE_DB_PATH: $HOME/ibis-testing-data/ibis_testing.db
    IBIS_TEST_POSTGRES_DB: circle_test
    IBIS_TEST_CRUNCHBASE_DB: $HOME/crunchbase.db

    # The following environment variables are necessary to run impala tests
    IBIS_TEST_IMPALA_HOST: impala
    IBIS_TEST_IMPALA_PORT: 21050
    IBIS_TEST_NN_HOST: impala
    IBIS_TEST_WEBHDFS_PORT: 50070
    IBIS_TEST_WEBHDFS_USER: ubuntu
  post:
    # download the crunchbase sqlite database, for lineage testing
    - wget https://ibis-resources.s3.amazonaws.com/data/crunchbase/crunchbase.db

    # download the data
    - wget https://ibis-resources.s3.amazonaws.com/testing/ibis-testing-data.tar.gz

    # untar it
    - tar xvzf ibis-testing-data.tar.gz
  services:
    - docker

dependencies:
  override:
    - pip install -U pip
    - pip install click flake8 pylint
    - cd $(pyenv root); git pull
    - pip install -U tox tox-pyenv
    - pyenv install --skip-existing 2.7.9
    - pyenv install --skip-existing 3.4.3
    - pyenv install --skip-existing 3.5.0
    - pyenv install --skip-existing 3.6.0
    - pyenv local 2.7.9 3.4.3 3.5.0 3.6.0
  post:
    # pull down the docker image
    - docker pull cpcloud86/impala:metastore

    # run the docker image, exposing relevant ports
    - docker run -it -d --name impala --hostname impala -p 9000:9000 -p 50010:50010 -p 50020:50020 -p 50070:50070 -p 50075:50075 -p 21000:21000 -p 21050:21050 -p 25000:25000 -p 25010:25010 -p 25020:25020 cpcloud86/impala:metastore

    # map the docker container's IP address to a human-readable hostname
    - echo "$(docker inspect --format '{{.NetworkSettings.IPAddress}}' impala) impala" | sudo tee -a /etc/hosts

    # make sure the previous step worked
    - ping -c 1 impala

    # wait for impala to start accepting queries
    - while ! sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' impala)" -- impala-shell -i impala -q 'SELECT VERSION() AS version' 2> /dev/null; do sleep 0; done

    # make sure hiveuser has permissions on tables in the public schema in the metastore database
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' impala)" -- psql -U hiveuser -d metastore -c 'SELECT * FROM "VERSION"'

    # make sure the hive metastore is working
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' impala)" -- hive -e 'show tables'

    # load the ibis test data into impala and postgres
    - scripts/test_data_admin.py load --data --overwrite --data-dir "$HOME/ibis-testing-data"

database:
  override:
    # load some additional test data for postgres ARRAY types
    - >
      psql -U ubuntu -d $IBIS_TEST_POSTGRES_DB <<EOF
        CREATE TABLE array_types (
          x BIGINT[],
          y TEXT[],
          z FLOAT8[],
          grouper TEXT,
          scalar_column float8
        );

        INSERT INTO array_types VALUES
          (ARRAY[1, 2, 3], ARRAY['a', 'b', 'c'], ARRAY[1.0, 2.0, 3.0], 'a', 1.0),
          (ARRAY[4, 5], ARRAY['d', 'e'], ARRAY[4.0, 5.0], 'a', 2.0),
          (ARRAY[6, NULL], ARRAY['f', NULL], ARRAY[6.0, NULL], 'a', 3.0),
          (ARRAY[NULL, 1, NULL], ARRAY[NULL, 'a', NULL], ARRAY[]::float8[], 'b', 4.0),
          (ARRAY[2, NULL, 3], ARRAY['b', NULL, 'c'], NULL, 'b', 5.0),
          (ARRAY[4, NULL, NULL, 5], ARRAY['d', NULL, NULL, 'e'], ARRAY[4.0, NULL, NULL, 5.0], 'c', 6.0);
      EOF

test:
  override:
    - flake8 --exclude=docs,versioneer.py,.svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg
    - case $CIRCLE_NODE_INDEX in 0) tox -e py27 ;; 1) tox -e py34 ;; 2) tox -e py35 ;; 3) tox -e py36 ;; esac:
        parallel: true
