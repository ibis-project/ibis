version: "3.4"
services:
  clickhouse:
    build:
      context: .
      dockerfile: ./docker/clickhouse/Dockerfile
    image: ibis-clickhouse
    ports:
      - 8123:8123
      - 9000:9000
    networks:
      - clickhouse
  impala:
    depends_on:
      - impala-postgres
      - kudu
    environment:
      PGPASSWORD: postgres
    healthcheck:
      interval: 30s
      retries: 20
      test:
        - CMD-SHELL
        - nc -z 127.0.0.1 21050 && nc -z 127.0.0.1 50070
      timeout: 10s
    hostname: localhost
    image: ibisproject/impala:latest
    ports:
      - 9020:9020
      - 50070:50070
      - 50075:50075
      - 8020:8020
      - 8042:8042
      - 9083:9083
      - 21000:21000
      - 21050:21050
      - 25000:25000
      - 25010:25010
      - 25020:25020
    networks:
      - impala
  impala-postgres:
    user: postgres
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      interval: 10s
      retries: 3
      test:
        - CMD
        - pg_isready
      timeout: 5s
    image: postgres:13.9-alpine
    networks:
      - impala
  kudu:
    cap_add:
      - SYS_TIME
    depends_on:
      - kudu-tserver
    environment:
      KUDU_MASTER: "true"
    image: ibisproject/kudu:latest
    ports:
      - 7051:7051
      - 8051:8051
    networks:
      - impala
  kudu-tserver:
    cap_add:
      - SYS_TIME
    environment:
      KUDU_MASTER: "false"
    image: ibisproject/kudu:latest
    ports:
      - 7050:7050
      - 8050:8050
    networks:
      - impala
  mysql:
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: ibis_testing
      MYSQL_PASSWORD: ibis
      MYSQL_USER: ibis
    healthcheck:
      interval: 10s
      retries: 3
      test:
        - CMD
        - mysqladmin
        - ping
      timeout: 5s
    image: mariadb:10.10.2
    ports:
      - 3306:3306
    networks:
      - mysql
  postgres:
    user: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ibis_testing
      POSTGRES_USER: postgres
    build: ./docker/postgres
    image: ibis-postgres
    healthcheck:
      interval: 10s
      retries: 3
      test:
        - CMD
        - pg_isready
      timeout: 5s
    ports:
      - 5432:5432
    networks:
      - postgres
  mssql:
    environment:
      MSSQL_SA_PASSWORD: 1bis_Testing!
      ACCEPT_EULA: "Y"
    healthcheck:
      interval: 10s
      retries: 3
      test:
        - CMD-SHELL
        - /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$MSSQL_SA_PASSWORD" -Q "DROP DATABASE IF EXISTS [ibis_testing]; CREATE DATABASE [ibis_testing]"
      timeout: 10s
    build:
      context: .
      dockerfile: ./docker/mssql/Dockerfile
    image: ibis-mssql
    ports:
      - 1433:1433
    networks:
      - mssql
  trino-postgres:
    user: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      interval: 10s
      retries: 3
      test:
        - CMD
        - pg_isready
      timeout: 5s
    build: ./docker/postgres
    image: ibis-postgres
    ports:
      - 5433:5432
    networks:
      - trino
  trino:
    depends_on:
      - trino-postgres
    healthcheck:
      interval: 5s
      retries: 6
      test:
        - CMD-SHELL
        - trino --execute 'SELECT 1 AS one'
      timeout: 30s
    image: trinodb/trino:405
    ports:
      - 8080:8080
    networks:
      - trino
    volumes:
      - $PWD/docker/trino/catalog/postgresql.properties:/etc/trino/catalog/postgresql.properties:ro
      - $PWD/docker/trino/catalog/memory.properties:/etc/trino/catalog/memory.properties:ro
      - $PWD/docker/trino/jvm.config:/etc/trino/jvm.config:ro

networks:
  impala:
  mysql:
  mssql:
  clickhouse:
  postgres:
  trino:
