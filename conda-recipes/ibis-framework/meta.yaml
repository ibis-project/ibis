package:
  name: ibis-framework
  version: {{ environ.get('GIT_DESCRIBE_TAG', '').replace('v', '')}}

build:
  number: {{ environ.get('GIT_DESCRIBE_NUMBER', 0) }}
  {% if environ.get('GIT_DESCRIBE_NUMBER', '0') == '0' %}string: py{{ environ.get('PY_VER').replace('.', '') }}_0
  {% else %}string: py{{ environ.get('PY_VER').replace('.', '') }}_{{ environ.get('GIT_BUILD_STR', 'GIT_STUB') }}{% endif %}

source:
  path: ../..

requirements:
  build:
    - enum34  # [py27]
    - numpy >=1.10.0
    - pandas >=0.18.1
    - python
    - setuptools
    - six
    - toolz
  run:
    - enum34  # [py27]
    - numpy >=1.10.0
    - pandas >=0.18.1
    - python
    - setuptools
    - six
    - toolz

test:
  requires:
    - graphviz  # [not (py34 and win)]
    - mock  # [py27]
    - multipledispatch
    - pytest >=3
    - python-graphviz  # [not (py34 and win)]
  imports:
    - ibis
    - ibis.expr
    - ibis.expr.tests
    - ibis.expr.visualize  # [not (py34 and win)]
    - ibis.hive
    - ibis.hive.tests
    - ibis.impala  # [linux]
    - ibis.impala.tests  # [linux]
    - ibis.spark
    - ibis.spark.tests
    - ibis.sql
    - ibis.sql.presto
    - ibis.sql.presto.tests
    - ibis.sql.redshift
    - ibis.sql.redshift.tests
    - ibis.sql.sqlite
    - ibis.sql.sqlite.tests
    - ibis.sql.tests
    - ibis.sql.vertica
    - ibis.sql.vertica.tests
    - ibis.tests
  commands:
    - pytest --version
    - pytest --tb=short --pyargs ibis -m "not impala and not hdfs"

about:
  license: Apache License, Version 2.0
  summary: 'Productivity-centric Python Big Data Framework'
