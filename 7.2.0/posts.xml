<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Ibis</title>
<link>https://ibis-project.org/posts.html</link>
<atom:link href="https://ibis-project.org/posts.xml" rel="self" type="application/rss+xml"/>
<description>the portable Python dataframe library</description>
<generator>quarto-1.4.339</generator>
<lastBuildDate>Mon, 11 Dec 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Ibis versus X: Performance across the ecosystem part 2</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/pydata-performance-part2/index.html</link>
  <description><![CDATA[ 




<p><strong>TL; DR</strong>: Ibis supports both Polars and DataFusion. Both backends are have about the same runtime performance, and lag far behind DuckDB on this workload. There’s negligible performance difference between Ibis and the backend native APIs.</p>
<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>This is part 2 of a series of posts showing performance across various backends that Ibis supports.</p>
<p>Check out <a href="../pydata-performance/">part 1</a> if you haven’t already!</p>
<p>In this post, I’ll continue with the <a href="../../backends/polars.html">Polars</a> and <a href="../../backends/datafusion.html">DataFusion</a> backends.</p>
<p>I show each tool using both the Ibis API and the tool’s native API. We’ll see that the performance difference between these approaches is negligible.</p>
</section>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<p>I ran all of the code in this blog post on a machine with these specs.</p>
<table class="table">
<thead>
<tr class="header">
<th>Component</th>
<th>Specification</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>CPU</td>
<td>AMD EPYC 7B12 (64 threads)</td>
</tr>
<tr class="even">
<td>RAM</td>
<td>94 GiB</td>
</tr>
<tr class="odd">
<td>Disk</td>
<td>1.5 TiB SSD</td>
</tr>
<tr class="even">
<td>OS</td>
<td>NixOS (Linux 6.1.66)</td>
</tr>
</tbody>
</table>
<section id="library-versions" class="level3">
<h3 class="anchored" data-anchor-id="library-versions">Library versions</h3>
<p>Here are the versions I used to run this experiment at the time of writing.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">Dependency</th>
<th style="text-align: left;">Version</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Python</td>
<td style="text-align: left;">3.10.13 (main, Aug 24 2023, 12:59:26) [GCC 12.3.0]</td>
</tr>
<tr class="even">
<td style="text-align: left;">datafusion</td>
<td style="text-align: left;">33.0.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">ibis</td>
<td style="text-align: left;"><a href="https://github.com/ibis-project/ibis/tree/2b54b9800"><code>2b54b9800</code></a></td>
</tr>
<tr class="even">
<td style="text-align: left;">pandas</td>
<td style="text-align: left;">2.1.4</td>
</tr>
<tr class="odd">
<td style="text-align: left;">polars</td>
<td style="text-align: left;">0.19.19</td>
</tr>
<tr class="even">
<td style="text-align: left;">pyarrow</td>
<td style="text-align: left;">14.0.1</td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="running-the-query-across-backends" class="level2">
<h2 class="anchored" data-anchor-id="running-the-query-across-backends">Running the query across backends</h2>
<p>Here are the different Ibis expressions for each backend as well as the same query with native APIs, along with timed executions of the query.</p>
<section id="duckdb" class="level3">
<h3 class="anchored" data-anchor-id="duckdb">DuckDB</h3>
<p>First, let’s run the Ibis + DuckDB version of the query from the original post:</p>
<div class="sourceCode" id="annotated-cell-1" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy"><code class="sourceCode python"><span id="annotated-cell-1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="annotated-cell-1-2"></span>
<span id="annotated-cell-1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="annotated-cell-1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="annotated-cell-1-5"></span>
<span id="annotated-cell-1-6">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-1-7">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="annotated-cell-1-8">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="annotated-cell-1-9">        [</span>
<span id="annotated-cell-1-10">            _.path.re_search(</span>
<span id="annotated-cell-1-11">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="annotated-cell-1-12">            ),</span>
<span id="annotated-cell-1-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="annotated-cell-1-14">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="annotated-cell-1-15">        ]</span>
<span id="annotated-cell-1-16">    )</span>
<span id="annotated-cell-1-17">    .group_by(</span>
<span id="annotated-cell-1-18">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="annotated-cell-1-19">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-1-20">        .re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="annotated-cell-1-21">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="annotated-cell-1-22">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="annotated-cell-1-23">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="annotated-cell-1-24">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="annotated-cell-1-25">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="annotated-cell-1-26">    )</span>
<span id="annotated-cell-1-27">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.nunique())</span>
<span id="annotated-cell-1-28">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="annotated-cell-1-29">    .order_by([_.month.desc(), _.project_count.desc()])</span>
<span id="annotated-cell-1-30">)</span>
<span id="annotated-cell-1-31">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.to_pandas()</span></code></pre></div>
<div id="0eb66682" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">duckdb_ibis_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run duckdb_ibis.py</span>
<span id="cb1-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>33.9 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th">project_count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-11-01</td>
<td>C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-11-01</td>
<td>Rust</td>
<td>190</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-11-01</td>
<td>Fortran</td>
<td>48</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-11-01</td>
<td>Go</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-11-01</td>
<td>Assembly</td>
<td>10</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="datafusion-and-polars" class="level3">
<h3 class="anchored" data-anchor-id="datafusion-and-polars">DataFusion and Polars</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">DataFusion</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Polars</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Ibis</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">DataFusion native</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb3-5"></span>
<span id="cb3-6">ibis.set_backend(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"datafusion"</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb3-9">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="cb3-10">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb3-11">        [</span>
<span id="cb3-12">            _.path.re_search(</span>
<span id="cb3-13">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb3-14">            ),</span>
<span id="cb3-15">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb3-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="cb3-17">        ]</span>
<span id="cb3-18">    )</span>
<span id="cb3-19">    .group_by(</span>
<span id="cb3-20">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb3-21">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-22">        .re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb3-23">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb3-24">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb3-25">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb3-26">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb3-27">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb3-28">    )</span>
<span id="cb3-29">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.nunique())</span>
<span id="cb3-30">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="cb3-31">    .order_by([_.month.desc(), _.project_count.desc()])</span>
<span id="cb3-32">)</span>
<span id="cb3-33">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.to_pandas()</span></code></pre></div>
<div id="f2cf6d58" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">datafusion_ibis_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run datafusion_ibis.py</span>
<span id="cb4-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>8min 54s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th">project_count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-11-01</td>
<td>C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-11-01</td>
<td>Rust</td>
<td>190</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-11-01</td>
<td>Fortran</td>
<td>48</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-11-01</td>
<td>Go</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-11-01</td>
<td>Assembly</td>
<td>10</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<details open="">
<summary>
DataFusion SQL
</summary>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb6-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">month</span>,</span>
<span id="cb6-3">  ext,</span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COUNT</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">DISTINCT</span> project_name) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> project_count</span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> (</span>
<span id="cb6-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb6-7">    project_name,</span>
<span id="cb6-8">    DATE_TRUNC(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'month'</span>, uploaded_on) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">month</span>,</span>
<span id="cb6-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NULLIF</span>(</span>
<span id="cb6-10">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">REPLACE</span>(</span>
<span id="cb6-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">REPLACE</span>(</span>
<span id="cb6-12">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">REPLACE</span>(</span>
<span id="cb6-13">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">REGEXP_REPLACE</span>(</span>
<span id="cb6-14">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">REGEXP_REPLACE</span>(</span>
<span id="cb6-15">                REGEXP_MATCH(path, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CONCAT</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'('</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\.([a-z0-9]+)$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">')'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb6-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cxx|cpp|cc|c|hpp|h'</span>,</span>
<span id="cb6-17">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C/C++'</span>,</span>
<span id="cb6-18">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span></span>
<span id="cb6-19">              ),</span>
<span id="cb6-20">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^f.*$'</span>,</span>
<span id="cb6-21">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fortran'</span>,</span>
<span id="cb6-22">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span></span>
<span id="cb6-23">            ),</span>
<span id="cb6-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rs'</span>,</span>
<span id="cb6-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rust'</span></span>
<span id="cb6-26">          ),</span>
<span id="cb6-27">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'go'</span>,</span>
<span id="cb6-28">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Go'</span></span>
<span id="cb6-29">        ),</span>
<span id="cb6-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asm'</span>,</span>
<span id="cb6-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Assembly'</span></span>
<span id="cb6-32">      ),</span>
<span id="cb6-33">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb6-34">    ) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> ext</span>
<span id="cb6-35">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> pypi</span>
<span id="cb6-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHERE</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COALESCE</span>(</span>
<span id="cb6-37">      ARRAY_LENGTH(</span>
<span id="cb6-38">        REGEXP_MATCH(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$'</span>)</span>
<span id="cb6-39">      ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-40">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb6-41">    )</span>
<span id="cb6-42">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">NOT</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COALESCE</span>(ARRAY_LENGTH(REGEXP_MATCH(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(^|/)test(|s|ing)'</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb6-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">NOT</span> STRPOS(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/site-packages/'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-44">)</span>
<span id="cb6-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHERE</span> ext <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">IS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">NOT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb6-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">GROUP</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">month</span>, ext</span>
<span id="cb6-47"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ORDER</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">month</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">DESC</span>, project_count <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">DESC</span></span></code></pre></div>
</details>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datafusion</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./datafusion_native.sql"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb7-6">    query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read()</span>
<span id="cb7-7"></span>
<span id="cb7-8">ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datafusion.SessionContext()</span>
<span id="cb7-9">ctx.register_parquet(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pypi"</span>, path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="cb7-10">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ctx.sql(query)</span>
<span id="cb7-11"></span>
<span id="cb7-12">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.to_pandas()</span></code></pre></div>
<div id="6c62ff04" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">datafusion_native_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run datafusion_native.py</span>
<span id="cb8-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>9min 4s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th">project_count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-11-01</td>
<td>C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-11-01</td>
<td>Rust</td>
<td>190</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-11-01</td>
<td>Fortran</td>
<td>48</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-11-01</td>
<td>Go</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-11-01</td>
<td>Assembly</td>
<td>10</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Ibis</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Polars native</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb10-5"></span>
<span id="cb10-6">ibis.set_backend(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polars"</span>)</span>
<span id="cb10-7"></span>
<span id="cb10-8">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb10-9">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="cb10-10">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb10-11">        [</span>
<span id="cb10-12">            _.path.re_search(</span>
<span id="cb10-13">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb10-14">            ),</span>
<span id="cb10-15">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb10-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="cb10-17">        ]</span>
<span id="cb10-18">    )</span>
<span id="cb10-19">    .group_by(</span>
<span id="cb10-20">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb10-21">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-22">        .re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb10-23">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb10-24">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb10-25">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb10-26">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb10-27">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb10-28">    )</span>
<span id="cb10-29">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.nunique())</span>
<span id="cb10-30">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="cb10-31">    .order_by([_.month.desc(), _.project_count.desc()])</span>
<span id="cb10-32">)</span>
<span id="cb10-33">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.to_pandas(streaming<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div id="cab318c2" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">polars_ibis_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run polars_ibis.py</span>
<span id="cb11-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>6min 32s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="12">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th">project_count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-11-01</td>
<td>C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-11-01</td>
<td>Rust</td>
<td>190</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-11-01</td>
<td>Fortran</td>
<td>48</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-11-01</td>
<td>Go</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-11-01</td>
<td>Assembly</td>
<td>10</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb13-4"></span>
<span id="cb13-5">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb13-6">    pl.scan_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="cb13-7">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb13-8">        [</span>
<span id="cb13-9">            pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(</span>
<span id="cb13-10">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb13-11">            ),</span>
<span id="cb13-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb13-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>, literal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb13-14">        ]</span>
<span id="cb13-15">    )</span>
<span id="cb13-16">    .with_columns(</span>
<span id="cb13-17">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"uploaded_on"</span>).dt.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1mo"</span>),</span>
<span id="cb13-18">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>)</span>
<span id="cb13-19">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(pattern<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, group_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-20">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace_all(pattern<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb13-21">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace_all(pattern<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb13-22">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>, literal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-23">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>, literal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-24">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>, literal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-25">        .replace({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}),</span>
<span id="cb13-26">    )</span>
<span id="cb13-27">    .group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb13-28">    .agg(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>).n_unique())</span>
<span id="cb13-29">    .drop_nulls([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb13-30">    .sort([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>], descending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-31">)</span>
<span id="cb13-32"></span>
<span id="cb13-33">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.collect(streaming<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).to_pandas()</span></code></pre></div>
<div id="92d6341d" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">polars_native_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run polars_native.py</span>
<span id="cb14-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>6min 54s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="14">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th">project_count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-11-01</td>
<td>C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-11-01</td>
<td>Rust</td>
<td>190</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-11-01</td>
<td>Fortran</td>
<td>48</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-11-01</td>
<td>Go</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-11-01</td>
<td>Assembly</td>
<td>10</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="takeaways" class="level2">
<h2 class="anchored" data-anchor-id="takeaways">Takeaways</h2>
<p><strong>Ibis + DuckDB is the only system tested that handles this workload well out of the box</strong></p>
<ul>
<li>Both Polars and DataFusion are much slower than DuckDB and Dask on this workload.</li>
<li>Polars memory use fluctuates quite bit, while DataFusion’s memory profile is similar to DuckDB.</li>
</ul>
<p>Let’s recap the results with some numbers:</p>
<section id="numbers" class="level3">
<h3 class="anchored" data-anchor-id="numbers">Numbers</h3>
<table class="table">
<thead>
<tr class="header">
<th>Toolset</th>
<th style="text-align: right;">Data size</th>
<th style="text-align: right;">Duration</th>
<th style="text-align: right;">Throughput</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Ibis + DuckDB</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">34 seconds</td>
<td style="text-align: right;">763 MiB/s</td>
</tr>
<tr class="even">
<td>Ibis + Polars</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">393 seconds</td>
<td style="text-align: right;">66 MiB/s</td>
</tr>
<tr class="odd">
<td>Polars native API</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">415 seconds</td>
<td style="text-align: right;">62 MiB/s</td>
</tr>
<tr class="even">
<td>Ibis + DataFusion</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">535 seconds</td>
<td style="text-align: right;">48 MiB/s</td>
</tr>
<tr class="odd">
<td>DataFusion native API</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">545 seconds</td>
<td style="text-align: right;">47 MiB/s</td>
</tr>
</tbody>
</table>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
The Polars run durations were highly variable
</div>
</div>
<div class="callout-body-container callout-body">
<p>I couldn’t figure out how to get consistent run times.</p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>If you’re considering Polars for new code, give Ibis a try with the <a href="../../backends/duckdb.html">DuckDB backend</a>.</p>
<p>You’ll get better performance than Polars on some workloads, and with a broader cross-backend API that helps you scale from development to production.</p>
<p>If you find that Polars has better performance than DuckDB on a particular workload you can always switch to the Polars backend for that workload.</p>
<p>Everyone wins!</p>
<p>In the next post in this series we’ll cover the cloud backends: Snowflake, BigQuery, Trino and ClickHouse.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>case study</category>
  <category>ecosystem</category>
  <category>performance</category>
  <guid>https://ibis-project.org/posts/pydata-performance-part2/index.html</guid>
  <pubDate>Mon, 11 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis + DuckDB geospatial: a match made on Earth</title>
  <dc:creator>Naty Clementi</dc:creator>
  <link>https://ibis-project.org/posts/ibis-duckdb-geospatial/index.html</link>
  <description><![CDATA[ 




<p>Ibis now has support for <a href="https://gist.github.com/ncclementi/fbc5564af709e2d7f8882821e3a8649f">DuckDB geospatial functions</a>!</p>
<p>This blogpost showcases some examples of the geospatial API for the DuckDB backend. The material is inspired by the <a href="https://geog-414.gishub.org/book/duckdb/07_spatial_relationships.html">“DuckDB: Spatial Relationships”</a> lesson from <a href="https://geog-414.gishub.org/book/preface/instructor.html">Dr.&nbsp;Qiusheng Wu</a>’s course “Spatial Data Management” from the Department of Geography &amp; Sustainability at the University of Tennessee, Knoxville.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can check Dr.&nbsp;Qiusheng Wu’s full Spatial Data Management course material on its <a href="https://geog-414.gishub.org/index.html">website</a>, and the classes are also on <a href="https://www.youtube.com/watch?v=A4TOAdsXsEs&amp;list=PLAxJ4-o7ZoPe9SkgnophygyLjTDBzIEbi">YouTube</a>.</p>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<p>We are going to be working with data from New York City. The database contains multiple tables with information about subway stations, streets, neighborhood, census data and, homicides. The datasets in the database are in NAD83 / UTM zone 18N projection, EPSG:26918.</p>
<div id="7df3812b" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> zipfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ZipFile</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlretrieve</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download and unzip</span></span>
<span id="cb1-6">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://open.gishub.org/data/duckdb/nyc_data.db.zip"</span></span>
<span id="cb1-7">zip_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_data.db.zip"</span>)</span>
<span id="cb1-8">db_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_data.db"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> zip_path.exists():</span>
<span id="cb1-11">    urlretrieve(url, zip_path)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> db_path.exists():</span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> ZipFile(zip_path) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> zip_file:</span>
<span id="cb1-15">        zip_file.extract(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_data.db"</span>)</span></code></pre></div>
</div>
</section>
<section id="lets-get-started" class="level2">
<h2 class="anchored" data-anchor-id="lets-get-started">Let’s get started</h2>
<p>The beauty of spatial databases is that they allow us to both store <em>and</em> compute over geometries.</p>
<div id="8de23a4e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb2-3"></span>
<span id="cb2-4">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.duckdb.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_data.db"</span>)</span>
<span id="cb2-7">con.list_tables()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>['nyc_census_blocks',
 'nyc_homicides',
 'nyc_neighborhoods',
 'nyc_streets',
 'nyc_subway_stations']</code></pre>
</div>
</div>
<p>We have multiple tables with information about New York City. Following Dr.&nbsp;Wu’s class, we’ll take a look at some spatial relations.</p>
<p>We can start by taking a peek at the <code>nyc_subway_stations</code> table.</p>
<div id="25f10bca" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">subway_stations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_subway_stations"</span>)</span>
<span id="cb4-2">subway_stations</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> OBJECTID </span>┃<span style="font-weight: bold"> ID      </span>┃<span style="font-weight: bold"> NAME         </span>┃<span style="font-weight: bold"> ALT_NAME        </span>┃<span style="font-weight: bold"> CROSS_ST        </span>┃<span style="font-weight: bold"> LONG_NAME                               </span>┃<span style="font-weight: bold"> LABEL                             </span>┃<span style="font-weight: bold"> BOROUGH   </span>┃<span style="font-weight: bold"> NGHBHD </span>┃<span style="font-weight: bold"> ROUTES </span>┃<span style="font-weight: bold"> TRANSFERS </span>┃<span style="font-weight: bold"> COLOR        </span>┃<span style="font-weight: bold"> EXPRESS </span>┃<span style="font-weight: bold"> CLOSED </span>┃<span style="font-weight: bold"> geom                             </span>┃
┡━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>              │
├──────────┼─────────┼──────────────┼─────────────────┼─────────────────┼─────────────────────────────────────────┼───────────────────────────────────┼───────────┼────────┼────────┼───────────┼──────────────┼─────────┼────────┼──────────────────────────────────┤
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">376.0</span> │ <span style="color: #008000; text-decoration-color: #008000">Cortlandt St</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #008000; text-decoration-color: #008000">Church St      </span> │ <span style="color: #008000; text-decoration-color: #008000">Cortlandt St (R,W) Manhattan           </span> │ <span style="color: #008000; text-decoration-color: #008000">Cortlandt St (R,W)               </span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">R,W   </span> │ <span style="color: #008000; text-decoration-color: #008000">R,W      </span> │ <span style="color: #008000; text-decoration-color: #008000">YELLOW      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583521.854</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4507077.863</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.0</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.0</span> │ <span style="color: #008000; text-decoration-color: #008000">Rector St   </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #008000; text-decoration-color: #008000">Rector St (1) Manhattan                </span> │ <span style="color: #008000; text-decoration-color: #008000">Rector St (1)                    </span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">1     </span> │ <span style="color: #008000; text-decoration-color: #008000">1        </span> │ <span style="color: #008000; text-decoration-color: #008000">RED         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583324.487</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506805.373</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.0</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span> │ <span style="color: #008000; text-decoration-color: #008000">South Ferry </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #008000; text-decoration-color: #008000">South Ferry (1) Manhattan              </span> │ <span style="color: #008000; text-decoration-color: #008000">South Ferry (1)                  </span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">1     </span> │ <span style="color: #008000; text-decoration-color: #008000">1        </span> │ <span style="color: #008000; text-decoration-color: #008000">RED         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583304.182</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506069.654</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">125.0</span> │ <span style="color: #008000; text-decoration-color: #008000">138th St    </span> │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">138th St / Grand Concourse (4,5) Bronx </span> │ <span style="color: #008000; text-decoration-color: #008000">138th St / Grand Concourse (4,5) </span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">4,5   </span> │ <span style="color: #008000; text-decoration-color: #008000">4,5      </span> │ <span style="color: #008000; text-decoration-color: #008000">GREEN       </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">590250.106</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4518558.02</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span>  │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">126.0</span> │ <span style="color: #008000; text-decoration-color: #008000">149th St    </span> │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">149th St / Grand Concourse (4) Bronx   </span> │ <span style="color: #008000; text-decoration-color: #008000">149th St / Grand Concourse (4)   </span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">4     </span> │ <span style="color: #008000; text-decoration-color: #008000">2,4,5    </span> │ <span style="color: #008000; text-decoration-color: #008000">GREEN       </span> │ <span style="color: #008000; text-decoration-color: #008000">express</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">590454.74</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4519145.72</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span>   │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.0</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">45.0</span> │ <span style="color: #008000; text-decoration-color: #008000">149th St    </span> │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">149th St / Grand Concourse (2,5) Bronx </span> │ <span style="color: #008000; text-decoration-color: #008000">149th St / Grand Concourse (2,5) </span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">2,5   </span> │ <span style="color: #008000; text-decoration-color: #008000">2,4,5    </span> │ <span style="color: #008000; text-decoration-color: #008000">RED-GREEN   </span> │ <span style="color: #008000; text-decoration-color: #008000">express</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">590465.893</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4519168.697</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">127.0</span> │ <span style="color: #008000; text-decoration-color: #008000">161st St    </span> │ <span style="color: #008000; text-decoration-color: #008000">Yankee Stadium </span> │ <span style="color: #008000; text-decoration-color: #008000">River Ave      </span> │ <span style="color: #008000; text-decoration-color: #008000">161st St / Yankee Stadium (B,D,4) Bronx</span> │ <span style="color: #008000; text-decoration-color: #008000">161st St / Yankee Stadium (B,D,4)</span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">B,D,4 </span> │ <span style="color: #008000; text-decoration-color: #008000">B,D,4    </span> │ <span style="color: #008000; text-decoration-color: #008000">GREEN-ORANGE</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">590573.169</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4520214.766</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">208.0</span> │ <span style="color: #008000; text-decoration-color: #008000">167th St    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">167th St (B,D) Bronx                   </span> │ <span style="color: #008000; text-decoration-color: #008000">167th St (B,D)                   </span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">B,D   </span> │ <span style="color: #008000; text-decoration-color: #008000">B,D      </span> │ <span style="color: #008000; text-decoration-color: #008000">ORANGE      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">591252.831</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4520950.353</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">128.0</span> │ <span style="color: #008000; text-decoration-color: #008000">167th St    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #008000; text-decoration-color: #008000">River Ave      </span> │ <span style="color: #008000; text-decoration-color: #008000">167th St (4) Bronx                     </span> │ <span style="color: #008000; text-decoration-color: #008000">167th St (4)                     </span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">4     </span> │ <span style="color: #008000; text-decoration-color: #008000">4        </span> │ <span style="color: #008000; text-decoration-color: #008000">GREEN       </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">590946.397</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4521077.319</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">209.0</span> │ <span style="color: #008000; text-decoration-color: #008000">170th St    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #008000; text-decoration-color: #008000">Grand Concourse</span> │ <span style="color: #008000; text-decoration-color: #008000">170th St (B,D) Bronx                   </span> │ <span style="color: #008000; text-decoration-color: #008000">170th St (B,D)                   </span> │ <span style="color: #008000; text-decoration-color: #008000">Bronx    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">B,D   </span> │ <span style="color: #008000; text-decoration-color: #008000">B,D      </span> │ <span style="color: #008000; text-decoration-color: #008000">ORANGE      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">591583.611</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4521434.847</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                │
└──────────┴─────────┴──────────────┴─────────────────┴─────────────────┴─────────────────────────────────────────┴───────────────────────────────────┴───────────┴────────┴────────┴───────────┴──────────────┴─────────┴────────┴──────────────────────────────────┘
</pre>
</div>
</div>
<p>Notice that the last column has a <code>geometry</code> type, and in this case it contains points that represent the location of each subway station. Let’s grab the entry for the Broad St subway station.</p>
<div id="0deec4fb" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">broad_station <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subway_stations.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(subway_stations.NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Broad St"</span>)</span>
<span id="cb5-2">broad_station</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> OBJECTID </span>┃<span style="font-weight: bold"> ID      </span>┃<span style="font-weight: bold"> NAME     </span>┃<span style="font-weight: bold"> ALT_NAME </span>┃<span style="font-weight: bold"> CROSS_ST </span>┃<span style="font-weight: bold"> LONG_NAME                  </span>┃<span style="font-weight: bold"> LABEL            </span>┃<span style="font-weight: bold"> BOROUGH   </span>┃<span style="font-weight: bold"> NGHBHD </span>┃<span style="font-weight: bold"> ROUTES </span>┃<span style="font-weight: bold"> TRANSFERS </span>┃<span style="font-weight: bold"> COLOR  </span>┃<span style="font-weight: bold"> EXPRESS </span>┃<span style="font-weight: bold"> CLOSED </span>┃<span style="font-weight: bold"> geom                             </span>┃
┡━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>              │
├──────────┼─────────┼──────────┼──────────┼──────────┼────────────────────────────┼──────────────────┼───────────┼────────┼────────┼───────────┼────────┼─────────┼────────┼──────────────────────────────────┤
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">332.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">304.0</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">Wall St </span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St (J,M,Z) Manhattan</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St (J,M,Z)</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">J,M,Z </span> │ <span style="color: #008000; text-decoration-color: #008000">J,M,Z    </span> │ <span style="color: #008000; text-decoration-color: #008000">BROWN </span> │ <span style="color: #008000; text-decoration-color: #008000">express</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583571.906</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506714.341</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
└──────────┴─────────┴──────────┴──────────┴──────────┴────────────────────────────┴──────────────────┴───────────┴────────┴────────┴───────────┴────────┴─────────┴────────┴──────────────────────────────────┘
</pre>
</div>
</div>
<section id="geo_equals-st_equals" class="level3">
<h3 class="anchored" data-anchor-id="geo_equals-st_equals"><code>geo_equals</code> (<code>ST_Equals</code>)</h3>
<p>In DuckDB <code>ST_Equals</code> returns <code>True</code> if two geometries are topologically equal. This means that they have the same dimension and identical coordinate values, although the order of the vertices may be different.</p>
<p>The following is a bit redundant but we can check if our <code>"Broad St"</code> point matches only one point in our data using <code>geo_equals</code></p>
<div id="849bcb65" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">subway_stations.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(subway_stations.geom.geo_equals(broad_station.geom))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> OBJECTID </span>┃<span style="font-weight: bold"> ID      </span>┃<span style="font-weight: bold"> NAME     </span>┃<span style="font-weight: bold"> ALT_NAME </span>┃<span style="font-weight: bold"> CROSS_ST </span>┃<span style="font-weight: bold"> LONG_NAME                  </span>┃<span style="font-weight: bold"> LABEL            </span>┃<span style="font-weight: bold"> BOROUGH   </span>┃<span style="font-weight: bold"> NGHBHD </span>┃<span style="font-weight: bold"> ROUTES </span>┃<span style="font-weight: bold"> TRANSFERS </span>┃<span style="font-weight: bold"> COLOR  </span>┃<span style="font-weight: bold"> EXPRESS </span>┃<span style="font-weight: bold"> CLOSED </span>┃<span style="font-weight: bold"> geom                             </span>┃
┡━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>              │
├──────────┼─────────┼──────────┼──────────┼──────────┼────────────────────────────┼──────────────────┼───────────┼────────┼────────┼───────────┼────────┼─────────┼────────┼──────────────────────────────────┤
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">332.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">304.0</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">Wall St </span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St (J,M,Z) Manhattan</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St (J,M,Z)</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">J,M,Z </span> │ <span style="color: #008000; text-decoration-color: #008000">J,M,Z    </span> │ <span style="color: #008000; text-decoration-color: #008000">BROWN </span> │ <span style="color: #008000; text-decoration-color: #008000">express</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583571.906</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506714.341</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
└──────────┴─────────┴──────────┴──────────┴──────────┴────────────────────────────┴──────────────────┴───────────┴────────┴────────┴───────────┴────────┴─────────┴────────┴──────────────────────────────────┘
</pre>
</div>
</div>
<p>We can also write this query without using <code>broad_station</code> as a variable, and with the help of the deferred expressions API, also known as <a href="../../how-to/analytics/chain_expressions.html">the underscore API</a>.</p>
<div id="4d7c5c5f" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">subway_stations.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.geom.geo_equals(_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Broad St"</span>).geom))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> OBJECTID </span>┃<span style="font-weight: bold"> ID      </span>┃<span style="font-weight: bold"> NAME     </span>┃<span style="font-weight: bold"> ALT_NAME </span>┃<span style="font-weight: bold"> CROSS_ST </span>┃<span style="font-weight: bold"> LONG_NAME                  </span>┃<span style="font-weight: bold"> LABEL            </span>┃<span style="font-weight: bold"> BOROUGH   </span>┃<span style="font-weight: bold"> NGHBHD </span>┃<span style="font-weight: bold"> ROUTES </span>┃<span style="font-weight: bold"> TRANSFERS </span>┃<span style="font-weight: bold"> COLOR  </span>┃<span style="font-weight: bold"> EXPRESS </span>┃<span style="font-weight: bold"> CLOSED </span>┃<span style="font-weight: bold"> geom                             </span>┃
┡━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>              │
├──────────┼─────────┼──────────┼──────────┼──────────┼────────────────────────────┼──────────────────┼───────────┼────────┼────────┼───────────┼────────┼─────────┼────────┼──────────────────────────────────┤
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">332.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">304.0</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">Wall St </span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St (J,M,Z) Manhattan</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St (J,M,Z)</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">J,M,Z </span> │ <span style="color: #008000; text-decoration-color: #008000">J,M,Z    </span> │ <span style="color: #008000; text-decoration-color: #008000">BROWN </span> │ <span style="color: #008000; text-decoration-color: #008000">express</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583571.906</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506714.341</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
└──────────┴─────────┴──────────┴──────────┴──────────┴────────────────────────────┴──────────────────┴───────────┴────────┴────────┴───────────┴────────┴─────────┴────────┴──────────────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="intersect-st_intersect" class="level3">
<h3 class="anchored" data-anchor-id="intersect-st_intersect"><code>intersect</code> (ST_Intersect)</h3>
<p>Let’s locate the neighborhood of the “Broad Street” subway station using the geospatial <code>intersect</code> function. The <code>intersect</code> function returns <code>True</code> if two geometries have any points in common.</p>
<div id="d4bbf819" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">boroughs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_neighborhoods"</span>)</span>
<span id="cb8-2">boroughs</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> BORONAME      </span>┃<span style="font-weight: bold"> NAME                     </span>┃<span style="font-weight: bold"> geom                                                                             </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>                                                              │
├───────────────┼──────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Brooklyn     </span> │ <span style="color: #008000; text-decoration-color: #008000">Bensonhurst             </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">582771.426</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4495167.427</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">584651.294</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4497541.643</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">585422.281</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">East Village            </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">585508.753</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4509691.267</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586826.357</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4508984.188</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586726.827</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">West Village            </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583263.278</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4509242.626</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583276.82</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4509378.825</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583473.971</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Bronx    </span> │ <span style="color: #008000; text-decoration-color: #008000">Throggs Neck            </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">597640.009</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4520272.72</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">597647.746</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4520617.824</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">597805.462</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Bronx    </span> │ <span style="color: #008000; text-decoration-color: #008000">Wakefield-Williamsbridge</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">595285.205</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4525938.798</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">595348.545</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4526158.777</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">595672</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4527</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Queens       </span> │ <span style="color: #008000; text-decoration-color: #008000">Auburndale              </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">600973.009</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4510338.857</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">601002.162</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4510743.044</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">601131.315</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">Battery Park            </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583408.101</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4508093.111</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583356.048</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4507665.145</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583260.947</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">Carnegie Hill           </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">588501.208</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4515525.88</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">588125.03</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4514806.77</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">587702.963</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">451</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Staten Island</span> │ <span style="color: #008000; text-decoration-color: #008000">Mariners Harbor         </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">570300.108</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4497031.156</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">570393.836</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4497227.426</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">570478.075</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Staten Island</span> │ <span style="color: #008000; text-decoration-color: #008000">Rossville               </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">564664.957</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4489358.427</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">564771.457</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4489415.865</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">564783.746</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │
└───────────────┴──────────────────────────┴──────────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<div id="401edb8b" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">boroughs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(boroughs.geom.intersects(broad_station.select(broad_station.geom).to_array()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> BORONAME  </span>┃<span style="font-weight: bold"> NAME               </span>┃<span style="font-weight: bold"> geom                                                                             </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>                                                              │
├───────────┼────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #008000; text-decoration-color: #008000">Financial District</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTIPOLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583356.048</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4507665.145</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583505.038</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4507562.36</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583828.604</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
└───────────┴────────────────────┴──────────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="d_within-st_dwithin" class="level3">
<h3 class="anchored" data-anchor-id="d_within-st_dwithin"><code>d_within</code> (ST_DWithin)</h3>
<p>We can also find the streets near (say, within 10 meters) the Broad St subway station using the <code>d_within</code> function. The <code>d_within</code> function returns True if the geometries are within a given distance.</p>
<div id="98468f9c" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">streets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_streets"</span>)</span>
<span id="cb10-2">streets</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ID    </span>┃<span style="font-weight: bold"> NAME            </span>┃<span style="font-weight: bold"> ONEWAY </span>┃<span style="font-weight: bold"> TYPE          </span>┃<span style="font-weight: bold"> geom                                                                             </span>┃
┡━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>                                                              │
├───────┼─────────────────┼────────┼───────────────┼──────────────────────────────────────────────────────────────────────────────────┤
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Shore Pky S    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">residential  </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586785.477</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4492901.001</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586898.232</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4492943.725</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">587118.98</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">footway      </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586645.007</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4504977.75</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586664.225</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4504988.544</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586672.151</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3</span> │ <span style="color: #008000; text-decoration-color: #008000">Avenue O       </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">residential  </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586750.302</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4496109.722</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586837.373</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4496123.393</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586929.08</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span> │ <span style="color: #008000; text-decoration-color: #008000">Walsh Ct       </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">residential  </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586728.696</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4497971.053</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586886.358</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4498000.536</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">))</span><span style="font-weight: bold">&gt;</span>             │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">motorway_link</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586587.053</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4510088.25</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586641.734</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4510156.835</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">))</span><span style="font-weight: bold">&gt;</span>              │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span> │ <span style="color: #008000; text-decoration-color: #008000">Avenue Z       </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">residential  </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586792.159</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4493279.322</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586978.534</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4493308.473</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">587056.76</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7</span> │ <span style="color: #008000; text-decoration-color: #008000">Dank Ct        </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">residential  </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586794.754</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4493361.729</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586966.095</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4493387.928</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">))</span><span style="font-weight: bold">&gt;</span>             │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span> │ <span style="color: #008000; text-decoration-color: #008000">Cumberland Walk</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">footway      </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586657.468</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4505324.904</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586692.489</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4505320.983</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586707.76</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9</span> │ <span style="color: #008000; text-decoration-color: #008000">Cumberland Walk</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">footway      </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586670.712</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4505521.567</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586667.915</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4505500.551</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586657.46</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">residential  </span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586598.326</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4510424.446</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586602.314</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4510430.044</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">586604.94</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │
└───────┴─────────────────┴────────┴───────────────┴──────────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>Using the deferred API, we can check which streets are within <code>d=10</code> meters of distance.</p>
<div id="d6bc1a10" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">sts_near_broad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> streets.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.geom.d_within(broad_station.select(_.geom).to_array(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb11-2">sts_near_broad</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ID    </span>┃<span style="font-weight: bold"> NAME      </span>┃<span style="font-weight: bold"> ONEWAY </span>┃<span style="font-weight: bold"> TYPE         </span>┃<span style="font-weight: bold"> geom                                                                             </span>┃
┡━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>                                                              │
├───────┼───────────┼────────┼──────────────┼──────────────────────────────────────────────────────────────────────────────────┤
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17394</span> │ <span style="color: #008000; text-decoration-color: #008000">Wall St  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">unclassified</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583483.954</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506785.646</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583522.11</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506758.431</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583571.509</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17399</span> │ <span style="color: #008000; text-decoration-color: #008000">Broad St </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">unclassified</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583571.509</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506715.578</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583529.136</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506622.066</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583509.85</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17445</span> │ <span style="color: #008000; text-decoration-color: #008000">Nassau St</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">unclassified</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583571.509</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506715.578</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583610.912</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506780.181</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583641.80</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
└───────┴───────────┴────────┴──────────────┴──────────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>In the previous query, <code>streets</code> and <code>broad_station</code> are different tables. We use <a href="../../reference/expression-tables.html#ibis.expr.types.relations.Table.to_array"><code>to_array()</code></a> to generate a scalar subquery from a table with a single column (whose shape is scalar).</p>
</div>
</div>
<p>To visualize the findings, we will convert the tables to GeoPandas DataFrames.</p>
<div id="9de9f8f1" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">broad_station_gdf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> broad_station.to_pandas()</span>
<span id="cb12-2">broad_station_gdf.crs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:26918"</span></span>
<span id="cb12-3"></span>
<span id="cb12-4">sts_near_broad_gdf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sts_near_broad.to_pandas()</span>
<span id="cb12-5">sts_near_broad_gdf.crs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:26918"</span></span>
<span id="cb12-6"></span>
<span id="cb12-7">streets_gdf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> streets.to_pandas()</span>
<span id="cb12-8">streets_gdf.crs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:26918"</span></span></code></pre></div>
</div>
<div id="8b15a55c" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="annotated-cell-12" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-12" data-target-annotation="1">1</button><span id="annotated-cell-12-1" class="code-annotation-target"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> leafmap.deckgl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> leafmap</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-12" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-12" data-code-lines="1" data-code-annotation="1"><code>leafmap.deckgl</code> allows us to visualize multiple layers</span>
</dd>
</dl>
</div>
</div>
<div id="c57bb3ab" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> leafmap.Map()</span>
<span id="cb13-2"></span>
<span id="cb13-3">m.add_vector(broad_station_gdf, get_fill_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb13-4">m.add_vector(sts_near_broad_gdf, get_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb13-5">m.add_vector(streets_gdf, get_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, zoom_to_layer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb13-6">m</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"beaa3074efc24d0482c5352e67deb773","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
</div>
<p>You can zoom in and out, and hover over the map to check on the street names.</p>
</section>
<section id="buffer-st_buffer" class="level3">
<h3 class="anchored" data-anchor-id="buffer-st_buffer"><code>buffer</code> (ST_Buffer)</h3>
<p>Next, we’ll take a look at the homicides table and showcase some additional functionality related to polygon handling.</p>
<div id="3c429549" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">homicides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nyc_homicides"</span>)</span>
<span id="cb14-2">homicides</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> INCIDENT_D </span>┃<span style="font-weight: bold"> BORONAME      </span>┃<span style="font-weight: bold"> NUM_VICTIM </span>┃<span style="font-weight: bold"> PRIMARY_MO </span>┃<span style="font-weight: bold"> ID    </span>┃<span style="font-weight: bold"> WEAPON </span>┃<span style="font-weight: bold"> LIGHT_DARK </span>┃<span style="font-weight: bold"> YEAR  </span>┃<span style="font-weight: bold"> geom                             </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>              │
├────────────┼───────────────┼────────────┼────────────┼───────┼────────┼────────────┼───────┼──────────────────────────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-01</span> │ <span style="color: #008000; text-decoration-color: #008000">Brooklyn     </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">592158.666</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4502210.892</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-04</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">588654.952</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4517855.383</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-05</span> │ <span style="color: #008000; text-decoration-color: #008000">Queens       </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">605800.815</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4505730.608</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-04</span> │ <span style="color: #008000; text-decoration-color: #008000">Queens       </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span> │ <span style="color: #008000; text-decoration-color: #008000">knife </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">594255.157</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4512250.378</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-05</span> │ <span style="color: #008000; text-decoration-color: #008000">Queens       </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">605498.135</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4496052.64</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span>  │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-07</span> │ <span style="color: #008000; text-decoration-color: #008000">Brooklyn     </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">592020.999</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4505733.647</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-10</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">22</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">584055.518</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4511774.724</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-10</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan    </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">23</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">587283.748</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4516908.39</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span>  │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-13</span> │ <span style="color: #008000; text-decoration-color: #008000">Staten Island</span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">570593.125</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4498222.78</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span>  │
│ <span style="color: #800080; text-decoration-color: #800080">2008-01-16</span> │ <span style="color: #008000; text-decoration-color: #008000">Queens       </span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27</span> │ <span style="color: #008000; text-decoration-color: #008000">gun   </span> │ <span style="color: #008000; text-decoration-color: #008000">D         </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">607385.969</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4501506.717</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                │
└────────────┴───────────────┴────────────┴────────────┴───────┴────────┴────────────┴───────┴──────────────────────────────────┘
</pre>
</div>
</div>
<p>Let’s use the <code>buffer</code> method to find homicides near our <code>"Broad St"</code> station point.</p>
<p>The <code>buffer</code> method computes a polygon or multipolygon that represents all points whose distance from a geometry is less than or equal to a given distance.</p>
<div id="18e76d9c" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">broad_station.geom.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> GeoBuffer(geom, 200.0)                                                           </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>                                                              │
├──────────────────────────────────────────────────────────────────────────────────┤
│ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POLYGON</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583771.906</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506714.341</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583768.063</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506675.323</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583756.682</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">450663</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
└──────────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>We can check the area using the <code>area</code> (<code>ST_Area</code>) function, and see that is <img src="https://latex.codecogs.com/png.latex?~%20%5Cpi%20r%5E%7B2%7D=125664"></p>
<div id="70102134" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">broad_station.geom.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).area()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> GeoArea(GeoBuffer(geom, 200.0)) </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                         │
├─────────────────────────────────┤
│                    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">124857.80609</span> │
└─────────────────────────────────┘
</pre>
</div>
</div>
<p>To find if there were any homicides in that area, we can find where the polygon resulting from adding the 200 meters buffer to our “Broad St” station point intersects with the geometry column in our homicides table.</p>
<div id="c11635d0" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">h_near_broad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> homicides.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.geom.intersects(broad_station.select(_.geom.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)).to_array()))</span>
<span id="cb17-2">h_near_broad</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> INCIDENT_D </span>┃<span style="font-weight: bold"> BORONAME  </span>┃<span style="font-weight: bold"> NUM_VICTIM </span>┃<span style="font-weight: bold"> PRIMARY_MO </span>┃<span style="font-weight: bold"> ID    </span>┃<span style="font-weight: bold"> WEAPON </span>┃<span style="font-weight: bold"> LIGHT_DARK </span>┃<span style="font-weight: bold"> YEAR  </span>┃<span style="font-weight: bold"> geom                             </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>              │
├────────────┼───────────┼────────────┼────────────┼───────┼────────┼────────────┼───────┼──────────────────────────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2009-07-07</span> │ <span style="color: #008000; text-decoration-color: #008000">Manhattan</span> │ <span style="color: #008000; text-decoration-color: #008000">1         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3544</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">POINT</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583443.249</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506757.877</span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">)</span><span style="font-weight: bold">&gt;</span> │
└────────────┴───────────┴────────────┴────────────┴───────┴────────┴────────────┴───────┴──────────────────────────────────┘
</pre>
</div>
</div>
<p>It looks like there was one homicide within 200 meters from the “Broad St” station, but from this data we can’t tell the street near which it happened. However, we can check if the homicide point is within a small distance of a street.</p>
<div id="42ec9915" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">h_street <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> streets.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.geom.d_within(h_near_broad.select(_.geom).to_array(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb18-2">h_street</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ID    </span>┃<span style="font-weight: bold"> NAME      </span>┃<span style="font-weight: bold"> ONEWAY </span>┃<span style="font-weight: bold"> TYPE         </span>┃<span style="font-weight: bold"> geom                                                                             </span>┃
┡━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">geospatial:geometry</span>                                                              │
├───────┼───────────┼────────┼──────────────┼──────────────────────────────────────────────────────────────────────────────────┤
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17296</span> │ <span style="color: #008000; text-decoration-color: #008000">Rector St</span> │ <span style="color: #008000; text-decoration-color: #008000">yes   </span> │ <span style="color: #008000; text-decoration-color: #008000">unclassified</span> │ <span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">MULTILINESTRING</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #000000; text-decoration-color: #000000; font-weight: bold">((</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583184.691</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506868.803</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583257.066</span><span style="color: #000000; text-decoration-color: #000000"> </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4506835.054</span><span style="color: #000000; text-decoration-color: #000000">, </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">583324.11</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">&gt;</span> │
└───────┴───────────┴────────┴──────────────┴──────────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>Let’s plot this:</p>
<div id="08c0ea30" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">broad_station_zone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> broad_station.mutate(geom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>broad_station.geom.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>))</span>
<span id="cb19-2">broad_station_zone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> broad_station_zone.to_pandas()</span>
<span id="cb19-3">broad_station_zone.crs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:26918"</span></span>
<span id="cb19-4"></span>
<span id="cb19-5">h_near_broad_gdf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h_near_broad.to_pandas()</span>
<span id="cb19-6">h_near_broad_gdf.crs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:26918"</span></span>
<span id="cb19-7"></span>
<span id="cb19-8">h_street_gdf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h_street.to_pandas()</span>
<span id="cb19-9">h_street_gdf.crs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:26918"</span></span>
<span id="cb19-10"></span>
<span id="cb19-11"></span>
<span id="cb19-12">mh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> leafmap.Map()</span>
<span id="cb19-13">mh.add_vector(broad_station_gdf, get_fill_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>)</span>
<span id="cb19-14">mh.add_vector(broad_station_zone, get_fill_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>, opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb19-15">mh.add_vector(h_near_broad_gdf, get_fill_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb19-16">mh.add_vector(h_street_gdf, get_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb19-17">mh.add_vector(streets_gdf, get_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, zoom_to_layer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb19-18"></span>
<span id="cb19-19">mh</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"28d8e7bc4a654b9ea90837ca5eacce9c","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
</div>
</section>
</section>
<section id="functions-supported-and-next-steps" class="level2">
<h2 class="anchored" data-anchor-id="functions-supported-and-next-steps">Functions supported and next steps</h2>
<p>At the moment in Ibis we have support for around thirty geospatial functions in DuckDB and we will add some more (see list <a href="https://gist.github.com/ncclementi/fbc5564af709e2d7f8882821e3a8649f">here</a>).</p>
<p>We also support reading multiple geospatial formats via <a href="../../backends/duckdb.html#ibis.backends.duckdb.Backend.read_geo"><code>read_geo()</code></a>.</p>
<p>Here are some resources to learn more about Ibis:</p>
<ul>
<li><a href="https://ibis-project.org/">Ibis Docs</a></li>
<li><a href="https://github.com/ibis-project/ibis">Ibis GitHub</a></li>
</ul>
<p>Chat with us on Zulip:</p>
<ul>
<li><a href="https://ibis-project.zulipchat.com/">Ibis Zulip Chat</a></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>duckdb</category>
  <category>geospatial</category>
  <guid>https://ibis-project.org/posts/ibis-duckdb-geospatial/index.html</guid>
  <pubDate>Thu, 07 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis versus X: Performance across the ecosystem part 1</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/pydata-performance/index.html</link>
  <description><![CDATA[ 




<p><strong>TL; DR</strong>: Ibis has a lot of great backends. They’re all good at different things. For working with local data, it’s hard to beat DuckDB on feature set and performance.</p>
<p>Buckle up, it’s going to be a long one.</p>
<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>Ibis maintainer <a href="https://github.com/gforsyth">Gil Forsyth</a> recently wrote a <a href="https://ibis-project.org/posts/querying-pypi-metadata-compiled-languages/">post on our blog</a> replicating <a href="https://sethmlarson.dev/security-developer-in-residence-weekly-report-18"><strong>another</strong> blog post</a> but using Ibis instead of raw SQL.</p>
<p>I thought it would be interesting to see how other tools compare to this setup, so I decided I’d try to do the same workflow on the same machine using a few tools from across the ecosystem.</p>
<p>I chose two incumbents–<a href="https://pandas.pydata.org/">pandas</a> and <a href="https://www.dask.org/">dask</a>–to see how they compare to Ibis + DuckDB on this workload. In part 2 of this series I will compare two newer engines–Polars and DataFusion–to Ibis + DuckDB.</p>
<p>I’ve worked on both pandas and Dask in the past but it’s been such a long time since I’ve used these tools for data analysis that I consider myself rather naive about how to best use them today.</p>
<p>Initially I was interested in API comparisons since usability is really where Ibis shines, but as I started to explore things, I was unable to complete my analysis in some cases due to running out of memory.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This is not a forum to trash the work of others.
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m not interested in tearing down other tools.</p>
<p>Ibis has backends for each of these tools and it’s in everyone’s best interest that all of the tools discussed here work to their full potential.</p>
</div>
</div>
<p>I show each tool using its native API, in an attempt to compare ease-of-use out of the box and maximize each library’s ability to complete the workload.</p>
<p>Let’s dig in.</p>
</section>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<p>I ran all of the code in this blog post on a machine with these specs.</p>
<p>All OS caches were cleared before running this document with</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo sysctl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> vm.drop_caches=3</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Clearing operating system caches <strong>does not represent a realistic usage scenario</strong>
</div>
</div>
<div class="callout-body-container callout-body">
<p>It is a method for putting the tools here on more equal footing. When you’re in the thick of an analysis you’re not going to artificially limit any OS optimizations.</p>
</div>
</div>
<table class="table">
<thead>
<tr class="header">
<th>Component</th>
<th>Specification</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>CPU</td>
<td>AMD EPYC 7B12 (64 threads)</td>
</tr>
<tr class="even">
<td>RAM</td>
<td>94 GiB</td>
</tr>
<tr class="odd">
<td>Disk</td>
<td>1.5 TiB SSD</td>
</tr>
<tr class="even">
<td>OS</td>
<td>NixOS (Linux 6.1.68)</td>
</tr>
</tbody>
</table>
<section id="soft-constraints" class="level3">
<h3 class="anchored" data-anchor-id="soft-constraints">Soft constraints</h3>
<p>I’ll introduce some soft UX constraints on the problem, that I think help convey the perspective of someone who wants to get started quickly with a data set:</p>
<ol type="1">
<li><strong>I don’t want to get another computer</strong> to run this workload.</li>
<li><strong>I want to use the data as is</strong>, that is, without altering the files I already have.</li>
<li><strong>I’d like to run this computation with the default configuration</strong>. Ideally configuration isn’t required to complete this workload out of the box.</li>
</ol>
</section>
<section id="library-versions" class="level3">
<h3 class="anchored" data-anchor-id="library-versions">Library versions</h3>
<p>Here are the versions I used to run this experiment at the time of writing.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">Dependency</th>
<th style="text-align: left;">Version</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Python</td>
<td style="text-align: left;">3.10.13 (main, Aug 24 2023, 12:59:26) [GCC 12.3.0]</td>
</tr>
<tr class="even">
<td style="text-align: left;">dask</td>
<td style="text-align: left;">2023.12.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">distributed</td>
<td style="text-align: left;">2023.12.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">duckdb</td>
<td style="text-align: left;">0.9.2</td>
</tr>
<tr class="odd">
<td style="text-align: left;">ibis</td>
<td style="text-align: left;"><a href="https://github.com/ibis-project/ibis/tree/2d37ae816"><code>2d37ae816</code></a></td>
</tr>
<tr class="even">
<td style="text-align: left;">pandas</td>
<td style="text-align: left;">2.1.4</td>
</tr>
<tr class="odd">
<td style="text-align: left;">pyarrow</td>
<td style="text-align: left;">14.0.1</td>
</tr>
</tbody>
</table>
</section>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data">Data</h3>
<p>I used the files <a href="https://raw.githubusercontent.com/pypi-data/data/20135ed214be9d6bb9c316121e5ccdaf29c6b9b1/links/dataset.txt">here</a> in this link to run my experiment.</p>
<p>Here’s a summary of the data set’s file sizes:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> du <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> /data/pypi-parquet/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.parquet</span></code></pre></div>
<pre><code>1.8G    /data/pypi-parquet/index-12.parquet
1.7G    /data/pypi-parquet/index-10.parquet
1.9G    /data/pypi-parquet/index-2.parquet
1.9G    /data/pypi-parquet/index-0.parquet
1.8G    /data/pypi-parquet/index-5.parquet
1.7G    /data/pypi-parquet/index-13.parquet
1.7G    /data/pypi-parquet/index-9.parquet
1.8G    /data/pypi-parquet/index-6.parquet
1.7G    /data/pypi-parquet/index-7.parquet
1.7G    /data/pypi-parquet/index-8.parquet
800M    /data/pypi-parquet/index-14.parquet
1.8G    /data/pypi-parquet/index-4.parquet
1.8G    /data/pypi-parquet/index-11.parquet
1.9G    /data/pypi-parquet/index-3.parquet
1.9G    /data/pypi-parquet/index-1.parquet
</code></pre>
</section>
</section>
<section id="recapping-the-original-ibis-post" class="level2">
<h2 class="anchored" data-anchor-id="recapping-the-original-ibis-post">Recapping the original Ibis post</h2>
<p>Check out <a href="https://ibis-project.org/posts/querying-pypi-metadata-compiled-languages/">the original blog post</a> if you haven’t already!</p>
<p>Here’s the Ibis + DuckDB code, along with a timed execution of the query:</p>
<div class="sourceCode" id="annotated-cell-4" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="annotated-cell-4-2"></span>
<span id="annotated-cell-4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="annotated-cell-4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _, udf</span>
<span id="annotated-cell-4-5"></span>
<span id="annotated-cell-4-6"></span>
<span id="annotated-cell-4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@udf.scalar.builtin</span></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="1">1</button><span id="annotated-cell-4-8" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> flatten(x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="annotated-cell-4-9">    ...</span>
<span id="annotated-cell-4-10"></span>
<span id="annotated-cell-4-11"></span>
<span id="annotated-cell-4-12">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-4-13">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="annotated-cell-4-14">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="annotated-cell-4-15">        [</span>
<span id="annotated-cell-4-16">            _.path.re_search(</span>
<span id="annotated-cell-4-17">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="annotated-cell-4-18">            ),</span>
<span id="annotated-cell-4-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="annotated-cell-4-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="annotated-cell-4-21">        ]</span>
<span id="annotated-cell-4-22">    )</span>
<span id="annotated-cell-4-23">    .group_by(</span>
<span id="annotated-cell-4-24">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="annotated-cell-4-25">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="annotated-cell-4-26">    )</span>
<span id="annotated-cell-4-27">    .aggregate(projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.collect().unique())</span>
<span id="annotated-cell-4-28">    .order_by(_.month.desc())</span>
<span id="annotated-cell-4-29">    .mutate(</span>
<span id="annotated-cell-4-30">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.ext.re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="annotated-cell-4-31">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="annotated-cell-4-32">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="annotated-cell-4-33">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="annotated-cell-4-34">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="annotated-cell-4-35">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="annotated-cell-4-36">    )</span>
<span id="annotated-cell-4-37">    .group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="annotated-cell-4-38">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flatten(_.projects.collect()).unique().length())</span>
<span id="annotated-cell-4-39">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="2">2</button><span id="annotated-cell-4-40" class="code-annotation-target">    .order_by([_.month.desc(), _.project_count.desc()])</span>
<span id="annotated-cell-4-41">)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-4" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="8" data-code-annotation="1">We’ve since implemented <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.flatten">a <code>flatten</code> method</a> on array expressions so it’s no longer necessary to define a UDF here. I’ll leave this code unchanged for this post. <strong>This has no effect on the performance of the query</strong>. In both cases the generated code contains a DuckDB-native call to <a href="https://duckdb.org/docs/sql/functions/nested.html">its <code>flatten</code> function</a>.</span>
</dd>
<dt data-target-cell="annotated-cell-4" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="40" data-code-annotation="2">This is a small change from the original query that adds a final sort key to make the results deterministic.</span>
</dd>
</dl>
<div id="23f9d8fa" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>time df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.to_pandas()</span>
<span id="cb4-2">df</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"df3e676162c94c569fd36fc39f990f5c","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>CPU times: user 20min 46s, sys: 1min 10s, total: 21min 56s
Wall time: 28.5 s</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th">project_count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-11-01</td>
<td>C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-11-01</td>
<td>Rust</td>
<td>190</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-11-01</td>
<td>Fortran</td>
<td>48</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-11-01</td>
<td>Go</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-11-01</td>
<td>Assembly</td>
<td>10</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">794</td>
<td>2005-08-01</td>
<td>C/C++</td>
<td>7</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">795</td>
<td>2005-07-01</td>
<td>C/C++</td>
<td>4</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">796</td>
<td>2005-05-01</td>
<td>C/C++</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">797</td>
<td>2005-04-01</td>
<td>C/C++</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">798</td>
<td>2005-03-01</td>
<td>C/C++</td>
<td>1</td>
</tr>
</tbody>
</table>

<p>799 rows × 3 columns</p>
</div>
</div>
</div>
<p>Let’s show peak memory usage in GB as reported by the <a href="https://docs.python.org/3/library/resource.html#module-resource"><code>resource</code></a> module:</p>
<div id="4d8c28d7" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resource</span>
<span id="cb6-2"></span>
<span id="cb6-3">rss_kb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resource.getrusage(resource.RUSAGE_SELF).ru_maxrss</span>
<span id="cb6-4">rss_mb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rss_kb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span></span>
<span id="cb6-5">rss_gb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rss_mb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(rss_gb, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GB"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>8.6 GB</code></pre>
</div>
</div>
</section>
<section id="pandas" class="level2">
<h2 class="anchored" data-anchor-id="pandas">Pandas</h2>
<p>Let’s try to replicate this workflow using pandas.</p>
<p>I started with this code:</p>
<div id="4f9244e8" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb8-2"></span>
<span id="cb8-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: '/data/pypi-parquet/*.parquet'</code></pre>
</div>
</div>
<p>Looks like pandas doesn’t support globs. That’s fine, we can use the builtin <code>glob</code> module.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb10-2"></span>
<span id="cb10-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_parquet(glob.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>))</span></code></pre></div>
<p>This eventually triggers the <a href="https://lwn.net/Kernel/Index/#Memory_management-Out-of-memory_handling">Linux OOM killer</a> after some minutes, so I can’t run the code.</p>
<p>Let’s try again with just a single file. I’ll pick the smallest file, to avoid any potential issues with memory and give pandas the best possible shot.</p>
<div id="cfb2b3ac" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb11-2"></span>
<span id="cb11-3">smallest_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(glob.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.path.getsize)</span></code></pre></div>
</div>
<p>The smallest file is 799 MiB on disk.</p>
<div id="84466e2e" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>time df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_parquet(smallest_file)</span>
<span id="cb12-2">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>CPU times: user 26 s, sys: 13.3 s, total: 39.3 s
Wall time: 27 s</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">project_name</th>
<th data-quarto-table-cell-role="th">project_version</th>
<th data-quarto-table-cell-role="th">project_release</th>
<th data-quarto-table-cell-role="th">uploaded_on</th>
<th data-quarto-table-cell-role="th">path</th>
<th data-quarto-table-cell-role="th">archive_path</th>
<th data-quarto-table-cell-role="th">size</th>
<th data-quarto-table-cell-role="th">hash</th>
<th data-quarto-table-cell-role="th">skip_reason</th>
<th data-quarto-table-cell-role="th">lines</th>
<th data-quarto-table-cell-role="th">repository</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>zyte-spider-templates</td>
<td>0.1.0</td>
<td>zyte_spider_templates-0.1.0-py3-none-any.whl</td>
<td>2023-10-26 07:29:49.894</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>zyte_spider_templates/spiders/ecommerce.py</td>
<td>5748</td>
<td>b'\xe0\xa6\x9bd\xc0+\xe0\xf8$J2\xb3\xf8\x8c\x9...</td>
<td></td>
<td>160</td>
<td>237</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>zyte-spider-templates</td>
<td>0.1.0</td>
<td>zyte_spider_templates-0.1.0-py3-none-any.whl</td>
<td>2023-10-26 07:29:49.894</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>zyte_spider_templates/spiders/base.py</td>
<td>4160</td>
<td>b'\x1ck\xd46={\x7f`\xbe\xfaIg*&amp;\x977T\xdb\x8fJ'</td>
<td></td>
<td>122</td>
<td>237</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>zyte-spider-templates</td>
<td>0.1.0</td>
<td>zyte_spider_templates-0.1.0-py3-none-any.whl</td>
<td>2023-10-26 07:29:49.894</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>zyte_spider_templates/spiders/__init__.py</td>
<td>0</td>
<td>b'\xe6\x9d\xe2\x9b\xb2\xd1\xd6CK\x8b)\xaewZ\xd...</td>
<td>empty</td>
<td>0</td>
<td>237</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>zyte-spider-templates</td>
<td>0.1.0</td>
<td>zyte_spider_templates-0.1.0-py3-none-any.whl</td>
<td>2023-10-26 07:29:49.894</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>zyte_spider_templates/page_objects/product_nav...</td>
<td>3528</td>
<td>b'\xcd\xc9\xfc[\xda\xcf!\x94\x1b\x92\xffbJC\xf...</td>
<td></td>
<td>106</td>
<td>237</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>zyte-spider-templates</td>
<td>0.1.0</td>
<td>zyte_spider_templates-0.1.0-py3-none-any.whl</td>
<td>2023-10-26 07:29:49.894</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>zyte_spider_templates/page_objects/__init__.py</td>
<td>75</td>
<td>b'r\xb9\xc1\xcf2\xa7\xdc?\xd1\xa8\xfcc+`\xf3\x...</td>
<td></td>
<td>1</td>
<td>237</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35468828</td>
<td>1AH22CS174</td>
<td>1.81.11</td>
<td>1AH22CS174-1.81.11.tar.gz</td>
<td>2023-11-19 13:30:00.113</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>1AH22CS174-1.81.11/1AH22CS174.egg-info/top_lev...</td>
<td>1</td>
<td>b"\x8b\x13x\x91y\x1f\xe9i'\xadx\xe6K\n\xad{\xd...</td>
<td></td>
<td>1</td>
<td>242</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35468829</td>
<td>1AH22CS174</td>
<td>1.81.11</td>
<td>1AH22CS174-1.81.11.tar.gz</td>
<td>2023-11-19 13:30:00.113</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>1AH22CS174-1.81.11/1AH22CS174.egg-info/require...</td>
<td>16</td>
<td>b"qG\xad\xc3:.'q\xde\xaa\xac\x91\x89\xf7S\xcb\...</td>
<td></td>
<td>2</td>
<td>242</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35468830</td>
<td>1AH22CS174</td>
<td>1.81.11</td>
<td>1AH22CS174-1.81.11.tar.gz</td>
<td>2023-11-19 13:30:00.113</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>1AH22CS174-1.81.11/1AH22CS174.egg-info/depende...</td>
<td>1</td>
<td>b"\x8b\x13x\x91y\x1f\xe9i'\xadx\xe6K\n\xad{\xd...</td>
<td></td>
<td>1</td>
<td>242</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35468831</td>
<td>1AH22CS174</td>
<td>1.81.11</td>
<td>1AH22CS174-1.81.11.tar.gz</td>
<td>2023-11-19 13:30:00.113</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>1AH22CS174-1.81.11/1AH22CS174.egg-info/SOURCES...</td>
<td>187</td>
<td>b'\xa2O$4|X\x15,\xb0\x9a\x07\xe6\x81[\x15\x1f|...</td>
<td></td>
<td>7</td>
<td>242</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35468832</td>
<td>1AH22CS174</td>
<td>1.81.11</td>
<td>1AH22CS174-1.81.11.tar.gz</td>
<td>2023-11-19 13:30:00.113</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>1AH22CS174-1.81.11/1AH22CS174.egg-info/PKG-INFO</td>
<td>509</td>
<td>b'\xee\xbe\xbaoh*\xacA\xb0\x8a}\xb5\x00\xcbpz\...</td>
<td></td>
<td>16</td>
<td>242</td>
</tr>
</tbody>
</table>

<p>35468833 rows × 11 columns</p>
</div>
</div>
</div>
<p>Loading the smallest file from the dataset is already pretty close to the time it took Ibis and DuckDB to execute the <em>entire query</em>.</p>
<p>Let’s give pandas a leg up and tell it what columns to use to avoid reading in a bunch of data we’re not going to use.</p>
<p>We can determine what these columns are by inspecting the Ibis code above.</p>
<div id="55ad752c" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"uploaded_on"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>]</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>time df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_parquet(smallest_file, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>columns)</span>
<span id="cb14-4">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>CPU times: user 13.9 s, sys: 7.09 s, total: 21 s
Wall time: 16.9 s</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="13">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">path</th>
<th data-quarto-table-cell-role="th">uploaded_on</th>
<th data-quarto-table-cell-role="th">project_name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>2023-10-26 07:29:49.894</td>
<td>zyte-spider-templates</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>2023-10-26 07:29:49.894</td>
<td>zyte-spider-templates</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>2023-10-26 07:29:49.894</td>
<td>zyte-spider-templates</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>2023-10-26 07:29:49.894</td>
<td>zyte-spider-templates</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>packages/zyte-spider-templates/zyte_spider_tem...</td>
<td>2023-10-26 07:29:49.894</td>
<td>zyte-spider-templates</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35468828</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>2023-11-19 13:30:00.113</td>
<td>1AH22CS174</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35468829</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>2023-11-19 13:30:00.113</td>
<td>1AH22CS174</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35468830</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>2023-11-19 13:30:00.113</td>
<td>1AH22CS174</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35468831</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>2023-11-19 13:30:00.113</td>
<td>1AH22CS174</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35468832</td>
<td>packages/1AH22CS174/1AH22CS174-1.81.11.tar.gz/...</td>
<td>2023-11-19 13:30:00.113</td>
<td>1AH22CS174</td>
</tr>
</tbody>
</table>

<p>35468833 rows × 3 columns</p>
</div>
</div>
</div>
<p>Sweet, read times improved!</p>
<p>Let’s peek at the memory usage of the DataFrame.</p>
<div id="88a65893" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(df.memory_usage(deep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GiB"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>8.7 GiB</code></pre>
</div>
</div>
<p>I still have plenty of space to do my analysis, nice!</p>
<p>First, filter the data:</p>
<div id="943f1a94" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="annotated-cell-13" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="annotated-cell-13-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[</span>
<span id="annotated-cell-13-3">    (</span>
<span id="annotated-cell-13-4">        df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(?:asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span>)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-13" data-target-annotation="1">1</button><span id="annotated-cell-13-5" class="code-annotation-target">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(?:^|/)test(?:|s|ing)|/site-packages/"</span>)</span>
<span id="annotated-cell-13-6">    )</span>
<span id="annotated-cell-13-7">]</span>
<span id="annotated-cell-13-8">df</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-13" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-13" data-code-lines="5" data-code-annotation="1">I altered the original query here to avoid creating an unnecessary intermediate <code>Series</code> object.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>CPU times: user 2min 21s, sys: 297 ms, total: 2min 22s
Wall time: 2min 21s</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="15">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">path</th>
<th data-quarto-table-cell-role="th">uploaded_on</th>
<th data-quarto-table-cell-role="th">project_name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">1462</td>
<td>packages/zipline-tej/zipline_tej-0.0.50-cp38-c...</td>
<td>2023-10-27 02:23:07.153</td>
<td>zipline-tej</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1470</td>
<td>packages/zipline-tej/zipline_tej-0.0.50-cp38-c...</td>
<td>2023-10-27 02:23:07.153</td>
<td>zipline-tej</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">1477</td>
<td>packages/zipline-tej/zipline_tej-0.0.50-cp38-c...</td>
<td>2023-10-27 02:23:07.153</td>
<td>zipline-tej</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1481</td>
<td>packages/zipline-tej/zipline_tej-0.0.50-cp38-c...</td>
<td>2023-10-27 02:23:07.153</td>
<td>zipline-tej</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">1485</td>
<td>packages/zipline-tej/zipline_tej-0.0.50-cp38-c...</td>
<td>2023-10-27 02:23:07.153</td>
<td>zipline-tej</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35460320</td>
<td>packages/atomicshop/atomicshop-2.5.12-py3-none...</td>
<td>2023-11-19 14:29:22.109</td>
<td>atomicshop</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35460515</td>
<td>packages/atomicshop/atomicshop-2.5.11-py3-none...</td>
<td>2023-11-19 11:58:09.589</td>
<td>atomicshop</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35460710</td>
<td>packages/atomicshop/atomicshop-2.5.10-py3-none...</td>
<td>2023-11-19 11:48:16.980</td>
<td>atomicshop</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35463761</td>
<td>packages/ai-flow-nightly/ai_flow_nightly-2023....</td>
<td>2023-11-19 16:06:36.819</td>
<td>ai-flow-nightly</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">35464036</td>
<td>packages/ai-flow-nightly/ai_flow_nightly-2023....</td>
<td>2023-11-19 16:06:33.327</td>
<td>ai-flow-nightly</td>
</tr>
</tbody>
</table>

<p>7166291 rows × 3 columns</p>
</div>
</div>
</div>
<p>We’ve blown <strong>way</strong> past our Ibis + DuckDB latency budget.</p>
<p>Let’s keep going!</p>
<p>Next, group by and aggregate:</p>
<div id="562d718d" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb19-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb19-3">    df.groupby(</span>
<span id="cb19-4">        [</span>
<span id="cb19-5">            df.uploaded_on.dt.floor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>).rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>),</span>
<span id="cb19-6">            df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, expand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>),</span>
<span id="cb19-7">        ]</span>
<span id="cb19-8">    )</span>
<span id="cb19-9">    .agg({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(s))})</span>
<span id="cb19-10">    .sort_index(level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb19-11">)</span>
<span id="cb19-12">df</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>ValueError: &lt;MonthEnd&gt; is a non-fixed frequency</code></pre>
</div>
</div>
<p>Here we hit the first API issue going back to an <a href="https://github.com/pandas-dev/pandas/issues/15303">old pandas issue</a>: we can’t truncate a timestamp column to month frequency.</p>
<p>Let’s try the solution recommended in that issue.</p>
<div id="93d4bc0b" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb21-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb21-3">    df.groupby(</span>
<span id="cb21-4">        [</span>
<span id="cb21-5">            df.uploaded_on.dt.to_period(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>).dt.to_timestamp().rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>),</span>
<span id="cb21-6">            df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, expand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>),</span>
<span id="cb21-7">        ]</span>
<span id="cb21-8">    )</span>
<span id="cb21-9">    .agg({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(s))})</span>
<span id="cb21-10">    .rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"projects"</span>})</span>
<span id="cb21-11">    .sort_index(level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb21-12">)</span>
<span id="cb21-13">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>CPU times: user 8.14 s, sys: 189 ms, total: 8.32 s
Wall time: 8.33 s</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="17">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">projects</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td rowspan="14" data-quarto-table-cell-role="th" data-valign="top">2023-11-01</td>
<td data-quarto-table-cell-role="th">rs</td>
<td>[qoqo-for-braket-devices, rouge-rs, h3ronpy, g...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">hpp</td>
<td>[isotree, boutpp-nightly, fdasrsf, PlotPy, mod...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">h</td>
<td>[numina, pyppmd, pantab, liftover, jupyter-cpp...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">go</td>
<td>[cppyy-cling, ascend-deployer, c2cciutils, aws...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">for</td>
<td>[iricore]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">f95</td>
<td>[PyGeopack, easychem, dioptas, scikit-digital-...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">f90</td>
<td>[iricore, pdfo, cosmosis, mkl-include, c4p, ml...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">f03</td>
<td>[mkl-include]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">f</td>
<td>[fastjet, pdfo, pyspharm-syl, PyAstronomy, PyG...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">cxx</td>
<td>[cppyy-cling, teca, boutpp-nightly, aplr, CPyC...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">cpp</td>
<td>[numina, liftover, jupyter-cpp-kernel, cuda-qu...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">cc</td>
<td>[numina, boutpp-nightly, tiledb, pyxai, arcae,...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">c</td>
<td>[cytimes, assemblyline, pyppmd, pantab, liftov...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">asm</td>
<td>[couchbase, hrm-interpreter, cmeel-assimp, aws...</td>
</tr>
<tr class="odd">
<td rowspan="11" data-quarto-table-cell-role="th" data-valign="top">2023-10-01</td>
<td data-quarto-table-cell-role="th">rs</td>
<td>[ruff, xvc, qarray-rust-core, del-msh, uniffi-...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">hpp</td>
<td>[pycaracal, pylibrb, cripser, icupy, cylp, mai...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">h</td>
<td>[pycaracal, icupy, memprocfs, mindspore-dev, w...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">go</td>
<td>[cryptography, c2cciutils, awscrt, odoo14-addo...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">f90</td>
<td>[pypestutils, petitRADTRANS, alpaqa, molalignl...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">f</td>
<td>[alpaqa, pestifer, gnssrefl, LightSim2Grid, od...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">cxx</td>
<td>[cars, wxPython-zombie, AnalysisG, petsc, fift...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">cpp</td>
<td>[pycaracal, roboflex.util.png, reynir, ParmEd,...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">cc</td>
<td>[tf-nightly-cpu-aws, cornflakes, trajgenpy, tf...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">c</td>
<td>[pycaracal, cytimes, fibers-ddtest, assemblyli...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">asm</td>
<td>[fibers-ddtest, maud-metabolic-models, chipsec...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Sort the values, add a new column and do the final aggregation:</p>
<div id="94cd3564" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb23-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb23-3">    df.reset_index()</span>
<span id="cb23-4">    .assign(</span>
<span id="cb23-5">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> t: t.ext.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb23-6">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb23-7">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb23-8">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb23-9">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb23-10">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb23-11">    )</span>
<span id="cb23-12">    .groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb23-13">    .agg({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"projects"</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(s, [])))})</span>
<span id="cb23-14">)</span>
<span id="cb23-15">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>CPU times: user 4.96 ms, sys: 0 ns, total: 4.96 ms
Wall time: 4.81 ms</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="18">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">projects</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">month</th>
<th data-quarto-table-cell-role="th">ext</th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td rowspan="5" data-quarto-table-cell-role="th" data-valign="top">2023-10-01</td>
<td data-quarto-table-cell-role="th">Assembly</td>
<td>14</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">C/C++</td>
<td>484</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Fortran</td>
<td>23</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Go</td>
<td>25</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Rust</td>
<td>99</td>
</tr>
<tr class="even">
<td rowspan="5" data-quarto-table-cell-role="th" data-valign="top">2023-11-01</td>
<td data-quarto-table-cell-role="th">Assembly</td>
<td>10</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">C/C++</td>
<td>836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Fortran</td>
<td>48</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Go</td>
<td>33</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Rust</td>
<td>190</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Remember, all of the previous code is executing on <strong>a single file</strong> and still takes minutes to run.</p>
<section id="conclusion" class="level4">
<h4 class="anchored" data-anchor-id="conclusion">Conclusion</h4>
<p>If I only have pandas at my disposal, I’m unsure of how I can avoid getting a bigger computer to run this query over the entire data set.</p>
</section>
<section id="rewriting-the-query-to-be-fair" class="level3">
<h3 class="anchored" data-anchor-id="rewriting-the-query-to-be-fair">Rewriting the query to be fair</h3>
<p>At this point I wondered whether this was a fair query to run with pandas.</p>
<p>After all, the downsides of pandas’ use of object arrays to hold nested data structures like lists are well-known.</p>
<p>The original query uses a lot of nested array types, which are very performant in DuckDB, but in this case <strong>we’re throwing away all of our arrays</strong> and we don’t need to use them.</p>
<p>Additionally, I’m using lambda functions instead of taking advantage of pandas’ fast built-in methods like <code>count</code>, <code>nunique</code> and others.</p>
<p>Let’s see if we can alter the original query to give pandas a leg up.</p>
<section id="a-story-of-two-group-bys" class="level4">
<h4 class="anchored" data-anchor-id="a-story-of-two-group-bys">A story of two <code>GROUP BY</code>s</h4>
<p>Here’s the first Ibis expression:</p>
<div class="sourceCode" id="annotated-cell-17" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy"><code class="sourceCode python"><span id="annotated-cell-17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="annotated-cell-17-2"></span>
<span id="annotated-cell-17-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="annotated-cell-17-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _, udf</span>
<span id="annotated-cell-17-5"></span>
<span id="annotated-cell-17-6"></span>
<span id="annotated-cell-17-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@udf.scalar.builtin</span></span>
<span id="annotated-cell-17-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> flatten(x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="annotated-cell-17-9">    ...</span>
<span id="annotated-cell-17-10"></span>
<span id="annotated-cell-17-11"></span>
<span id="annotated-cell-17-12">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-17-13">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="annotated-cell-17-14">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="annotated-cell-17-15">        [</span>
<span id="annotated-cell-17-16">            _.path.re_search(</span>
<span id="annotated-cell-17-17">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="annotated-cell-17-18">            ),</span>
<span id="annotated-cell-17-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="annotated-cell-17-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="annotated-cell-17-21">        ]</span>
<span id="annotated-cell-17-22">    )</span>
<span id="annotated-cell-17-23">    .group_by(</span>
<span id="annotated-cell-17-24">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="annotated-cell-17-25">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="annotated-cell-17-26">    )</span>
<span id="annotated-cell-17-27">    .aggregate(projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.collect().unique())</span>
<span id="annotated-cell-17-28">    .order_by(_.month.desc())</span>
<span id="annotated-cell-17-29">    .mutate(</span>
<span id="annotated-cell-17-30">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.ext.re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="annotated-cell-17-31">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="annotated-cell-17-32">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="annotated-cell-17-33">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="annotated-cell-17-34">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="annotated-cell-17-35">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="annotated-cell-17-36">    )</span>
<span id="annotated-cell-17-37">    .group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="annotated-cell-17-38">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flatten(_.projects.collect()).unique().length())</span>
<span id="annotated-cell-17-39">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="annotated-cell-17-40">    .order_by([_.month.desc(), _.project_count.desc()])</span>
<span id="annotated-cell-17-41">)</span></code></pre></div>
<p>It looks like we can remove the double <code>group_by</code> by moving the second <code>mutate</code> expression directly into the first <code>group_by</code> call.</p>
<p>Applying these changes:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">--- step0.py    2023-12-12 05:20:01.712513949 -0500</span></span>
<span id="cb25-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ step1.py    2023-12-12 05:20:01.712513949 -0500</span></span>
<span id="cb25-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -5,7 +5,7 @@</span></span>
<span id="cb25-4"> </span>
<span id="cb25-5"> </span>
<span id="cb25-6"> @udf.scalar.builtin</span>
<span id="cb25-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-def flatten(x: list[list[str]]) -&gt; list[str]:  # &lt;1&gt;</span></span>
<span id="cb25-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+def flatten(x: list[list[str]]) -&gt; list[str]:</span></span>
<span id="cb25-9">     ...</span>
<span id="cb25-10"> </span>
<span id="cb25-11"> </span>
<span id="cb25-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -22,20 +22,16 @@</span></span>
<span id="cb25-13">     )</span>
<span id="cb25-14">     .group_by(</span>
<span id="cb25-15">         month=_.uploaded_on.truncate("M"),</span>
<span id="cb25-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ext=_.path.re_extract(r"\.([a-z0-9]+)$", 1),</span></span>
<span id="cb25-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    )</span></span>
<span id="cb25-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .aggregate(projects=_.project_name.collect().unique())</span></span>
<span id="cb25-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .order_by(_.month.desc())</span></span>
<span id="cb25-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .mutate(</span></span>
<span id="cb25-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ext=_.ext.re_replace(r"cxx|cpp|cc|c|hpp|h", "C/C++")</span></span>
<span id="cb25-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ext=_.path.re_extract(r"\.([a-z0-9]+)$", 1)</span></span>
<span id="cb25-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        .re_replace(r"cxx|cpp|cc|c|hpp|h", "C/C++")</span></span>
<span id="cb25-24">         .re_replace("^f.*$", "Fortran")</span>
<span id="cb25-25">         .replace("rs", "Rust")</span>
<span id="cb25-26">         .replace("go", "Go")</span>
<span id="cb25-27">         .replace("asm", "Assembly")</span>
<span id="cb25-28">         .nullif(""),</span>
<span id="cb25-29">     )</span>
<span id="cb25-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    .aggregate(projects=_.project_name.collect().unique())</span></span>
<span id="cb25-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    .order_by(_.month.desc())</span></span>
<span id="cb25-32">     .group_by(["month", "ext"])</span>
<span id="cb25-33">     .aggregate(project_count=flatten(_.projects.collect()).unique().length())</span>
<span id="cb25-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .dropna("ext")</span></span>
<span id="cb25-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .order_by([_.month.desc(), _.project_count.desc()])  # &lt;2&gt;</span></span>
<span id="cb25-36"> )</span></code></pre></div>
<p>We get:</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb26-2"></span>
<span id="cb26-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb26-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _, udf</span>
<span id="cb26-5"></span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@udf.scalar.builtin</span></span>
<span id="cb26-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> flatten(x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb26-9">    ...</span>
<span id="cb26-10"></span>
<span id="cb26-11"></span>
<span id="cb26-12">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb26-13">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="cb26-14">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb26-15">        [</span>
<span id="cb26-16">            _.path.re_search(</span>
<span id="cb26-17">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb26-18">            ),</span>
<span id="cb26-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb26-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="cb26-21">        ]</span>
<span id="cb26-22">    )</span>
<span id="cb26-23">    .group_by(</span>
<span id="cb26-24">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb26-25">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb26-26">        .re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb26-27">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb26-28">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb26-29">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb26-30">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb26-31">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb26-32">    )</span>
<span id="cb26-33">    .aggregate(projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.collect().unique())</span>
<span id="cb26-34">    .order_by(_.month.desc())</span>
<span id="cb26-35">    .group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb26-36">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flatten(_.projects.collect()).unique().length())</span>
<span id="cb26-37">)</span></code></pre></div>
</section>
<section id="dont-sort-unnecessarily" class="level4">
<h4 class="anchored" data-anchor-id="dont-sort-unnecessarily">Don’t sort unnecessarily</h4>
<p>Notice this <code>order_by</code> call just before a <code>group_by</code> call. Ordering before grouping is somewhat useless here; we should probably sort after we’ve reduced our data. Let’s stick the ordering at the end of the query.</p>
<p>Applying these changes:</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">--- step1.py    2023-12-12 05:20:01.712513949 -0500</span></span>
<span id="cb27-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ step2.py    2023-12-12 05:20:01.712513949 -0500</span></span>
<span id="cb27-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +31,7 @@</span></span>
<span id="cb27-4">         .nullif(""),</span>
<span id="cb27-5">     )</span>
<span id="cb27-6">     .aggregate(projects=_.project_name.collect().unique())</span>
<span id="cb27-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .order_by(_.month.desc())</span></span>
<span id="cb27-8">     .group_by(["month", "ext"])</span>
<span id="cb27-9">     .aggregate(project_count=flatten(_.projects.collect()).unique().length())</span>
<span id="cb27-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    .order_by(_.month.desc())</span></span>
<span id="cb27-11"> )</span></code></pre></div>
<p>We get:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb28-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _, udf</span>
<span id="cb28-5"></span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@udf.scalar.builtin</span></span>
<span id="cb28-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> flatten(x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb28-9">    ...</span>
<span id="cb28-10"></span>
<span id="cb28-11"></span>
<span id="cb28-12">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb28-13">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="cb28-14">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb28-15">        [</span>
<span id="cb28-16">            _.path.re_search(</span>
<span id="cb28-17">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb28-18">            ),</span>
<span id="cb28-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb28-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="cb28-21">        ]</span>
<span id="cb28-22">    )</span>
<span id="cb28-23">    .group_by(</span>
<span id="cb28-24">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb28-25">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-26">        .re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb28-27">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb28-28">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb28-29">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb28-30">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb28-31">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb28-32">    )</span>
<span id="cb28-33">    .aggregate(projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.collect().unique())</span>
<span id="cb28-34">    .group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb28-35">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flatten(_.projects.collect()).unique().length())</span>
<span id="cb28-36">    .order_by(_.month.desc())</span>
<span id="cb28-37">)</span></code></pre></div>
</section>
<section id="dont-repeat-yourself" class="level4">
<h4 class="anchored" data-anchor-id="dont-repeat-yourself">Don’t repeat yourself</h4>
<p>Notice that we are now:</p>
<ul>
<li>grouping</li>
<li>aggregating</li>
<li>grouping again by the <strong>same keys</strong></li>
<li>aggregating</li>
</ul>
<p>This is less optimal than it could be. We are also flattening an array, computing its distinct values and then computing its length.</p>
<p>We are computing the grouped number of distinct values, and we likely don’t need to collect values into an array to do that.</p>
<p>Let’s try using a <code>COUNT(DISTINCT ...)</code> query instead, to avoid wasting cycles collecting arrays.</p>
<p>We’ll remove the second group by and then call <code>nunique()</code> to get the final query.</p>
<p>Applying these changes:</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">--- step2.py    2023-12-12 05:20:01.712513949 -0500</span></span>
<span id="cb29-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ step3.py    2023-12-12 05:20:01.712513949 -0500</span></span>
<span id="cb29-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -1,13 +1,7 @@</span></span>
<span id="cb29-4"> from __future__ import annotations</span>
<span id="cb29-5"> </span>
<span id="cb29-6"> import ibis</span>
<span id="cb29-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-from ibis import _, udf</span></span>
<span id="cb29-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb29-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb29-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@udf.scalar.builtin</span></span>
<span id="cb29-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-def flatten(x: list[list[str]]) -&gt; list[str]:</span></span>
<span id="cb29-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ...</span></span>
<span id="cb29-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb29-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+from ibis import _</span></span>
<span id="cb29-15"> </span>
<span id="cb29-16"> expr = (</span>
<span id="cb29-17">     ibis.read_parquet("/data/pypi-parquet/*.parquet")</span>
<span id="cb29-18"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -30,8 +24,7 @@</span></span>
<span id="cb29-19">         .replace("asm", "Assembly")</span>
<span id="cb29-20">         .nullif(""),</span>
<span id="cb29-21">     )</span>
<span id="cb29-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .aggregate(projects=_.project_name.collect().unique())</span></span>
<span id="cb29-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .group_by(["month", "ext"])</span></span>
<span id="cb29-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .aggregate(project_count=flatten(_.projects.collect()).unique().length())</span></span>
<span id="cb29-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    .order_by(_.month.desc())</span></span>
<span id="cb29-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    .aggregate(project_count=_.project_name.nunique())</span></span>
<span id="cb29-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    .dropna("ext")</span></span>
<span id="cb29-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    .order_by([_.month.desc(), _.project_count.desc()])  # &lt;1&gt;</span></span>
<span id="cb29-29"> )</span></code></pre></div>
<p>We get:</p>
<div class="sourceCode" id="annotated-cell-23" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="annotated-cell-23-2"></span>
<span id="annotated-cell-23-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="annotated-cell-23-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="annotated-cell-23-5"></span>
<span id="annotated-cell-23-6">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-23-7">    ibis.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>)</span>
<span id="annotated-cell-23-8">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="annotated-cell-23-9">        [</span>
<span id="annotated-cell-23-10">            _.path.re_search(</span>
<span id="annotated-cell-23-11">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="annotated-cell-23-12">            ),</span>
<span id="annotated-cell-23-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="annotated-cell-23-14">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="annotated-cell-23-15">        ]</span>
<span id="annotated-cell-23-16">    )</span>
<span id="annotated-cell-23-17">    .group_by(</span>
<span id="annotated-cell-23-18">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="annotated-cell-23-19">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-23-20">        .re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="annotated-cell-23-21">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="annotated-cell-23-22">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="annotated-cell-23-23">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="annotated-cell-23-24">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="annotated-cell-23-25">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="annotated-cell-23-26">    )</span>
<span id="annotated-cell-23-27">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.nunique())</span>
<span id="annotated-cell-23-28">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-23" data-target-annotation="1">1</button><span id="annotated-cell-23-29" class="code-annotation-target">    .order_by([_.month.desc(), _.project_count.desc()])</span>
<span id="annotated-cell-23-30">)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-23" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-23" data-code-lines="29" data-code-annotation="1">I added a second sort key (<code>project_count</code>) for deterministic output.</span>
</dd>
</dl>
<p>Let’s run it to make sure the results are as expected:</p>
<div id="c5ebcade" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">duckdb_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o expr.to_pandas()</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"0041ee27a4e246b6ad1b59fc34354f61","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>31.4 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
</div>
<p>It looks like the new query might be a bit slower even though we’re ostensibly doing less computation. Since we’re still pretty close to the original duration, let’s keep going.</p>
</section>
</section>
<section id="final-pandas-run-with-the-new-query" class="level3">
<h3 class="anchored" data-anchor-id="final-pandas-run-with-the-new-query">Final pandas run with the new query</h3>
<p>Rewriting the pandas code we get:</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb32-2"></span>
<span id="cb32-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb32-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb32-5"></span>
<span id="cb32-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb32-7"></span>
<span id="cb32-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_parquet(</span>
<span id="cb32-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(glob.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.path.getsize),</span>
<span id="cb32-10">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"uploaded_on"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>],</span>
<span id="cb32-11">)</span>
<span id="cb32-12">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[</span>
<span id="cb32-13">    df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(?:asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span>)</span>
<span id="cb32-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(?:(?:^|/)test(?:|s|ing)|/site-packages/)"</span>)</span>
<span id="cb32-15">]</span>
<span id="cb32-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb32-17">    df.assign(</span>
<span id="cb32-18">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.uploaded_on.dt.to_period(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>).dt.to_timestamp(),</span>
<span id="cb32-19">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb32-20">        .iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb32-21">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb32-22">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb32-23">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb32-24">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb32-25">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>),</span>
<span id="cb32-26">    )</span>
<span id="cb32-27">    .groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb32-28">    .project_name.nunique()</span>
<span id="cb32-29">    .rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>)</span>
<span id="cb32-30">    .reset_index()</span>
<span id="cb32-31">    .sort_values([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>], ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb32-32">)</span></code></pre></div>
<p>Running it we get:</p>
<div id="6187b075" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">pandas_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run pandas_impl.py</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       month       ext  project_count
6 2023-11-01     C/C++            836
9 2023-11-01      Rust            190
7 2023-11-01   Fortran             48
8 2023-11-01        Go             33
5 2023-11-01  Assembly             10
1 2023-10-01     C/C++            484
4 2023-10-01      Rust             99
3 2023-10-01        Go             25
2 2023-10-01   Fortran             23
0 2023-10-01  Assembly             14
3min 2s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Remember, this is the time it took pandas to run the query for a <strong>single</strong> file.
</div>
</div>
<div class="callout-body-container callout-body">
<p>DuckDB runs the query over the <strong>entire</strong> dataset about 4x faster than that!</p>
</div>
</div>
<p>Let’s try a tool that nominally scales to our problem: <a href="https://dask.org">Dask</a>.</p>
</section>
</section>
<section id="dask" class="level2">
<h2 class="anchored" data-anchor-id="dask">Dask</h2>
<p>One really nice component of Dask is <a href="https://docs.dask.org/en/stable/dataframe.html"><code>dask.dataframe</code></a>.</p>
<p>Dask DataFrame implements a <a href="https://docs.dask.org/en/stable/dataframe.html#scope">good chunk of the pandas API</a> and can be a drop-in replacement for pandas.</p>
<p>I am happy that this turned out to be the case here.</p>
<p>My first attempt was somewhat naive and was effectively a one line change from <code>import pandas as pd</code> to <code>import dask.dataframe as pd</code>.</p>
<p>This worked and the workload completed. However, after talking to Dask expert and Ibis contributor <a href="https://github.com/ncclementi">Naty Clementi</a> she suggested I try a few things:</p>
<ul>
<li>Use <a href="https://distributed.dask.org/en/stable/">the distributed scheduler</a>.</li>
<li>Ensure that <a href="https://docs.dask.org/en/latest/configuration.html#dask"><code>pyarrow</code> string arrays are used</a> instead of NumPy object arrays. This required <strong>no changes</strong> to my Dask code because PyArrow strings have been the default since version 2023.7.1, hooray!</li>
<li>Explore some of the options to <code>read_parquet</code>. It turned that without setting <code>split_row_groups=True</code> I ran out of memory.</li>
</ul>
<p>Let’s look at the Dask implementation:</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb35-2"></span>
<span id="cb35-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb35-4"></span>
<span id="cb35-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dask.dataframe <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dd</span>
<span id="cb35-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dask.distributed <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Client</span>
<span id="cb35-7"></span>
<span id="cb35-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb35-9">    client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client(silence_logs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.ERROR)</span>
<span id="cb35-10">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dd.read_parquet(</span>
<span id="cb35-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data/pypi-parquet/*.parquet"</span>,</span>
<span id="cb35-12">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"uploaded_on"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_name"</span>],</span>
<span id="cb35-13">        split_row_groups<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb35-14">    )</span>
<span id="cb35-15">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[</span>
<span id="cb35-16">        df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(</span>
<span id="cb35-17">            <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(?:asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb35-18">        )</span>
<span id="cb35-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(?:^|/)test(?:|s|ing)"</span>)</span>
<span id="cb35-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>)</span>
<span id="cb35-21">    ]</span>
<span id="cb35-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb35-23">        df.assign(</span>
<span id="cb35-24">            month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.uploaded_on.dt.to_period(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>).dt.to_timestamp(),</span>
<span id="cb35-25">            ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, expand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb35-26">            .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb35-27">            .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb35-28">            .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb35-29">            .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb35-30">            .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>),</span>
<span id="cb35-31">        )</span>
<span id="cb35-32">        .groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb35-33">        .project_name.nunique()</span>
<span id="cb35-34">        .rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>)</span>
<span id="cb35-35">        .compute()</span>
<span id="cb35-36">        .reset_index()</span>
<span id="cb35-37">        .sort_values([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>], ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb35-38">    )</span>
<span id="cb35-39">    client.shutdown()</span></code></pre></div>
<p>Let’s run the code:</p>
<div id="a606e7b3" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">dask_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>run dask_impl.py</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         month       ext  project_count
794 2023-11-01     C/C++            836
796 2023-11-01      Rust            190
797 2023-11-01   Fortran             48
795 2023-11-01        Go             33
798 2023-11-01  Assembly             10
..         ...       ...            ...
2   2005-08-01     C/C++              7
1   2005-07-01     C/C++              4
83  2005-05-01     C/C++              1
82  2005-04-01     C/C++              1
0   2005-03-01     C/C++              1

[799 rows x 3 columns]
52.6 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)</code></pre>
</div>
</div>
<p>That’s a great improvement over pandas: we finished the workload and our running time is pretty close to DuckDB.</p>
</section>
<section id="takeaways" class="level2">
<h2 class="anchored" data-anchor-id="takeaways">Takeaways</h2>
<p><strong>Ibis + DuckDB is the only system tested that handles this workload well out of the box</strong></p>
<ul>
<li>Pandas couldn’t handle the workload due to memory constraints.</li>
<li>Dask required its <a href="https://docs.dask.org/en/stable/deploying.html#deploy-dask-clusters">recommended distributed scheduler</a> to achieve maximum performance and still used a lot of memory.</li>
</ul>
<p>Let’s recap the results with some numbers:</p>
<section id="numbers" class="level3">
<h3 class="anchored" data-anchor-id="numbers">Numbers</h3>
<table class="table">
<thead>
<tr class="header">
<th>Toolset</th>
<th style="text-align: right;">Data size</th>
<th style="text-align: right;">Duration</th>
<th style="text-align: right;">Throughput</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Ibis + DuckDB</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">31 seconds</td>
<td style="text-align: right;">823 MiB/s</td>
</tr>
<tr class="even">
<td>Dask + Distributed</td>
<td style="text-align: right;">25,825 MiB</td>
<td style="text-align: right;">53 seconds</td>
<td style="text-align: right;">491 MiB/s</td>
</tr>
</tbody>
</table>
<p>With Ibis + DuckDB, I was able to write the query the way I wanted to without running out of memory, using the default configuration provided by Ibis.</p>
<p>I was able run this computation around <strong>188x faster</strong> than you can expect with pandas using this hardware setup.</p>
<p>In contrast, pandas ran out of memory <strong>on a single file</strong> without some hand holding and while Dask didn’t cause my program to run out of memory it still used quite a bit more than DuckDB.</p>
</section>
<section id="pandas-is-untenable-for-this-workload" class="level3">
<h3 class="anchored" data-anchor-id="pandas-is-untenable-for-this-workload">Pandas is untenable for this workload</h3>
<p>Pandas requires me to load everything into memory, and my machine doesn’t have enough memory to do that.</p>
<p>Given that Ibis + DuckDB runs this workload on my machine it doesn’t seem worth the effort to write any additional code to make pandas scale to the whole dataset.</p>
</section>
<section id="dask-finishes-in-a-similar-amount-of-time-as-ibis-duckdb-within-2x" class="level3">
<h3 class="anchored" data-anchor-id="dask-finishes-in-a-similar-amount-of-time-as-ibis-duckdb-within-2x">Dask finishes in a similar amount of time as Ibis + DuckDB (within 2x)</h3>
<p>Out of the box I had quite a bit of difficulty figuring out how to maximize performance and not run out of memory.</p>
<p>Please get in touch if you think my Dask code can be improved!</p>
<p>I know the Dask community is hard at work building <a href="https://github.com/dask-contrib/dask-expr"><code>dask-expr</code></a> which might improve the performance of this workload when it lands.</p>
</section>
</section>
<section id="next-steps" class="level2">
<h2 class="anchored" data-anchor-id="next-steps">Next steps</h2>
<section id="please-get-in-touch" class="level3">
<h3 class="anchored" data-anchor-id="please-get-in-touch">Please get in touch!</h3>
<p>If you have ideas about how to speed up my use of the tools I’ve discussed here please get in touch by opening a <a href="https://github.com/ibis-project/ibis/discussions">GitHub discussion</a>!</p>
<p>We would love it if more backends handled this workload!</p>
</section>
<section id="look-out-for-part-2" class="level3">
<h3 class="anchored" data-anchor-id="look-out-for-part-2">Look out for part 2</h3>
<p>In part 2 of this series we’ll explore how Polars and DataFusion perform on this query. Stay tuned!</p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>case study</category>
  <category>ecosystem</category>
  <category>performance</category>
  <guid>https://ibis-project.org/posts/pydata-performance/index.html</guid>
  <pubDate>Wed, 06 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>dbt-ibis: Write your dbt models using Ibis</title>
  <dc:creator>Stefan Binder</dc:creator>
  <link>https://ibis-project.org/posts/dbt-ibis/index.html</link>
  <description><![CDATA[ 




<section id="introduction-to-dbt" class="level1">
<h1>Introduction to dbt</h1>
<p><a href="https://github.com/dbt-labs/dbt-core">dbt</a> has revolutionized how transformations are orchestrated and managed within modern data warehouses. Initially released in 2016, dbt quickly gained traction within the data analytics community due to its focus on bringing software engineering best practices to analytics code like modularity, portability, CI/CD, and documentation.</p>
<p>At the heart of dbt are so called “models” which are just simple SQL SELECT statements (see further below for an example). dbt removes the need to write any DDL/DML, allowing users to focus on writing SELECT statements. Depending on how you configure it, the queries are materialized as tables, views, or custom materializations. dbt also infers dependencies between models and runs them in order. The following is a dbt model which selects from two other models called <code>stg_orders</code> and <code>stg_customers</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WITH</span> customer_orders <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> (</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb1-3">        customer_id <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> customer_id,</span>
<span id="cb1-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MIN</span>(order_date) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> first_order,</span>
<span id="cb1-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MAX</span>(order_date) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> most_recent_order,</span>
<span id="cb1-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COUNT</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> number_of_orders</span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> {{ <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ref</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stg_orders'</span>) }} <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> orders</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">GROUP</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span></span>
<span id="cb1-9">        customer_id</span>
<span id="cb1-10">), customer_orders_info <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> (</span>
<span id="cb1-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb1-12">        customers.customer_id <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> customer_id,</span>
<span id="cb1-13">        customers.first_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> first_name,</span>
<span id="cb1-14">        customers.last_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> last_name,</span>
<span id="cb1-15">        customer_orders.customer_id <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> customer_id_right,</span>
<span id="cb1-16">        customer_orders.first_order <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> first_order,</span>
<span id="cb1-17">        customer_orders.most_recent_order <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> most_recent_order,</span>
<span id="cb1-18">        customer_orders.number_of_orders <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> number_of_orders</span>
<span id="cb1-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> {{ <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ref</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stg_customers'</span>) }} <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> customers</span>
<span id="cb1-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">LEFT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OUTER</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">JOIN</span> customer_orders</span>
<span id="cb1-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ON</span> customers.customer_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> customer_orders.customer_id</span>
<span id="cb1-22">)</span>
<span id="cb1-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb1-24">    customer_id,</span>
<span id="cb1-25">    first_name,</span>
<span id="cb1-26">    last_name,</span>
<span id="cb1-27">    first_order,</span>
<span id="cb1-28">    most_recent_order,</span>
<span id="cb1-29">    number_of_orders</span>
<span id="cb1-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> customer_orders_info</span></code></pre></div>
<p>dbt will make sure that the resulting table will be created after <code>stg_orders</code> and <code>stg_customers</code>. This model is inspired by the <a href="https://github.com/dbt-labs/jaffle_shop">jaffle shop demo project by dbt Labs</a> where you can find more example queries.</p>
<p>At the end of 2022, dbt added support for <a href="https://docs.getdbt.com/docs/build/python-models">Python models</a> on specific platforms (Snowflake, Databricks, Google Cloud Platform). This can be useful for complex transformations such as using a machine learning model and storing the results. However, it also requires that your Python code is run in a cloud data warehouse and often, that data is moved into a Python process which can be slower than leveraging the power of modern SQL engines.</p>
</section>
<section id="why-dbt-and-ibis-go-great-together" class="level1">
<h1>Why dbt and Ibis go great together</h1>
<p><a href="https://github.com/binste/dbt-ibis">dbt-ibis</a> offers a lightweight and compatible alternative, which allows you to write dbt models using Ibis. dbt-ibis transparently converts your Ibis statements into SQL and then hands it over to dbt. Your database does not need to have Python support for this as everything is executed in the same process as dbt. Hence, this allows for working in Python for all dbt adapters with supported Ibis backends. Rewriting the above SQL model in Ibis we get:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dbt_ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> depends_on, ref</span>
<span id="cb2-2"></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@depends_on</span>(ref(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stg_customers"</span>), ref(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stg_orders"</span>))</span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> model(customers, orders):</span>
<span id="cb2-6">    customer_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> orders.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>).aggregate(</span>
<span id="cb2-7">        first_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>orders[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"order_date"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),</span>
<span id="cb2-8">        most_recent_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>orders[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"order_date"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(),</span>
<span id="cb2-9">        number_of_orders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>orders.count(),</span>
<span id="cb2-10">    )</span>
<span id="cb2-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add first_name and last_name</span></span>
<span id="cb2-12">    customer_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> customers.join(customer_orders, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb2-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> customer_orders.select(</span>
<span id="cb2-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>,</span>
<span id="cb2-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first_name"</span>,</span>
<span id="cb2-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last_name"</span>,</span>
<span id="cb2-17">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first_order"</span>,</span>
<span id="cb2-18">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"most_recent_order"</span>,</span>
<span id="cb2-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number_of_orders"</span>,</span>
<span id="cb2-20">        )</span></code></pre></div>
<p>Using Ibis instead of SQL for dbt models brings you many advantages:</p>
<ul>
<li>Type checks and validation before your code is executed in a database.</li>
<li>More composable as you can break down complex queries into smaller pieces.</li>
<li>Better reusability of code. Although dbt allows you to use <a href="https://docs.getdbt.com/docs/build/jinja-macros">Jinja and macros</a>, which is an improvement over plain SQL, this gets you only so far. String manipulation is inherently fragile. With dbt-ibis, you can easily share common code between models.</li>
<li>Your dbt models become backend agnostic which reduces lock-in to a specific database. Furthermore, you get the possibility of building a <a href="https://juhache.substack.com/p/n-engines-1-language?publication_id=1211981&amp;post_id=137718100">multi-engine data stack</a>. For example, you could use DuckDB for small to medium workloads and Snowflake for heavy workloads and as an end-user and BI layer leveraging its governance features. Depending on the size of your warehouse, this can result in significant cost savings.</li>
<li>Unit test your code with your favorite Python testing frameworks such as pytest.</li>
</ul>
<p>In addition, you can stick to the tool (Ibis) you like, no matter if you’re writing an ingestion pipeline, a dbt model to transform the data in your data warehouse, or conduct an ad-hoc analysis in a Jupyter notebook.</p>
<p>Be aware that a current limitation of dbt-ibis is that you cannot connect to the database from within your dbt models, i.e.&nbsp;you purely use Ibis to construct a SELECT statement. You cannot execute statements and act based on the results.</p>
</section>
<section id="further-readings" class="level1">
<h1>Further readings</h1>
<p>If you want to give dbt-ibis a try, head over to the <a href="https://github.com/binste/dbt-ibis/blob/main/README.md">GitHub repo</a> for more information on how to get up and running in no time!</p>
<p>For more details on the future of the integration of Ibis within dbt, you can check out <a href="https://github.com/dbt-labs/dbt-core/pull/5274#issuecomment-1132772028">this PR</a> and <a href="https://github.com/dbt-labs/dbt-core/issues/6184">this GitHub issue</a> on adding an official plugin system to dbt which could be used to provide first-class support for modeling languages in general and which might allow dbt-ibis to provide an even better user experience and more features. See also this <a href="https://github.com/dbt-labs/dbt-core/discussions/5738">discussion on Ibis as a dataframe API in the dbt GitHub repo</a>.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>dbt</category>
  <category>data engineering</category>
  <guid>https://ibis-project.org/posts/dbt-ibis/index.html</guid>
  <pubDate>Fri, 24 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Querying every file in every release on the Python Package Index (redux)</title>
  <dc:creator>Gil Forsyth</dc:creator>
  <link>https://ibis-project.org/posts/querying-pypi-metadata-compiled-languages/index.html</link>
  <description><![CDATA[ 




<p>Seth Larson wrote a great <a href="https://sethmlarson.dev/security-developer-in-residence-weekly-report-18">blog post</a> on querying a PyPI dataset to look for trends in the use of memory-safe languages in Python.</p>
<p>Check out Seth’s article for more information on the dataset (and it’s a good read!). It caught our eye because it makes use of <a href="https://duckdb.org/">DuckDB</a> to clean the data for analysis.</p>
<p>That’s right up our alley here in Ibis land, so let’s see if we can duplicate Seth’s results (and then continue on to plot them!)</p>
<section id="grab-the-data-locations" class="level2">
<h2 class="anchored" data-anchor-id="grab-the-data-locations">Grab the data (locations)</h2>
<p>Seth showed (and then safely decomposed) a nested <code>curl</code> statement and that’s always viable – we’re in Python land so why not grab the filenames using <code>urllib3</code>?</p>
<div id="81f38c7a" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urllib3</span>
<span id="cb1-2"></span>
<span id="cb1-3">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/pypi-data/data/main/links/dataset.txt"</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> urllib3.PoolManager() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> http:</span>
<span id="cb1-6">    resp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> http.request(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GET"</span>, url)</span>
<span id="cb1-7"></span>
<span id="cb1-8">parquet_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resp.data.decode().split()</span>
<span id="cb1-9">parquet_files</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>['https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-0.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-1.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-10.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-11.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-12.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-13.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-14.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-2.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-3.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-4.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-5.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-6.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-7.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-8.parquet',
 'https://github.com/pypi-data/data/releases/download/2023-11-27-03-06/index-9.parquet']</code></pre>
</div>
</div>
</section>
<section id="grab-the-data" class="level2">
<h2 class="anchored" data-anchor-id="grab-the-data">Grab the data</h2>
<p>Now we’re ready to get started with Ibis!</p>
<p>DuckDB is clever enough to grab only the parquet metadata. This means we can use <code>read_parquet</code> to create a lazy view of the parquet files and then build up our expression without downloading everything beforehand!</p>
<div id="f593faf1" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="annotated-cell-2" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="1">1</button><span id="annotated-cell-2-2" class="code-annotation-target"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="annotated-cell-2-3"></span>
<span id="annotated-cell-2-4">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-2" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="2" data-code-annotation="1">See https://ibis-project.org/how-to/analytics/chain_expressions.html for docs on the deferred operator!</span>
</dd>
</dl>
</div>
</div>
<p>Create a DuckDB connection:</p>
<div id="2c0c0fab" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.duckdb.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>()</span></code></pre></div>
</div>
<p>And load up one of the files (we can run the full query after)!</p>
<div id="1237bd7c" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pypi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.read_parquet(parquet_files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], table_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pypi"</span>)</span></code></pre></div>
</div>
<div id="1f81de21" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">pypi.schema()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>ibis.Schema {
  project_name     string
  project_version  string
  project_release  string
  uploaded_on      timestamp
  path             string
  archive_path     string
  size             uint64
  hash             binary
  skip_reason      string
  lines            uint64
  repository       uint32
}</code></pre>
</div>
</div>
</section>
<section id="query-crafting" class="level2">
<h2 class="anchored" data-anchor-id="query-crafting">Query crafting</h2>
<p>Let’s break down what we’re looking for. As a high-level view of the use of compiled languages, Seth is using file extensions as an indicator that a given filetype is used in a Python project.</p>
<p>The dataset we’re using has <em>every file in every project</em> – what criteria should we use?</p>
<p>We can follow Seth’s lead and look for things:</p>
<ol type="1">
<li>A file extension that is one of: <code>asm</code>, <code>cc</code>, <code>cpp</code>, <code>cxx</code>, <code>h</code>, <code>hpp</code>, <code>rs</code>, <code>go</code>, and variants of <code>F90</code>, <code>f90</code>, etc… That is, C, C++, Assembly, Rust, Go, and Fortran.</li>
<li>We exclude matches where the file path is within the <code>site-packages/</code> directory.</li>
<li>We exclude matches that are in directories used for testing.</li>
</ol>
<div id="7e8640fd" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pypi.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb7-2">    [</span>
<span id="cb7-3">        _.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span>),</span>
<span id="cb7-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb7-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="cb7-6">    ]</span>
<span id="cb7-7">)</span>
<span id="cb7-8">expr</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> project_name    </span>┃<span style="font-weight: bold"> project_version </span>┃<span style="font-weight: bold"> project_release              </span>┃<span style="font-weight: bold"> uploaded_on             </span>┃<span style="font-weight: bold"> path                                                                             </span>┃<span style="font-weight: bold"> archive_path                                                                     </span>┃<span style="font-weight: bold"> size   </span>┃<span style="font-weight: bold"> hash                                                                 </span>┃<span style="font-weight: bold"> skip_reason </span>┃<span style="font-weight: bold"> lines  </span>┃<span style="font-weight: bold"> repository </span>┃
┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">uint64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">binary</span>                                                               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">uint64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">uint32</span>     │
├─────────────────┼─────────────────┼──────────────────────────────┼─────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┼────────┼──────────────────────────────────────────────────────────────────────┼─────────────┼────────┼────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/support.c                                 </span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1607</span> │ <span style="color: #008000; text-decoration-color: #008000">b'\xca\x0c\xf2\\R\x83\xefS\x0c\xe4\x0c\x15`\x1fM\x16"\x93\x88\x08'</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">66</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/stemmer.c                     </span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5054</span> │ <span style="color: #008000; text-decoration-color: #008000">b'y\xc3A\x12\x17\xd4\xeb\xbb\xcfan\xfd\x80\xbac\x18\xcf\xc0W\x9a'</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">313</span> │ <span style="color: #008000; text-decoration-color: #008000">b'\x81s\xa1t\x86}\xf9\xe5\xb5Zt\xcb\xd3\xae\nHfe\x8c\x9d'</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">80922</span> │ <span style="color: #008000; text-decoration-color: #008000">b'\xae&lt;\xc7f\x02\xc5{\xc50\xf4\xdc\x8fa\x1a\t..k\xd5\x9d'</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2205</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">313</span> │ <span style="color: #008000; text-decoration-color: #008000">b'\x14D\xeb\xb4\x9ac\xab\x14:b\xa4\xba\xa5\x9f\x1f\x06\xce\x0bj\xf2'</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10684</span> │ <span style="color: #008000; text-decoration-color: #008000">b"!\xa259'\x94\xc7.\x16\x0b\x08\x95J\x0e\xef\x86{\x0e\xd6\x8f"</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">309</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">313</span> │ <span style="color: #008000; text-decoration-color: #008000">b'\x10W.\xcc7\x08=WV\xde\x1bP9\x03w\x03\xa2\x8c\xe7\xec'</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">41620</span> │ <span style="color: #008000; text-decoration-color: #008000">b'\x95P\xd6|\x85\x97\xb2H\x14\xa0d&lt;q-iu\xc1\x98h\xbb'</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1097</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">313</span> │ <span style="color: #008000; text-decoration-color: #008000">b'N\xf7t\xdd\xcc\xbb8Y\x0b\xbc\xd5No_\x8d\xc7\xf2\x80\x10\xd0'</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext</span> │ <span style="color: #008000; text-decoration-color: #008000">3.3.2          </span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2.tar.gz</span> │ <span style="color: #800080; text-decoration-color: #800080">2010-03-06 16:09:43.735</span> │ <span style="color: #008000; text-decoration-color: #008000">packages/zopyx.txng3.ext/zopyx.txng3.ext-3.3.2.tar.gz/zopyx.txng3.ext-3.3.2/zop…</span> │ <span style="color: #008000; text-decoration-color: #008000">zopyx.txng3.ext-3.3.2/zopyx/txng3/ext/stemmer_src/libstemmer_c/src_c/stem_UTF_8…</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25440</span> │ <span style="color: #008000; text-decoration-color: #008000">b'o\n\x96M+\xb0\xfbV\xaa6&lt;*\xc8\xb0B\x03\x8a\xa9\xc3\x10'</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">~</span>           │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">694</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>           │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │          <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────────────┴─────────────────┴──────────────────────────────┴─────────────────────────┴──────────────────────────────────────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────┴────────┴──────────────────────────────────────────────────────────────────────┴─────────────┴────────┴────────────┘
</pre>
</div>
</div>
<p>That <em>could</em> be right – we can peak at the filename at the end of the <code>path</code> column to do a quick check:</p>
<div id="d8a4bc9b" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">expr.path.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ArrayIndex(StringSplit(path, '/'), -1) </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                 │
├────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">support.c                             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stemmer.c                             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_turkish.h                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_turkish.c                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_swedish.h                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_swedish.c                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_spanish.h                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_spanish.c                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_russian.h                  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">stem_UTF_8_russian.c                  </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                      │
└────────────────────────────────────────┘
</pre>
</div>
</div>
<p>Ok! Next up, we want to group the matches by:</p>
<ol type="1">
<li>The month that the package / file was published For this, we can use the <code>truncate</code> method and ask for month as our truncation window.</li>
<li>The file extension of the file used</li>
</ol>
<div id="edc6d70f" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">expr.group_by(</span>
<span id="cb9-2">    month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb9-3">    ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb9-4">).aggregate()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┓
┃<span style="font-weight: bold"> month               </span>┃<span style="font-weight: bold"> ext    </span>┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │
├─────────────────────┼────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2015-12-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">cpp   </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2015-11-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">h     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2015-12-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">f90   </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2015-11-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">hpp   </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-11-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">c     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">h     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-12-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">cpp   </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-03-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">h     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2011-08-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">cpp   </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-05-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">h     </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │
└─────────────────────┴────────┘
</pre>
</div>
</div>
<p>That looks promising. Now we need to grab the package names that correspond to a given file extension in a given month and deduplicate it. And to match Seth’s results, we’ll also sort by the month in descending order:</p>
<div id="02d5af05" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb10-2">    expr.group_by(</span>
<span id="cb10-3">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb10-4">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb10-5">    )</span>
<span id="cb10-6">    .aggregate(projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.collect().unique())</span>
<span id="cb10-7">    .order_by(_.month.desc())</span>
<span id="cb10-8">)</span>
<span id="cb10-9"></span>
<span id="cb10-10">expr</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> month               </span>┃<span style="font-weight: bold"> ext    </span>┃<span style="font-weight: bold"> projects                                            </span>┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                                       │
├─────────────────────┼────────┼─────────────────────────────────────────────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">c     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'newrelic'</span>, <span style="color: #008000; text-decoration-color: #008000">'nuclitrack'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">262</span><span style="font-weight: bold">]</span>                │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">asm   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pwntools'</span>, <span style="color: #008000; text-decoration-color: #008000">'fibers'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span><span style="font-weight: bold">]</span>                      │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">rs    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'rust-pypi-example'</span>, <span style="color: #008000; text-decoration-color: #008000">'tokio'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">f     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'okada-wrapper'</span>, <span style="color: #008000; text-decoration-color: #008000">'numpy'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span><span style="font-weight: bold">]</span>                  │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">cpp   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pipcudemo'</span>, <span style="color: #008000; text-decoration-color: #008000">'pyDEM'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">108</span><span style="font-weight: bold">]</span>                    │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">f90   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pySpecData'</span>, <span style="color: #008000; text-decoration-color: #008000">'numpy'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span><span style="font-weight: bold">]</span>                     │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">cxx   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pytetgen'</span>, <span style="color: #008000; text-decoration-color: #008000">'python-libsbml-experimental'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span><span style="font-weight: bold">]</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">go    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pre-commit'</span>, <span style="color: #008000; text-decoration-color: #008000">'django-instant'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>            │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">cc    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'nixio'</span>, <span style="color: #008000; text-decoration-color: #008000">'pogeo'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14</span><span style="font-weight: bold">]</span>                         │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">h     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'numba'</span>, <span style="color: #008000; text-decoration-color: #008000">'p4d'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">222</span><span style="font-weight: bold">]</span>                          │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                   │
└─────────────────────┴────────┴─────────────────────────────────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="massage-and-plot" class="level2">
<h2 class="anchored" data-anchor-id="massage-and-plot">Massage and plot</h2>
<p>Let’s continue and see what our results look like.</p>
<p>We’ll do a few things:</p>
<ol type="1">
<li>Combine all of the C and C++ extensions into a single group by renaming them all.</li>
<li>Count the number of distinct entries in each group</li>
<li>Plot the results!</li>
</ol>
<div id="e8f84935" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">collapse_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr.mutate(</span>
<span id="cb11-2">    ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.ext.re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb11-3">    .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb11-4">    .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb11-5">    .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb11-6">    .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb11-7">    .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb11-8">).dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="cb11-9"></span>
<span id="cb11-10">collapse_names</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> month               </span>┃<span style="font-weight: bold"> ext      </span>┃<span style="font-weight: bold"> projects                                            </span>┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                                       │
├─────────────────────┼──────────┼─────────────────────────────────────────────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pipcudemo'</span>, <span style="color: #008000; text-decoration-color: #008000">'pyDEM'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">108</span><span style="font-weight: bold">]</span>                    │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'numpy'</span>, <span style="color: #008000; text-decoration-color: #008000">'pySpecData'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span><span style="font-weight: bold">]</span>                     │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Go      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pre-commit'</span>, <span style="color: #008000; text-decoration-color: #008000">'ronin'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>                     │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pytetgen'</span>, <span style="color: #008000; text-decoration-color: #008000">'python-libsbml-experimental'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span><span style="font-weight: bold">]</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'newrelic'</span>, <span style="color: #008000; text-decoration-color: #008000">'nuclitrack'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">262</span><span style="font-weight: bold">]</span>                │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'okada-wrapper'</span>, <span style="color: #008000; text-decoration-color: #008000">'numpy'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span><span style="font-weight: bold">]</span>                  │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Assembly</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pwntools'</span>, <span style="color: #008000; text-decoration-color: #008000">'xmldirector.plonecore'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span><span style="font-weight: bold">]</span>       │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Rust    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'rust-pypi-example'</span>, <span style="color: #008000; text-decoration-color: #008000">'tokio'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'numba'</span>, <span style="color: #008000; text-decoration-color: #008000">'numpythia'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">222</span><span style="font-weight: bold">]</span>                    │
│ <span style="color: #800080; text-decoration-color: #800080">2017-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pyemd'</span>, <span style="color: #008000; text-decoration-color: #008000">'pogeo'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19</span><span style="font-weight: bold">]</span>                         │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                   │
└─────────────────────┴──────────┴─────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>Note that now we need to de-duplicate again, since we might’ve had separate unique entries for both an <code>h</code> and <code>c</code> file extension, and we don’t want to double-count!</p>
<p>We could rewrite our original query and include the renames in the original <code>group_by</code> (this would be the smart thing to do), but let’s push on and see if we can make this work.</p>
<p>The <code>projects</code> column is now a column of string arrays, so we want to collect all of the arrays in each group, this will give us a “list of lists”, then we’ll <code>flatten</code> that list and call <code>unique().length()</code> as before.</p>
<p>DuckDB has a <code>flatten</code> function, but it isn’t exposed in Ibis (yet!).</p>
<p>We’ll use a handy bit of Ibis magic to define a <code>builtin</code> <code>UDF</code> that will map directly onto the underlying DuckDB function (what!? See <a href="https://ibis-project.org/how-to/extending/builtin.html#duckdb">here</a> for more info):</p>
<div id="42a08cd7" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@ibis.udf.scalar.builtin</span></span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> flatten(x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb12-3">    ...</span>
<span id="cb12-4"></span>
<span id="cb12-5"></span>
<span id="cb12-6">collapse_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collapse_names.group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>]).aggregate(</span>
<span id="cb12-7">    projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flatten(_.projects.collect())</span>
<span id="cb12-8">)</span>
<span id="cb12-9"></span>
<span id="cb12-10">collapse_names</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> month               </span>┃<span style="font-weight: bold"> ext      </span>┃<span style="font-weight: bold"> projects                                    </span>┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                               │
├─────────────────────┼──────────┼─────────────────────────────────────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2009-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'gevent'</span>, <span style="color: #008000; text-decoration-color: #008000">'hashlib'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">52</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #800080; text-decoration-color: #800080">2009-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Assembly</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pycryptopp'</span><span style="font-weight: bold">]</span>                              │
│ <span style="color: #800080; text-decoration-color: #800080">2008-10-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'numscons'</span><span style="font-weight: bold">]</span>                                │
│ <span style="color: #800080; text-decoration-color: #800080">2008-08-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'numscons'</span><span style="font-weight: bold">]</span>                                │
│ <span style="color: #800080; text-decoration-color: #800080">2008-06-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'dm.incrementalsearch'</span>, <span style="color: #008000; text-decoration-color: #008000">'Cython'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">45</span><span style="font-weight: bold">]</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2008-05-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'numscons'</span><span style="font-weight: bold">]</span>                                │
│ <span style="color: #800080; text-decoration-color: #800080">2007-03-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Model-Builder'</span><span style="font-weight: bold">]</span>                           │
│ <span style="color: #800080; text-decoration-color: #800080">2005-05-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ll-xist'</span>, <span style="color: #008000; text-decoration-color: #008000">'ll-xist'</span><span style="font-weight: bold">]</span>                      │
│ <span style="color: #800080; text-decoration-color: #800080">2005-03-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pygenx'</span>, <span style="color: #008000; text-decoration-color: #008000">'pygenx'</span><span style="font-weight: bold">]</span>                        │
│ <span style="color: #800080; text-decoration-color: #800080">2011-08-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'pysces'</span>, <span style="color: #008000; text-decoration-color: #008000">'ffnet'</span><span style="font-weight: bold">]</span>                         │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                           │
└─────────────────────┴──────────┴─────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>We could have included the <code>unique().length()</code> in the <code>aggregate</code> call, but sometimes it’s good to check that your slightly off-kilter idea has worked (and it has!).</p>
<div id="ec05bdc8" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">collapse_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collapse_names.select(</span>
<span id="cb13-2">    _.month, _.ext, project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.projects.unique().length()</span>
<span id="cb13-3">)</span>
<span id="cb13-4"></span>
<span id="cb13-5">collapse_names</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> month               </span>┃<span style="font-weight: bold"> ext     </span>┃<span style="font-weight: bold"> project_count </span>┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │
├─────────────────────┼─────────┼───────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2007-03-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2006-01-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2005-10-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2011-08-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++  </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2011-03-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++  </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">63</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2011-01-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-12-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">C/C++  </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">48</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-08-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-07-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2010-03-01 00:00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">Fortran</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────────────────┴─────────┴───────────────┘
</pre>
</div>
</div>
<p>Now that the data are tidied, we can pass our expression directly to Altair and see what it looks like!</p>
<div id="c5073a65" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> altair <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> alt</span>
<span id="cb14-2"></span>
<span id="cb14-3">chart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb14-4">    alt.Chart(collapse_names.to_pandas())</span>
<span id="cb14-5">    .mark_line()</span>
<span id="cb14-6">    .encode(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="cb14-7">    .properties(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb14-8">)</span>
<span id="cb14-9">chart</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">

<style>
  #altair-viz-37b02474d27645f0a2da21047dc985f1.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-37b02474d27645f0a2da21047dc985f1.vega-embed details,
  #altair-viz-37b02474d27645f0a2da21047dc985f1.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-37b02474d27645f0a2da21047dc985f1"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-37b02474d27645f0a2da21047dc985f1") {
      outputDiv = document.getElementById("altair-viz-37b02474d27645f0a2da21047dc985f1");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.15.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.15.1"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "data": {"name": "data-b0d332105300c6467d81fb356d16d5a4"}, "mark": {"type": "line"}, "encoding": {"color": {"field": "ext", "type": "nominal"}, "x": {"field": "month", "type": "temporal"}, "y": {"field": "project_count", "type": "quantitative"}}, "height": 300, "width": 600, "$schema": "https://vega.github.io/schema/vega-lite/v5.15.1.json", "datasets": {"data-b0d332105300c6467d81fb356d16d5a4": [{"month": "2009-07-01T00:00:00", "ext": "C/C++", "project_count": 35}, {"month": "2009-07-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-06-01T00:00:00", "ext": "C/C++", "project_count": 28}, {"month": "2008-05-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-08-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2011-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-01-01T00:00:00", "ext": "C/C++", "project_count": 49}, {"month": "2011-01-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2010-08-01T00:00:00", "ext": "C/C++", "project_count": 51}, {"month": "2010-07-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2010-05-01T00:00:00", "ext": "C/C++", "project_count": 46}, {"month": "2010-03-01T00:00:00", "ext": "C/C++", "project_count": 59}, {"month": "2014-05-01T00:00:00", "ext": "Fortran", "project_count": 11}, {"month": "2014-02-01T00:00:00", "ext": "C/C++", "project_count": 146}, {"month": "2013-12-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2013-10-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-09-01T00:00:00", "ext": "C/C++", "project_count": 109}, {"month": "2013-09-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-05-01T00:00:00", "ext": "C/C++", "project_count": 131}, {"month": "2013-05-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2016-07-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-05-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2016-04-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2015-12-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2015-11-01T00:00:00", "ext": "C/C++", "project_count": 325}, {"month": "2015-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-10-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-09-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-07-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2017-07-01T00:00:00", "ext": "Rust", "project_count": 4}, {"month": "2017-03-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2017-02-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2017-01-01T00:00:00", "ext": "C/C++", "project_count": 411}, {"month": "2017-01-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2016-11-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2016-08-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2013-02-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2012-12-01T00:00:00", "ext": "C/C++", "project_count": 85}, {"month": "2012-09-01T00:00:00", "ext": "C/C++", "project_count": 88}, {"month": "2012-07-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2012-07-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2007-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2005-05-01T00:00:00", "ext": "C/C++", "project_count": 1}, {"month": "2005-03-01T00:00:00", "ext": "C/C++", "project_count": 1}, {"month": "2015-03-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-01-01T00:00:00", "ext": "C/C++", "project_count": 227}, {"month": "2015-01-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-10-01T00:00:00", "ext": "C/C++", "project_count": 207}, {"month": "2014-10-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-08-01T00:00:00", "ext": "Fortran", "project_count": 8}, {"month": "2008-10-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-10-01T00:00:00", "ext": "C/C++", "project_count": 31}, {"month": "2008-08-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-08-01T00:00:00", "ext": "C/C++", "project_count": 44}, {"month": "2008-06-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-05-01T00:00:00", "ext": "C/C++", "project_count": 24}, {"month": "2007-12-01T00:00:00", "ext": "C/C++", "project_count": 22}, {"month": "2011-08-01T00:00:00", "ext": "C/C++", "project_count": 57}, {"month": "2011-03-01T00:00:00", "ext": "C/C++", "project_count": 63}, {"month": "2011-01-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2010-12-01T00:00:00", "ext": "C/C++", "project_count": 48}, {"month": "2010-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-07-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2010-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2014-05-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2014-05-01T00:00:00", "ext": "C/C++", "project_count": 174}, {"month": "2014-04-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2014-03-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2014-02-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2013-12-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-12-01T00:00:00", "ext": "C/C++", "project_count": 134}, {"month": "2013-09-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2013-05-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2016-05-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2016-04-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2016-04-01T00:00:00", "ext": "C/C++", "project_count": 340}, {"month": "2015-12-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-12-01T00:00:00", "ext": "C/C++", "project_count": 261}, {"month": "2015-11-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2015-10-01T00:00:00", "ext": "Go", "project_count": 9}, {"month": "2015-09-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-07-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2017-07-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2017-03-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2017-02-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2017-01-01T00:00:00", "ext": "Fortran", "project_count": 17}, {"month": "2016-08-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-07-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2012-12-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-09-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-07-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2007-03-01T00:00:00", "ext": "C/C++", "project_count": 6}, {"month": "2006-01-01T00:00:00", "ext": "C/C++", "project_count": 5}, {"month": "2005-10-01T00:00:00", "ext": "C/C++", "project_count": 2}, {"month": "2015-01-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2014-10-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2014-08-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-08-01T00:00:00", "ext": "C/C++", "project_count": 196}, {"month": "2009-12-01T00:00:00", "ext": "C/C++", "project_count": 52}, {"month": "2009-11-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-09-01T00:00:00", "ext": "C/C++", "project_count": 41}, {"month": "2009-09-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2009-02-01T00:00:00", "ext": "C/C++", "project_count": 45}, {"month": "2009-01-01T00:00:00", "ext": "C/C++", "project_count": 39}, {"month": "2008-09-01T00:00:00", "ext": "C/C++", "project_count": 30}, {"month": "2008-09-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2007-10-01T00:00:00", "ext": "C/C++", "project_count": 17}, {"month": "2011-04-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2010-02-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2014-01-01T00:00:00", "ext": "Fortran", "project_count": 8}, {"month": "2013-08-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2013-06-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2013-04-01T00:00:00", "ext": "C/C++", "project_count": 118}, {"month": "2013-04-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-03-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2016-06-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2016-03-01T00:00:00", "ext": "C/C++", "project_count": 336}, {"month": "2016-03-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-02-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2016-01-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2015-08-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2017-06-01T00:00:00", "ext": "Fortran", "project_count": 22}, {"month": "2017-05-01T00:00:00", "ext": "Fortran", "project_count": 19}, {"month": "2017-04-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-12-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-10-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2016-09-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2013-01-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-04-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-11-01T00:00:00", "ext": "C/C++", "project_count": 51}, {"month": "2007-04-01T00:00:00", "ext": "C/C++", "project_count": 12}, {"month": "2006-09-01T00:00:00", "ext": "C/C++", "project_count": 12}, {"month": "2006-06-01T00:00:00", "ext": "C/C++", "project_count": 5}, {"month": "2005-11-01T00:00:00", "ext": "C/C++", "project_count": 6}, {"month": "2005-09-01T00:00:00", "ext": "C/C++", "project_count": 2}, {"month": "2005-07-01T00:00:00", "ext": "C/C++", "project_count": 4}, {"month": "2015-06-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2015-05-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2015-04-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-02-01T00:00:00", "ext": "C/C++", "project_count": 230}, {"month": "2015-02-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-12-01T00:00:00", "ext": "C/C++", "project_count": 228}, {"month": "2014-12-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2014-11-01T00:00:00", "ext": "C/C++", "project_count": 241}, {"month": "2014-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-09-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2014-07-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2014-06-01T00:00:00", "ext": "C/C++", "project_count": 201}, {"month": "2014-06-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2009-11-01T00:00:00", "ext": "C/C++", "project_count": 67}, {"month": "2009-09-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-03-01T00:00:00", "ext": "C/C++", "project_count": 50}, {"month": "2009-01-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-02-01T00:00:00", "ext": "C/C++", "project_count": 42}, {"month": "2009-12-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2014-01-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-01-01T00:00:00", "ext": "C/C++", "project_count": 160}, {"month": "2013-11-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-07-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-06-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-06-01T00:00:00", "ext": "C/C++", "project_count": 112}, {"month": "2013-04-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2013-03-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2013-03-01T00:00:00", "ext": "C/C++", "project_count": 118}, {"month": "2016-06-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-03-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2016-02-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2016-02-01T00:00:00", "ext": "C/C++", "project_count": 326}, {"month": "2016-01-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2016-01-01T00:00:00", "ext": "C/C++", "project_count": 317}, {"month": "2015-08-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2015-06-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2017-06-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2017-06-01T00:00:00", "ext": "C/C++", "project_count": 417}, {"month": "2017-05-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2017-05-01T00:00:00", "ext": "C/C++", "project_count": 391}, {"month": "2017-04-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2016-12-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2016-10-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-09-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2016-09-01T00:00:00", "ext": "C/C++", "project_count": 327}, {"month": "2013-01-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2013-01-01T00:00:00", "ext": "C/C++", "project_count": 111}, {"month": "2012-04-01T00:00:00", "ext": "C/C++", "project_count": 77}, {"month": "2011-11-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2011-10-01T00:00:00", "ext": "C/C++", "project_count": 50}, {"month": "2007-08-01T00:00:00", "ext": "C/C++", "project_count": 20}, {"month": "2007-06-01T00:00:00", "ext": "C/C++", "project_count": 10}, {"month": "2006-07-01T00:00:00", "ext": "C/C++", "project_count": 10}, {"month": "2005-12-01T00:00:00", "ext": "C/C++", "project_count": 5}, {"month": "2005-08-01T00:00:00", "ext": "C/C++", "project_count": 7}, {"month": "2015-05-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-05-01T00:00:00", "ext": "C/C++", "project_count": 225}, {"month": "2015-04-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2015-02-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2014-12-01T00:00:00", "ext": "Fortran", "project_count": 17}, {"month": "2014-11-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2014-09-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-07-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-06-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2009-05-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-04-01T00:00:00", "ext": "C/C++", "project_count": 36}, {"month": "2008-12-01T00:00:00", "ext": "C/C++", "project_count": 38}, {"month": "2008-04-01T00:00:00", "ext": "C/C++", "project_count": 27}, {"month": "2008-04-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-03-01T00:00:00", "ext": "C/C++", "project_count": 25}, {"month": "2008-01-01T00:00:00", "ext": "C/C++", "project_count": 19}, {"month": "2007-11-01T00:00:00", "ext": "C/C++", "project_count": 19}, {"month": "2011-05-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-02-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-11-01T00:00:00", "ext": "C/C++", "project_count": 42}, {"month": "2010-01-01T00:00:00", "ext": "C/C++", "project_count": 37}, {"month": "2014-04-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2014-03-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2014-02-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-10-01T00:00:00", "ext": "C/C++", "project_count": 138}, {"month": "2013-10-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2013-09-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-05-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2016-05-01T00:00:00", "ext": "Fortran", "project_count": 15}, {"month": "2016-04-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-12-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2015-11-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-10-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2015-09-01T00:00:00", "ext": "C/C++", "project_count": 327}, {"month": "2015-09-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-07-01T00:00:00", "ext": "C/C++", "project_count": 272}, {"month": "2015-07-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2017-07-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2017-03-01T00:00:00", "ext": "Fortran", "project_count": 18}, {"month": "2017-02-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2017-01-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2016-11-01T00:00:00", "ext": "C/C++", "project_count": 368}, {"month": "2016-11-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-08-01T00:00:00", "ext": "C/C++", "project_count": 325}, {"month": "2016-08-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-07-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2013-02-01T00:00:00", "ext": "C/C++", "project_count": 102}, {"month": "2013-02-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-12-01T00:00:00", "ext": "Go", "project_count": 1}, {"month": "2012-08-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2012-03-01T00:00:00", "ext": "C/C++", "project_count": 82}, {"month": "2012-03-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-02-01T00:00:00", "ext": "C/C++", "project_count": 74}, {"month": "2012-02-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2007-07-01T00:00:00", "ext": "C/C++", "project_count": 20}, {"month": "2007-02-01T00:00:00", "ext": "C/C++", "project_count": 10}, {"month": "2006-05-01T00:00:00", "ext": "C/C++", "project_count": 4}, {"month": "2006-03-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2005-04-01T00:00:00", "ext": "C/C++", "project_count": 1}, {"month": "2015-03-01T00:00:00", "ext": "C/C++", "project_count": 260}, {"month": "2015-03-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2015-01-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2014-10-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2014-08-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2009-05-01T00:00:00", "ext": "C/C++", "project_count": 42}, {"month": "2009-04-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2008-04-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2008-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-01-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2007-09-01T00:00:00", "ext": "C/C++", "project_count": 14}, {"month": "2011-06-01T00:00:00", "ext": "C/C++", "project_count": 49}, {"month": "2011-05-01T00:00:00", "ext": "C/C++", "project_count": 76}, {"month": "2011-02-01T00:00:00", "ext": "C/C++", "project_count": 48}, {"month": "2010-11-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2010-01-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2014-05-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2014-04-01T00:00:00", "ext": "C/C++", "project_count": 181}, {"month": "2014-04-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2014-03-01T00:00:00", "ext": "C/C++", "project_count": 182}, {"month": "2014-03-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-12-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-10-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2013-05-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-07-01T00:00:00", "ext": "C/C++", "project_count": 333}, {"month": "2016-05-01T00:00:00", "ext": "C/C++", "project_count": 310}, {"month": "2016-05-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2016-04-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2015-12-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2015-10-01T00:00:00", "ext": "C/C++", "project_count": 306}, {"month": "2015-10-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-09-01T00:00:00", "ext": "Fortran", "project_count": 8}, {"month": "2015-07-01T00:00:00", "ext": "Fortran", "project_count": 10}, {"month": "2017-07-01T00:00:00", "ext": "C/C++", "project_count": 363}, {"month": "2017-07-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2017-03-01T00:00:00", "ext": "C/C++", "project_count": 386}, {"month": "2017-03-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2017-02-01T00:00:00", "ext": "C/C++", "project_count": 378}, {"month": "2017-02-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-11-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2016-08-01T00:00:00", "ext": "Fortran", "project_count": 10}, {"month": "2016-07-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-02-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2012-08-01T00:00:00", "ext": "C/C++", "project_count": 84}, {"month": "2012-08-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2012-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2012-02-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2007-05-01T00:00:00", "ext": "C/C++", "project_count": 13}, {"month": "2006-04-01T00:00:00", "ext": "C/C++", "project_count": 4}, {"month": "2006-02-01T00:00:00", "ext": "C/C++", "project_count": 3}, {"month": "2015-03-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2015-01-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-10-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2014-08-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2009-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-06-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-11-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-07-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-02-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-07-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2010-10-01T00:00:00", "ext": "C/C++", "project_count": 60}, {"month": "2010-09-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-06-01T00:00:00", "ext": "C/C++", "project_count": 73}, {"month": "2010-06-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2010-04-01T00:00:00", "ext": "C/C++", "project_count": 70}, {"month": "2013-11-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2013-08-01T00:00:00", "ext": "C/C++", "project_count": 135}, {"month": "2013-08-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-07-01T00:00:00", "ext": "Fortran", "project_count": 7}, {"month": "2013-04-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2016-06-01T00:00:00", "ext": "C/C++", "project_count": 319}, {"month": "2016-06-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2016-03-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2016-02-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-01-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-08-01T00:00:00", "ext": "C/C++", "project_count": 257}, {"month": "2015-08-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2017-06-01T00:00:00", "ext": "Rust", "project_count": 6}, {"month": "2017-05-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2017-04-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2016-12-01T00:00:00", "ext": "Fortran", "project_count": 7}, {"month": "2016-10-01T00:00:00", "ext": "C/C++", "project_count": 370}, {"month": "2016-10-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2016-09-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2012-11-01T00:00:00", "ext": "C/C++", "project_count": 106}, {"month": "2012-11-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-10-01T00:00:00", "ext": "C/C++", "project_count": 86}, {"month": "2012-06-01T00:00:00", "ext": "C/C++", "project_count": 81}, {"month": "2012-06-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-05-01T00:00:00", "ext": "C/C++", "project_count": 83}, {"month": "2012-01-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2011-12-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-09-01T00:00:00", "ext": "C/C++", "project_count": 55}, {"month": "2007-01-01T00:00:00", "ext": "C/C++", "project_count": 12}, {"month": "2006-11-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2006-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2006-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2015-06-01T00:00:00", "ext": "Fortran", "project_count": 11}, {"month": "2015-05-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-04-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2015-02-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2014-12-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2014-11-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2014-09-01T00:00:00", "ext": "C/C++", "project_count": 191}, {"month": "2014-09-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-07-01T00:00:00", "ext": "C/C++", "project_count": 198}, {"month": "2014-07-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-06-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2009-10-01T00:00:00", "ext": "C/C++", "project_count": 40}, {"month": "2009-08-01T00:00:00", "ext": "C/C++", "project_count": 38}, {"month": "2009-06-01T00:00:00", "ext": "C/C++", "project_count": 44}, {"month": "2009-06-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-11-01T00:00:00", "ext": "C/C++", "project_count": 30}, {"month": "2008-11-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-07-01T00:00:00", "ext": "C/C++", "project_count": 21}, {"month": "2008-02-01T00:00:00", "ext": "C/C++", "project_count": 24}, {"month": "2011-07-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-09-01T00:00:00", "ext": "C/C++", "project_count": 73}, {"month": "2010-09-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2010-06-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2010-04-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2014-01-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-11-01T00:00:00", "ext": "C/C++", "project_count": 151}, {"month": "2013-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-08-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2013-07-01T00:00:00", "ext": "C/C++", "project_count": 113}, {"month": "2013-07-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2013-06-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-03-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2016-06-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2016-03-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-02-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2016-01-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2015-08-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2015-06-01T00:00:00", "ext": "C/C++", "project_count": 279}, {"month": "2017-06-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2017-05-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2017-04-01T00:00:00", "ext": "C/C++", "project_count": 376}, {"month": "2017-04-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2016-12-01T00:00:00", "ext": "C/C++", "project_count": 401}, {"month": "2016-12-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2016-10-01T00:00:00", "ext": "Fortran", "project_count": 11}, {"month": "2016-09-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2013-01-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2012-11-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2012-10-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2012-06-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-05-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2012-01-01T00:00:00", "ext": "C/C++", "project_count": 68}, {"month": "2012-01-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2011-12-01T00:00:00", "ext": "C/C++", "project_count": 63}, {"month": "2006-12-01T00:00:00", "ext": "C/C++", "project_count": 11}, {"month": "2006-11-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2006-10-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2006-08-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2015-06-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-05-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-04-01T00:00:00", "ext": "C/C++", "project_count": 253}, {"month": "2015-04-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2015-02-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-12-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-11-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2014-09-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2014-07-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2014-06-01T00:00:00", "ext": "Rust", "project_count": 1}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>That looks good, but it definitely doesn’t match the plot from Seth’s post:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ibis-project.org/posts/querying-pypi-metadata-compiled-languages/upstream_plot.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">upstream plot</figcaption>
</figure>
</div>
<p>Our current plot is only showing the results from a subset of the available data. Now that our expression is complete, we can re-run on the full dataset and compare.</p>
</section>
<section id="the-full-run" class="level2">
<h2 class="anchored" data-anchor-id="the-full-run">The full run</h2>
<p>To recap – we pulled a lazy view of a single parquet file from the <code>pypi-data</code> repo, filtered for all the files that contain file extensions we care about, then grouped them all together to get counts of the various filetypes used across projects by month.</p>
<p>Here’s the entire query chained together into a single command, now running on all of the <code>parquet</code> files we have access to:</p>
<div id="859879c8" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">pypi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.read_parquet(parquet_files, table_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pypi"</span>)</span>
<span id="cb15-2"></span>
<span id="cb15-3">full_query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb15-4">    pypi.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb15-5">        [</span>
<span id="cb15-6">            _.path.re_search(</span>
<span id="cb15-7">                <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.(asm|c|cc|cpp|cxx|h|hpp|rs|[Ff][0-9]{0,2}(?:or)?|go)$"</span></span>
<span id="cb15-8">            ),</span>
<span id="cb15-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.re_search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"(^|/)test(|s|ing)"</span>),</span>
<span id="cb15-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>_.path.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/site-packages/"</span>),</span>
<span id="cb15-11">        ]</span>
<span id="cb15-12">    )</span>
<span id="cb15-13">    .group_by(</span>
<span id="cb15-14">        month<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.uploaded_on.truncate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>),</span>
<span id="cb15-15">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.path.re_extract(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\.([a-z0-9]+)$"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb15-16">    )</span>
<span id="cb15-17">    .aggregate(projects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.project_name.collect().unique())</span>
<span id="cb15-18">    .order_by(_.month.desc())</span>
<span id="cb15-19">    .mutate(</span>
<span id="cb15-20">        ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.ext.re_replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"cxx|cpp|cc|c|hpp|h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C/C++"</span>)</span>
<span id="cb15-21">        .re_replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^f.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fortran"</span>)</span>
<span id="cb15-22">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)</span>
<span id="cb15-23">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go"</span>)</span>
<span id="cb15-24">        .replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assembly"</span>)</span>
<span id="cb15-25">        .nullif(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb15-26">    )</span>
<span id="cb15-27">    .dropna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="cb15-28">    .group_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>])</span>
<span id="cb15-29">    .aggregate(project_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flatten(_.projects.collect()).unique().length())</span>
<span id="cb15-30">)</span>
<span id="cb15-31">chart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb15-32">    alt.Chart(full_query.to_pandas())</span>
<span id="cb15-33">    .mark_line()</span>
<span id="cb15-34">    .encode(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project_count"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ext"</span>)</span>
<span id="cb15-35">    .properties(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb15-36">)</span>
<span id="cb15-37">chart</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">

<style>
  #altair-viz-efcaf09b53af4eed9254cfc92780346a.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-efcaf09b53af4eed9254cfc92780346a.vega-embed details,
  #altair-viz-efcaf09b53af4eed9254cfc92780346a.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-efcaf09b53af4eed9254cfc92780346a"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-efcaf09b53af4eed9254cfc92780346a") {
      outputDiv = document.getElementById("altair-viz-efcaf09b53af4eed9254cfc92780346a");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.15.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.15.1"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "data": {"name": "data-0c3879f92a02b7bf904fc63f0e3f19a6"}, "mark": {"type": "line"}, "encoding": {"color": {"field": "ext", "type": "nominal"}, "x": {"field": "month", "type": "temporal"}, "y": {"field": "project_count", "type": "quantitative"}}, "height": 300, "width": 600, "$schema": "https://vega.github.io/schema/vega-lite/v5.15.1.json", "datasets": {"data-0c3879f92a02b7bf904fc63f0e3f19a6": [{"month": "2008-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-06-01T00:00:00", "ext": "C/C++", "project_count": 28}, {"month": "2008-05-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2007-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2005-05-01T00:00:00", "ext": "C/C++", "project_count": 1}, {"month": "2005-03-01T00:00:00", "ext": "C/C++", "project_count": 1}, {"month": "2013-02-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2012-12-01T00:00:00", "ext": "C/C++", "project_count": 85}, {"month": "2012-09-01T00:00:00", "ext": "C/C++", "project_count": 88}, {"month": "2012-07-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2012-07-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2011-08-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2011-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-01-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2011-01-01T00:00:00", "ext": "C/C++", "project_count": 49}, {"month": "2010-08-01T00:00:00", "ext": "C/C++", "project_count": 51}, {"month": "2010-07-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2010-05-01T00:00:00", "ext": "C/C++", "project_count": 46}, {"month": "2010-03-01T00:00:00", "ext": "C/C++", "project_count": 59}, {"month": "2009-07-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2009-07-01T00:00:00", "ext": "C/C++", "project_count": 35}, {"month": "2019-12-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2019-12-01T00:00:00", "ext": "C/C++", "project_count": 647}, {"month": "2019-11-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2019-11-01T00:00:00", "ext": "C/C++", "project_count": 803}, {"month": "2019-07-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2019-07-01T00:00:00", "ext": "C/C++", "project_count": 620}, {"month": "2019-02-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2019-02-01T00:00:00", "ext": "C/C++", "project_count": 591}, {"month": "2019-01-01T00:00:00", "ext": "Go", "project_count": 10}, {"month": "2018-11-01T00:00:00", "ext": "Go", "project_count": 9}, {"month": "2018-08-01T00:00:00", "ext": "Fortran", "project_count": 29}, {"month": "2015-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-11-01T00:00:00", "ext": "C/C++", "project_count": 325}, {"month": "2015-10-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-09-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-07-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2015-03-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-01-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-01-01T00:00:00", "ext": "C/C++", "project_count": 227}, {"month": "2014-10-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-10-01T00:00:00", "ext": "C/C++", "project_count": 207}, {"month": "2014-08-01T00:00:00", "ext": "Fortran", "project_count": 8}, {"month": "2014-05-01T00:00:00", "ext": "Fortran", "project_count": 11}, {"month": "2014-02-01T00:00:00", "ext": "C/C++", "project_count": 146}, {"month": "2013-12-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2013-10-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-09-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-09-01T00:00:00", "ext": "C/C++", "project_count": 109}, {"month": "2013-05-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2013-05-01T00:00:00", "ext": "C/C++", "project_count": 131}, {"month": "2021-03-01T00:00:00", "ext": "Fortran", "project_count": 77}, {"month": "2020-12-01T00:00:00", "ext": "Go", "project_count": 17}, {"month": "2020-09-01T00:00:00", "ext": "Go", "project_count": 16}, {"month": "2020-07-01T00:00:00", "ext": "Go", "project_count": 13}, {"month": "2020-04-01T00:00:00", "ext": "Rust", "project_count": 26}, {"month": "2020-03-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2020-03-01T00:00:00", "ext": "C/C++", "project_count": 768}, {"month": "2020-02-01T00:00:00", "ext": "Fortran", "project_count": 45}, {"month": "2020-01-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2020-01-01T00:00:00", "ext": "C/C++", "project_count": 694}, {"month": "2022-09-01T00:00:00", "ext": "Fortran", "project_count": 61}, {"month": "2022-05-01T00:00:00", "ext": "Rust", "project_count": 106}, {"month": "2022-04-01T00:00:00", "ext": "Fortran", "project_count": 55}, {"month": "2022-03-01T00:00:00", "ext": "Fortran", "project_count": 69}, {"month": "2022-02-01T00:00:00", "ext": "Go", "project_count": 20}, {"month": "2021-09-01T00:00:00", "ext": "Rust", "project_count": 54}, {"month": "2021-08-01T00:00:00", "ext": "Assembly", "project_count": 16}, {"month": "2021-08-01T00:00:00", "ext": "C/C++", "project_count": 782}, {"month": "2018-02-01T00:00:00", "ext": "Rust", "project_count": 6}, {"month": "2018-01-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2018-01-01T00:00:00", "ext": "C/C++", "project_count": 423}, {"month": "2017-11-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2017-08-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2017-07-01T00:00:00", "ext": "Rust", "project_count": 4}, {"month": "2017-03-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2017-02-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2017-01-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2017-01-01T00:00:00", "ext": "C/C++", "project_count": 411}, {"month": "2016-11-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2016-08-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2016-07-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-05-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2016-04-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2015-12-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2023-11-01T00:00:00", "ext": "Assembly", "project_count": 13}, {"month": "2023-11-01T00:00:00", "ext": "C/C++", "project_count": 1090}, {"month": "2023-10-01T00:00:00", "ext": "Go", "project_count": 46}, {"month": "2023-08-01T00:00:00", "ext": "Assembly", "project_count": 15}, {"month": "2023-08-01T00:00:00", "ext": "C/C++", "project_count": 1088}, {"month": "2023-05-01T00:00:00", "ext": "Go", "project_count": 34}, {"month": "2023-01-01T00:00:00", "ext": "Rust", "project_count": 188}, {"month": "2022-11-01T00:00:00", "ext": "Rust", "project_count": 140}, {"month": "2008-10-01T00:00:00", "ext": "C/C++", "project_count": 31}, {"month": "2008-10-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-08-01T00:00:00", "ext": "C/C++", "project_count": 44}, {"month": "2008-08-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-06-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-05-01T00:00:00", "ext": "C/C++", "project_count": 24}, {"month": "2007-12-01T00:00:00", "ext": "C/C++", "project_count": 22}, {"month": "2007-03-01T00:00:00", "ext": "C/C++", "project_count": 6}, {"month": "2006-01-01T00:00:00", "ext": "C/C++", "project_count": 5}, {"month": "2005-10-01T00:00:00", "ext": "C/C++", "project_count": 2}, {"month": "2012-12-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-09-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-07-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2011-08-01T00:00:00", "ext": "C/C++", "project_count": 57}, {"month": "2011-03-01T00:00:00", "ext": "C/C++", "project_count": 63}, {"month": "2011-01-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2010-12-01T00:00:00", "ext": "C/C++", "project_count": 48}, {"month": "2010-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-07-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2010-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2019-12-01T00:00:00", "ext": "Fortran", "project_count": 32}, {"month": "2019-11-01T00:00:00", "ext": "Fortran", "project_count": 59}, {"month": "2019-07-01T00:00:00", "ext": "Fortran", "project_count": 30}, {"month": "2019-02-01T00:00:00", "ext": "Fortran", "project_count": 29}, {"month": "2019-01-01T00:00:00", "ext": "Rust", "project_count": 5}, {"month": "2018-11-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2018-08-01T00:00:00", "ext": "C/C++", "project_count": 566}, {"month": "2018-08-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2015-11-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2015-10-01T00:00:00", "ext": "Go", "project_count": 9}, {"month": "2015-09-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-07-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2015-01-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2014-10-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2014-08-01T00:00:00", "ext": "C/C++", "project_count": 196}, {"month": "2014-08-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-05-01T00:00:00", "ext": "C/C++", "project_count": 174}, {"month": "2014-05-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2014-04-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2014-03-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2014-02-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2013-12-01T00:00:00", "ext": "C/C++", "project_count": 134}, {"month": "2013-12-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-09-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2013-05-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2021-03-01T00:00:00", "ext": "C/C++", "project_count": 941}, {"month": "2021-03-01T00:00:00", "ext": "Assembly", "project_count": 13}, {"month": "2020-12-01T00:00:00", "ext": "Rust", "project_count": 38}, {"month": "2020-09-01T00:00:00", "ext": "Rust", "project_count": 31}, {"month": "2020-07-01T00:00:00", "ext": "Rust", "project_count": 33}, {"month": "2020-04-01T00:00:00", "ext": "Go", "project_count": 12}, {"month": "2020-03-01T00:00:00", "ext": "Fortran", "project_count": 43}, {"month": "2020-02-01T00:00:00", "ext": "C/C++", "project_count": 740}, {"month": "2020-02-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2020-01-01T00:00:00", "ext": "Fortran", "project_count": 39}, {"month": "2022-09-01T00:00:00", "ext": "C/C++", "project_count": 1020}, {"month": "2022-09-01T00:00:00", "ext": "Assembly", "project_count": 14}, {"month": "2022-05-01T00:00:00", "ext": "Go", "project_count": 22}, {"month": "2022-04-01T00:00:00", "ext": "C/C++", "project_count": 961}, {"month": "2022-04-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2022-03-01T00:00:00", "ext": "C/C++", "project_count": 1126}, {"month": "2022-03-01T00:00:00", "ext": "Assembly", "project_count": 12}, {"month": "2022-02-01T00:00:00", "ext": "Rust", "project_count": 92}, {"month": "2021-09-01T00:00:00", "ext": "Go", "project_count": 25}, {"month": "2021-08-01T00:00:00", "ext": "Fortran", "project_count": 46}, {"month": "2018-02-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2018-01-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2017-11-01T00:00:00", "ext": "Go", "project_count": 12}, {"month": "2017-08-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2017-07-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2017-03-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2017-02-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2017-01-01T00:00:00", "ext": "Fortran", "project_count": 17}, {"month": "2016-08-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-07-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2016-05-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2016-04-01T00:00:00", "ext": "C/C++", "project_count": 340}, {"month": "2016-04-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-12-01T00:00:00", "ext": "C/C++", "project_count": 261}, {"month": "2015-12-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2023-11-01T00:00:00", "ext": "Fortran", "project_count": 85}, {"month": "2023-10-01T00:00:00", "ext": "Rust", "project_count": 250}, {"month": "2023-08-01T00:00:00", "ext": "Fortran", "project_count": 57}, {"month": "2023-05-01T00:00:00", "ext": "Rust", "project_count": 203}, {"month": "2023-01-01T00:00:00", "ext": "Go", "project_count": 33}, {"month": "2022-11-01T00:00:00", "ext": "Go", "project_count": 24}, {"month": "2009-02-01T00:00:00", "ext": "C/C++", "project_count": 45}, {"month": "2009-01-01T00:00:00", "ext": "C/C++", "project_count": 39}, {"month": "2008-09-01T00:00:00", "ext": "C/C++", "project_count": 30}, {"month": "2008-09-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2007-10-01T00:00:00", "ext": "C/C++", "project_count": 17}, {"month": "2007-04-01T00:00:00", "ext": "C/C++", "project_count": 12}, {"month": "2006-09-01T00:00:00", "ext": "C/C++", "project_count": 12}, {"month": "2006-06-01T00:00:00", "ext": "C/C++", "project_count": 5}, {"month": "2005-11-01T00:00:00", "ext": "C/C++", "project_count": 6}, {"month": "2005-09-01T00:00:00", "ext": "C/C++", "project_count": 2}, {"month": "2005-07-01T00:00:00", "ext": "C/C++", "project_count": 4}, {"month": "2013-01-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-04-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-11-01T00:00:00", "ext": "C/C++", "project_count": 51}, {"month": "2011-04-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2010-02-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-12-01T00:00:00", "ext": "C/C++", "project_count": 52}, {"month": "2009-11-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-09-01T00:00:00", "ext": "C/C++", "project_count": 41}, {"month": "2009-09-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2019-10-01T00:00:00", "ext": "C/C++", "project_count": 825}, {"month": "2019-10-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2019-09-01T00:00:00", "ext": "C/C++", "project_count": 591}, {"month": "2019-09-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2019-08-01T00:00:00", "ext": "C/C++", "project_count": 606}, {"month": "2019-08-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2019-06-01T00:00:00", "ext": "C/C++", "project_count": 633}, {"month": "2019-06-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2019-05-01T00:00:00", "ext": "Go", "project_count": 9}, {"month": "2019-04-01T00:00:00", "ext": "C/C++", "project_count": 670}, {"month": "2019-04-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2019-03-01T00:00:00", "ext": "Rust", "project_count": 10}, {"month": "2018-12-01T00:00:00", "ext": "Fortran", "project_count": 25}, {"month": "2018-10-01T00:00:00", "ext": "Rust", "project_count": 4}, {"month": "2018-09-01T00:00:00", "ext": "Rust", "project_count": 4}, {"month": "2018-07-01T00:00:00", "ext": "Go", "project_count": 12}, {"month": "2018-06-01T00:00:00", "ext": "Rust", "project_count": 8}, {"month": "2018-05-01T00:00:00", "ext": "Rust", "project_count": 9}, {"month": "2015-08-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-06-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2015-05-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2015-04-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-02-01T00:00:00", "ext": "C/C++", "project_count": 230}, {"month": "2015-02-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-12-01T00:00:00", "ext": "C/C++", "project_count": 228}, {"month": "2014-12-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2014-11-01T00:00:00", "ext": "C/C++", "project_count": 241}, {"month": "2014-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-09-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2014-07-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2014-06-01T00:00:00", "ext": "C/C++", "project_count": 201}, {"month": "2014-06-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2014-01-01T00:00:00", "ext": "Fortran", "project_count": 8}, {"month": "2013-08-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2013-06-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2013-04-01T00:00:00", "ext": "C/C++", "project_count": 118}, {"month": "2013-04-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-03-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2021-07-01T00:00:00", "ext": "Rust", "project_count": 56}, {"month": "2021-06-01T00:00:00", "ext": "Fortran", "project_count": 70}, {"month": "2021-05-01T00:00:00", "ext": "Rust", "project_count": 48}, {"month": "2021-04-01T00:00:00", "ext": "Fortran", "project_count": 73}, {"month": "2021-02-01T00:00:00", "ext": "Rust", "project_count": 45}, {"month": "2021-01-01T00:00:00", "ext": "Rust", "project_count": 34}, {"month": "2020-11-01T00:00:00", "ext": "Rust", "project_count": 37}, {"month": "2020-10-01T00:00:00", "ext": "Go", "project_count": 19}, {"month": "2020-08-01T00:00:00", "ext": "Go", "project_count": 10}, {"month": "2020-06-01T00:00:00", "ext": "Fortran", "project_count": 67}, {"month": "2020-05-01T00:00:00", "ext": "Fortran", "project_count": 56}, {"month": "2022-08-01T00:00:00", "ext": "Rust", "project_count": 114}, {"month": "2022-07-01T00:00:00", "ext": "Fortran", "project_count": 54}, {"month": "2022-06-01T00:00:00", "ext": "C/C++", "project_count": 934}, {"month": "2022-06-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2022-01-01T00:00:00", "ext": "Fortran", "project_count": 56}, {"month": "2021-12-01T00:00:00", "ext": "Rust", "project_count": 80}, {"month": "2021-11-01T00:00:00", "ext": "C/C++", "project_count": 973}, {"month": "2021-11-01T00:00:00", "ext": "Assembly", "project_count": 16}, {"month": "2021-10-01T00:00:00", "ext": "Go", "project_count": 30}, {"month": "2018-04-01T00:00:00", "ext": "Rust", "project_count": 7}, {"month": "2018-03-01T00:00:00", "ext": "Fortran", "project_count": 27}, {"month": "2017-12-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2017-10-01T00:00:00", "ext": "Fortran", "project_count": 18}, {"month": "2017-09-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2017-06-01T00:00:00", "ext": "Fortran", "project_count": 22}, {"month": "2017-05-01T00:00:00", "ext": "Fortran", "project_count": 19}, {"month": "2017-04-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-12-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-10-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2016-09-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2016-06-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2016-03-01T00:00:00", "ext": "C/C++", "project_count": 336}, {"month": "2016-03-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-02-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2016-01-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2023-09-01T00:00:00", "ext": "Fortran", "project_count": 60}, {"month": "2023-07-01T00:00:00", "ext": "C/C++", "project_count": 1056}, {"month": "2023-07-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2023-06-01T00:00:00", "ext": "Fortran", "project_count": 63}, {"month": "2023-04-01T00:00:00", "ext": "C/C++", "project_count": 1122}, {"month": "2023-04-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2023-03-01T00:00:00", "ext": "Rust", "project_count": 189}, {"month": "2023-02-01T00:00:00", "ext": "Go", "project_count": 35}, {"month": "2022-12-01T00:00:00", "ext": "C/C++", "project_count": 1064}, {"month": "2022-12-01T00:00:00", "ext": "Assembly", "project_count": 16}, {"month": "2022-10-01T00:00:00", "ext": "C/C++", "project_count": 1102}, {"month": "2022-10-01T00:00:00", "ext": "Assembly", "project_count": 15}, {"month": "2009-01-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2007-08-01T00:00:00", "ext": "C/C++", "project_count": 20}, {"month": "2007-06-01T00:00:00", "ext": "C/C++", "project_count": 10}, {"month": "2006-07-01T00:00:00", "ext": "C/C++", "project_count": 10}, {"month": "2005-12-01T00:00:00", "ext": "C/C++", "project_count": 5}, {"month": "2005-08-01T00:00:00", "ext": "C/C++", "project_count": 7}, {"month": "2013-03-01T00:00:00", "ext": "C/C++", "project_count": 118}, {"month": "2013-01-01T00:00:00", "ext": "C/C++", "project_count": 111}, {"month": "2013-01-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2012-04-01T00:00:00", "ext": "C/C++", "project_count": 77}, {"month": "2011-11-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2011-10-01T00:00:00", "ext": "C/C++", "project_count": 50}, {"month": "2010-02-01T00:00:00", "ext": "C/C++", "project_count": 42}, {"month": "2009-12-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-11-01T00:00:00", "ext": "C/C++", "project_count": 67}, {"month": "2009-09-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-03-01T00:00:00", "ext": "C/C++", "project_count": 50}, {"month": "2019-10-01T00:00:00", "ext": "Fortran", "project_count": 50}, {"month": "2019-09-01T00:00:00", "ext": "Fortran", "project_count": 28}, {"month": "2019-08-01T00:00:00", "ext": "Fortran", "project_count": 35}, {"month": "2019-06-01T00:00:00", "ext": "Fortran", "project_count": 48}, {"month": "2019-05-01T00:00:00", "ext": "Rust", "project_count": 9}, {"month": "2019-04-01T00:00:00", "ext": "Fortran", "project_count": 34}, {"month": "2019-03-01T00:00:00", "ext": "Go", "project_count": 14}, {"month": "2018-12-01T00:00:00", "ext": "C/C++", "project_count": 596}, {"month": "2018-12-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2018-10-01T00:00:00", "ext": "Go", "project_count": 10}, {"month": "2018-09-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2018-07-01T00:00:00", "ext": "Rust", "project_count": 4}, {"month": "2018-06-01T00:00:00", "ext": "Go", "project_count": 11}, {"month": "2018-05-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2015-08-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2015-06-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2015-05-01T00:00:00", "ext": "C/C++", "project_count": 225}, {"month": "2015-05-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-04-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2015-02-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2014-12-01T00:00:00", "ext": "Fortran", "project_count": 17}, {"month": "2014-11-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2014-09-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-07-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-06-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2014-01-01T00:00:00", "ext": "C/C++", "project_count": 160}, {"month": "2014-01-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-11-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-07-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-06-01T00:00:00", "ext": "C/C++", "project_count": 112}, {"month": "2013-06-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2013-04-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2013-03-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2021-06-01T00:00:00", "ext": "C/C++", "project_count": 931}, {"month": "2021-06-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2021-05-01T00:00:00", "ext": "Go", "project_count": 16}, {"month": "2021-04-01T00:00:00", "ext": "C/C++", "project_count": 911}, {"month": "2021-04-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2021-02-01T00:00:00", "ext": "Go", "project_count": 15}, {"month": "2021-01-01T00:00:00", "ext": "Go", "project_count": 14}, {"month": "2020-11-01T00:00:00", "ext": "Go", "project_count": 14}, {"month": "2020-10-01T00:00:00", "ext": "Rust", "project_count": 22}, {"month": "2020-08-01T00:00:00", "ext": "Rust", "project_count": 31}, {"month": "2020-06-01T00:00:00", "ext": "C/C++", "project_count": 923}, {"month": "2020-06-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2020-05-01T00:00:00", "ext": "C/C++", "project_count": 803}, {"month": "2020-05-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2022-10-01T00:00:00", "ext": "Fortran", "project_count": 90}, {"month": "2022-08-01T00:00:00", "ext": "Go", "project_count": 25}, {"month": "2022-07-01T00:00:00", "ext": "C/C++", "project_count": 866}, {"month": "2022-07-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2022-06-01T00:00:00", "ext": "Fortran", "project_count": 67}, {"month": "2022-01-01T00:00:00", "ext": "C/C++", "project_count": 1045}, {"month": "2022-01-01T00:00:00", "ext": "Assembly", "project_count": 14}, {"month": "2021-12-01T00:00:00", "ext": "Go", "project_count": 11}, {"month": "2021-11-01T00:00:00", "ext": "Fortran", "project_count": 55}, {"month": "2021-10-01T00:00:00", "ext": "Rust", "project_count": 68}, {"month": "2021-07-01T00:00:00", "ext": "Go", "project_count": 17}, {"month": "2018-04-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2018-03-01T00:00:00", "ext": "C/C++", "project_count": 475}, {"month": "2018-03-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2017-12-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2017-10-01T00:00:00", "ext": "C/C++", "project_count": 448}, {"month": "2017-10-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2017-09-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2017-06-01T00:00:00", "ext": "C/C++", "project_count": 417}, {"month": "2017-06-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2017-05-01T00:00:00", "ext": "C/C++", "project_count": 391}, {"month": "2017-05-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2017-04-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2016-12-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2016-10-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-09-01T00:00:00", "ext": "C/C++", "project_count": 327}, {"month": "2016-09-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2016-06-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-03-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2016-02-01T00:00:00", "ext": "C/C++", "project_count": 326}, {"month": "2016-02-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2016-01-01T00:00:00", "ext": "C/C++", "project_count": 317}, {"month": "2016-01-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2023-09-01T00:00:00", "ext": "C/C++", "project_count": 1456}, {"month": "2023-09-01T00:00:00", "ext": "Assembly", "project_count": 18}, {"month": "2023-07-01T00:00:00", "ext": "Fortran", "project_count": 63}, {"month": "2023-06-01T00:00:00", "ext": "C/C++", "project_count": 1120}, {"month": "2023-06-01T00:00:00", "ext": "Assembly", "project_count": 15}, {"month": "2023-04-01T00:00:00", "ext": "Fortran", "project_count": 83}, {"month": "2023-03-01T00:00:00", "ext": "Go", "project_count": 37}, {"month": "2023-02-01T00:00:00", "ext": "Rust", "project_count": 176}, {"month": "2022-12-01T00:00:00", "ext": "Fortran", "project_count": 66}, {"month": "2008-12-01T00:00:00", "ext": "C/C++", "project_count": 38}, {"month": "2008-04-01T00:00:00", "ext": "C/C++", "project_count": 27}, {"month": "2008-04-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-03-01T00:00:00", "ext": "C/C++", "project_count": 25}, {"month": "2008-01-01T00:00:00", "ext": "C/C++", "project_count": 19}, {"month": "2007-11-01T00:00:00", "ext": "C/C++", "project_count": 19}, {"month": "2007-07-01T00:00:00", "ext": "C/C++", "project_count": 20}, {"month": "2007-02-01T00:00:00", "ext": "C/C++", "project_count": 10}, {"month": "2006-05-01T00:00:00", "ext": "C/C++", "project_count": 4}, {"month": "2006-03-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2005-04-01T00:00:00", "ext": "C/C++", "project_count": 1}, {"month": "2013-02-01T00:00:00", "ext": "C/C++", "project_count": 102}, {"month": "2013-02-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-12-01T00:00:00", "ext": "Go", "project_count": 1}, {"month": "2012-08-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2012-03-01T00:00:00", "ext": "C/C++", "project_count": 82}, {"month": "2012-03-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-02-01T00:00:00", "ext": "C/C++", "project_count": 74}, {"month": "2012-02-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2011-05-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-02-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-11-01T00:00:00", "ext": "C/C++", "project_count": 42}, {"month": "2010-01-01T00:00:00", "ext": "C/C++", "project_count": 37}, {"month": "2009-05-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-04-01T00:00:00", "ext": "C/C++", "project_count": 36}, {"month": "2019-11-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2019-07-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2019-02-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2019-01-01T00:00:00", "ext": "C/C++", "project_count": 515}, {"month": "2019-01-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2018-11-01T00:00:00", "ext": "C/C++", "project_count": 572}, {"month": "2018-11-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2018-08-01T00:00:00", "ext": "Rust", "project_count": 5}, {"month": "2015-11-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-10-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2015-09-01T00:00:00", "ext": "C/C++", "project_count": 327}, {"month": "2015-09-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-07-01T00:00:00", "ext": "C/C++", "project_count": 272}, {"month": "2015-07-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-03-01T00:00:00", "ext": "C/C++", "project_count": 260}, {"month": "2015-03-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2015-01-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2014-10-01T00:00:00", "ext": "Go", "project_count": 6}, {"month": "2014-08-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-04-01T00:00:00", "ext": "Fortran", "project_count": 6}, {"month": "2014-03-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2014-02-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-10-01T00:00:00", "ext": "C/C++", "project_count": 138}, {"month": "2013-10-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2013-09-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-05-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2021-03-01T00:00:00", "ext": "Rust", "project_count": 46}, {"month": "2020-12-01T00:00:00", "ext": "C/C++", "project_count": 861}, {"month": "2020-12-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2020-09-01T00:00:00", "ext": "C/C++", "project_count": 790}, {"month": "2020-09-01T00:00:00", "ext": "Assembly", "project_count": 11}, {"month": "2020-07-01T00:00:00", "ext": "C/C++", "project_count": 823}, {"month": "2020-07-01T00:00:00", "ext": "Assembly", "project_count": 11}, {"month": "2020-04-01T00:00:00", "ext": "Fortran", "project_count": 53}, {"month": "2020-03-01T00:00:00", "ext": "Go", "project_count": 10}, {"month": "2020-02-01T00:00:00", "ext": "Rust", "project_count": 24}, {"month": "2020-01-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2019-12-01T00:00:00", "ext": "Go", "project_count": 12}, {"month": "2022-09-01T00:00:00", "ext": "Rust", "project_count": 123}, {"month": "2022-05-01T00:00:00", "ext": "Fortran", "project_count": 47}, {"month": "2022-04-01T00:00:00", "ext": "Rust", "project_count": 112}, {"month": "2022-03-01T00:00:00", "ext": "Rust", "project_count": 103}, {"month": "2022-02-01T00:00:00", "ext": "C/C++", "project_count": 1025}, {"month": "2022-02-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2021-09-01T00:00:00", "ext": "Fortran", "project_count": 50}, {"month": "2021-08-01T00:00:00", "ext": "Go", "project_count": 16}, {"month": "2018-02-01T00:00:00", "ext": "Fortran", "project_count": 23}, {"month": "2018-01-01T00:00:00", "ext": "Go", "project_count": 9}, {"month": "2017-11-01T00:00:00", "ext": "Fortran", "project_count": 20}, {"month": "2017-08-01T00:00:00", "ext": "C/C++", "project_count": 450}, {"month": "2017-08-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2017-07-01T00:00:00", "ext": "Fortran", "project_count": 19}, {"month": "2017-03-01T00:00:00", "ext": "Fortran", "project_count": 18}, {"month": "2017-02-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2017-01-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2016-11-01T00:00:00", "ext": "C/C++", "project_count": 368}, {"month": "2016-11-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-08-01T00:00:00", "ext": "C/C++", "project_count": 325}, {"month": "2016-08-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-07-01T00:00:00", "ext": "Fortran", "project_count": 12}, {"month": "2016-05-01T00:00:00", "ext": "Fortran", "project_count": 15}, {"month": "2016-04-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-12-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2023-11-01T00:00:00", "ext": "Go", "project_count": 38}, {"month": "2023-10-01T00:00:00", "ext": "C/C++", "project_count": 1331}, {"month": "2023-10-01T00:00:00", "ext": "Assembly", "project_count": 23}, {"month": "2023-08-01T00:00:00", "ext": "Go", "project_count": 34}, {"month": "2023-05-01T00:00:00", "ext": "C/C++", "project_count": 1123}, {"month": "2023-05-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2023-01-01T00:00:00", "ext": "Fortran", "project_count": 56}, {"month": "2022-11-01T00:00:00", "ext": "Fortran", "project_count": 80}, {"month": "2008-04-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2008-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-01-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2007-09-01T00:00:00", "ext": "C/C++", "project_count": 14}, {"month": "2007-05-01T00:00:00", "ext": "C/C++", "project_count": 13}, {"month": "2006-04-01T00:00:00", "ext": "C/C++", "project_count": 4}, {"month": "2006-02-01T00:00:00", "ext": "C/C++", "project_count": 3}, {"month": "2013-02-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2012-08-01T00:00:00", "ext": "C/C++", "project_count": 84}, {"month": "2012-08-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2012-03-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2012-02-01T00:00:00", "ext": "Fortran", "project_count": 3}, {"month": "2011-06-01T00:00:00", "ext": "C/C++", "project_count": 49}, {"month": "2011-05-01T00:00:00", "ext": "C/C++", "project_count": 76}, {"month": "2011-02-01T00:00:00", "ext": "C/C++", "project_count": 48}, {"month": "2010-11-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2010-01-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-05-01T00:00:00", "ext": "C/C++", "project_count": 42}, {"month": "2009-04-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2019-11-01T00:00:00", "ext": "Rust", "project_count": 17}, {"month": "2019-07-01T00:00:00", "ext": "Rust", "project_count": 10}, {"month": "2019-02-01T00:00:00", "ext": "Rust", "project_count": 5}, {"month": "2019-01-01T00:00:00", "ext": "Fortran", "project_count": 28}, {"month": "2018-11-01T00:00:00", "ext": "Fortran", "project_count": 27}, {"month": "2018-08-01T00:00:00", "ext": "Go", "project_count": 11}, {"month": "2015-10-01T00:00:00", "ext": "C/C++", "project_count": 306}, {"month": "2015-10-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2015-09-01T00:00:00", "ext": "Fortran", "project_count": 8}, {"month": "2015-07-01T00:00:00", "ext": "Fortran", "project_count": 10}, {"month": "2015-03-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2015-01-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-10-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2014-08-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2014-05-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2014-04-01T00:00:00", "ext": "C/C++", "project_count": 181}, {"month": "2014-04-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2014-03-01T00:00:00", "ext": "C/C++", "project_count": 182}, {"month": "2014-03-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-12-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2013-10-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2013-05-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2021-03-01T00:00:00", "ext": "Go", "project_count": 17}, {"month": "2020-12-01T00:00:00", "ext": "Fortran", "project_count": 52}, {"month": "2020-09-01T00:00:00", "ext": "Fortran", "project_count": 40}, {"month": "2020-07-01T00:00:00", "ext": "Fortran", "project_count": 38}, {"month": "2020-04-01T00:00:00", "ext": "C/C++", "project_count": 764}, {"month": "2020-04-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2020-03-01T00:00:00", "ext": "Rust", "project_count": 18}, {"month": "2020-02-01T00:00:00", "ext": "Go", "project_count": 13}, {"month": "2020-01-01T00:00:00", "ext": "Rust", "project_count": 24}, {"month": "2019-12-01T00:00:00", "ext": "Rust", "project_count": 8}, {"month": "2022-09-01T00:00:00", "ext": "Go", "project_count": 24}, {"month": "2022-05-01T00:00:00", "ext": "C/C++", "project_count": 907}, {"month": "2022-05-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2022-04-01T00:00:00", "ext": "Go", "project_count": 21}, {"month": "2022-03-01T00:00:00", "ext": "Go", "project_count": 24}, {"month": "2022-02-01T00:00:00", "ext": "Fortran", "project_count": 52}, {"month": "2021-09-01T00:00:00", "ext": "C/C++", "project_count": 893}, {"month": "2021-09-01T00:00:00", "ext": "Assembly", "project_count": 15}, {"month": "2021-08-01T00:00:00", "ext": "Rust", "project_count": 57}, {"month": "2018-02-01T00:00:00", "ext": "C/C++", "project_count": 475}, {"month": "2018-02-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2018-01-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2017-11-01T00:00:00", "ext": "C/C++", "project_count": 495}, {"month": "2017-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2017-08-01T00:00:00", "ext": "Fortran", "project_count": 22}, {"month": "2017-07-01T00:00:00", "ext": "C/C++", "project_count": 395}, {"month": "2017-07-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2017-03-01T00:00:00", "ext": "C/C++", "project_count": 386}, {"month": "2017-03-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2017-02-01T00:00:00", "ext": "C/C++", "project_count": 378}, {"month": "2017-02-01T00:00:00", "ext": "Assembly", "project_count": 5}, {"month": "2016-11-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2016-08-01T00:00:00", "ext": "Fortran", "project_count": 10}, {"month": "2016-07-01T00:00:00", "ext": "C/C++", "project_count": 333}, {"month": "2016-07-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2016-05-01T00:00:00", "ext": "C/C++", "project_count": 310}, {"month": "2016-05-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2016-04-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2015-12-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2023-11-01T00:00:00", "ext": "Rust", "project_count": 235}, {"month": "2023-10-01T00:00:00", "ext": "Fortran", "project_count": 95}, {"month": "2023-08-01T00:00:00", "ext": "Rust", "project_count": 237}, {"month": "2023-05-01T00:00:00", "ext": "Fortran", "project_count": 88}, {"month": "2023-01-01T00:00:00", "ext": "C/C++", "project_count": 1051}, {"month": "2023-01-01T00:00:00", "ext": "Assembly", "project_count": 13}, {"month": "2022-11-01T00:00:00", "ext": "C/C++", "project_count": 1265}, {"month": "2022-11-01T00:00:00", "ext": "Assembly", "project_count": 14}, {"month": "2008-11-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-07-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2008-02-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2007-01-01T00:00:00", "ext": "C/C++", "project_count": 12}, {"month": "2006-11-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2006-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2006-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2012-11-01T00:00:00", "ext": "C/C++", "project_count": 106}, {"month": "2012-11-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-10-01T00:00:00", "ext": "C/C++", "project_count": 86}, {"month": "2012-06-01T00:00:00", "ext": "C/C++", "project_count": 81}, {"month": "2012-06-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2012-05-01T00:00:00", "ext": "C/C++", "project_count": 83}, {"month": "2012-01-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2011-12-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2011-09-01T00:00:00", "ext": "C/C++", "project_count": 55}, {"month": "2011-07-01T00:00:00", "ext": "C/C++", "project_count": 64}, {"month": "2010-10-01T00:00:00", "ext": "C/C++", "project_count": 60}, {"month": "2010-09-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-06-01T00:00:00", "ext": "C/C++", "project_count": 73}, {"month": "2010-06-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2010-04-01T00:00:00", "ext": "C/C++", "project_count": 70}, {"month": "2009-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-08-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-06-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2019-10-01T00:00:00", "ext": "Go", "project_count": 13}, {"month": "2019-09-01T00:00:00", "ext": "Go", "project_count": 15}, {"month": "2019-08-01T00:00:00", "ext": "Go", "project_count": 12}, {"month": "2019-06-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2019-05-01T00:00:00", "ext": "C/C++", "project_count": 653}, {"month": "2019-05-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2019-04-01T00:00:00", "ext": "Go", "project_count": 11}, {"month": "2019-03-01T00:00:00", "ext": "Fortran", "project_count": 31}, {"month": "2018-12-01T00:00:00", "ext": "Rust", "project_count": 7}, {"month": "2018-10-01T00:00:00", "ext": "Fortran", "project_count": 25}, {"month": "2018-09-01T00:00:00", "ext": "Fortran", "project_count": 25}, {"month": "2018-07-01T00:00:00", "ext": "C/C++", "project_count": 599}, {"month": "2018-07-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2018-06-01T00:00:00", "ext": "Fortran", "project_count": 23}, {"month": "2018-05-01T00:00:00", "ext": "Fortran", "project_count": 26}, {"month": "2015-08-01T00:00:00", "ext": "C/C++", "project_count": 257}, {"month": "2015-08-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-06-01T00:00:00", "ext": "Fortran", "project_count": 11}, {"month": "2015-05-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2015-04-01T00:00:00", "ext": "Fortran", "project_count": 14}, {"month": "2015-02-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2014-12-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2014-11-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2014-09-01T00:00:00", "ext": "C/C++", "project_count": 191}, {"month": "2014-09-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2014-07-01T00:00:00", "ext": "C/C++", "project_count": 198}, {"month": "2014-07-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2014-06-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2013-11-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2013-08-01T00:00:00", "ext": "C/C++", "project_count": 135}, {"month": "2013-08-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-07-01T00:00:00", "ext": "Fortran", "project_count": 7}, {"month": "2013-04-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2021-07-01T00:00:00", "ext": "Fortran", "project_count": 65}, {"month": "2021-06-01T00:00:00", "ext": "Rust", "project_count": 50}, {"month": "2021-05-01T00:00:00", "ext": "Fortran", "project_count": 54}, {"month": "2021-04-01T00:00:00", "ext": "Rust", "project_count": 50}, {"month": "2021-02-01T00:00:00", "ext": "Fortran", "project_count": 65}, {"month": "2021-01-01T00:00:00", "ext": "Fortran", "project_count": 53}, {"month": "2020-11-01T00:00:00", "ext": "Fortran", "project_count": 43}, {"month": "2020-10-01T00:00:00", "ext": "C/C++", "project_count": 854}, {"month": "2020-10-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2020-08-01T00:00:00", "ext": "C/C++", "project_count": 709}, {"month": "2020-08-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2020-06-01T00:00:00", "ext": "Rust", "project_count": 32}, {"month": "2020-05-01T00:00:00", "ext": "Rust", "project_count": 20}, {"month": "2022-08-01T00:00:00", "ext": "Fortran", "project_count": 47}, {"month": "2022-07-01T00:00:00", "ext": "Rust", "project_count": 113}, {"month": "2022-06-01T00:00:00", "ext": "Go", "project_count": 25}, {"month": "2022-01-01T00:00:00", "ext": "Rust", "project_count": 87}, {"month": "2021-12-01T00:00:00", "ext": "Fortran", "project_count": 39}, {"month": "2021-11-01T00:00:00", "ext": "Go", "project_count": 25}, {"month": "2021-10-01T00:00:00", "ext": "C/C++", "project_count": 981}, {"month": "2021-10-01T00:00:00", "ext": "Assembly", "project_count": 17}, {"month": "2018-04-01T00:00:00", "ext": "Fortran", "project_count": 26}, {"month": "2018-03-01T00:00:00", "ext": "Rust", "project_count": 4}, {"month": "2017-12-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2017-10-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2017-09-01T00:00:00", "ext": "C/C++", "project_count": 500}, {"month": "2017-09-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2017-06-01T00:00:00", "ext": "Rust", "project_count": 6}, {"month": "2017-05-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2017-04-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2016-12-01T00:00:00", "ext": "Fortran", "project_count": 7}, {"month": "2016-10-01T00:00:00", "ext": "C/C++", "project_count": 370}, {"month": "2016-10-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2016-09-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-06-01T00:00:00", "ext": "C/C++", "project_count": 319}, {"month": "2016-06-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2016-03-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2016-02-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2016-01-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2023-09-01T00:00:00", "ext": "Rust", "project_count": 239}, {"month": "2023-07-01T00:00:00", "ext": "Go", "project_count": 43}, {"month": "2023-06-01T00:00:00", "ext": "Rust", "project_count": 213}, {"month": "2023-04-01T00:00:00", "ext": "Go", "project_count": 35}, {"month": "2023-03-01T00:00:00", "ext": "Fortran", "project_count": 82}, {"month": "2023-02-01T00:00:00", "ext": "C/C++", "project_count": 990}, {"month": "2023-02-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2022-12-01T00:00:00", "ext": "Go", "project_count": 25}, {"month": "2022-10-01T00:00:00", "ext": "Go", "project_count": 33}, {"month": "2008-11-01T00:00:00", "ext": "C/C++", "project_count": 30}, {"month": "2008-11-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2008-07-01T00:00:00", "ext": "C/C++", "project_count": 21}, {"month": "2008-02-01T00:00:00", "ext": "C/C++", "project_count": 24}, {"month": "2006-12-01T00:00:00", "ext": "C/C++", "project_count": 11}, {"month": "2006-11-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2006-10-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2006-08-01T00:00:00", "ext": "C/C++", "project_count": 8}, {"month": "2013-01-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2012-11-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2012-10-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2012-06-01T00:00:00", "ext": "Fortran", "project_count": 5}, {"month": "2012-05-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2012-01-01T00:00:00", "ext": "C/C++", "project_count": 68}, {"month": "2012-01-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2011-12-01T00:00:00", "ext": "C/C++", "project_count": 63}, {"month": "2011-07-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-10-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2010-09-01T00:00:00", "ext": "C/C++", "project_count": 73}, {"month": "2010-09-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2010-06-01T00:00:00", "ext": "Fortran", "project_count": 2}, {"month": "2010-04-01T00:00:00", "ext": "Fortran", "project_count": 1}, {"month": "2009-10-01T00:00:00", "ext": "C/C++", "project_count": 40}, {"month": "2009-08-01T00:00:00", "ext": "C/C++", "project_count": 38}, {"month": "2009-06-01T00:00:00", "ext": "C/C++", "project_count": 44}, {"month": "2009-06-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2019-10-01T00:00:00", "ext": "Rust", "project_count": 17}, {"month": "2019-09-01T00:00:00", "ext": "Rust", "project_count": 14}, {"month": "2019-08-01T00:00:00", "ext": "Rust", "project_count": 17}, {"month": "2019-06-01T00:00:00", "ext": "Rust", "project_count": 11}, {"month": "2019-05-01T00:00:00", "ext": "Fortran", "project_count": 41}, {"month": "2019-04-01T00:00:00", "ext": "Rust", "project_count": 7}, {"month": "2019-03-01T00:00:00", "ext": "C/C++", "project_count": 568}, {"month": "2019-03-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2018-12-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2018-10-01T00:00:00", "ext": "C/C++", "project_count": 628}, {"month": "2018-10-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2018-09-01T00:00:00", "ext": "C/C++", "project_count": 535}, {"month": "2018-09-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2018-07-01T00:00:00", "ext": "Fortran", "project_count": 30}, {"month": "2018-06-01T00:00:00", "ext": "C/C++", "project_count": 563}, {"month": "2018-06-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2018-05-01T00:00:00", "ext": "C/C++", "project_count": 500}, {"month": "2015-08-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2015-06-01T00:00:00", "ext": "C/C++", "project_count": 279}, {"month": "2015-06-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2015-05-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2015-04-01T00:00:00", "ext": "C/C++", "project_count": 253}, {"month": "2015-04-01T00:00:00", "ext": "Assembly", "project_count": 2}, {"month": "2015-02-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-12-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-11-01T00:00:00", "ext": "Rust", "project_count": 3}, {"month": "2014-09-01T00:00:00", "ext": "Fortran", "project_count": 9}, {"month": "2014-07-01T00:00:00", "ext": "Fortran", "project_count": 13}, {"month": "2014-06-01T00:00:00", "ext": "Rust", "project_count": 1}, {"month": "2014-01-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-11-01T00:00:00", "ext": "C/C++", "project_count": 151}, {"month": "2013-11-01T00:00:00", "ext": "Assembly", "project_count": 3}, {"month": "2013-08-01T00:00:00", "ext": "Fortran", "project_count": 4}, {"month": "2013-07-01T00:00:00", "ext": "C/C++", "project_count": 113}, {"month": "2013-07-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2013-06-01T00:00:00", "ext": "Go", "project_count": 2}, {"month": "2013-03-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2021-07-01T00:00:00", "ext": "Assembly", "project_count": 12}, {"month": "2021-07-01T00:00:00", "ext": "C/C++", "project_count": 862}, {"month": "2021-06-01T00:00:00", "ext": "Go", "project_count": 14}, {"month": "2021-05-01T00:00:00", "ext": "C/C++", "project_count": 961}, {"month": "2021-05-01T00:00:00", "ext": "Assembly", "project_count": 13}, {"month": "2021-04-01T00:00:00", "ext": "Go", "project_count": 17}, {"month": "2021-02-01T00:00:00", "ext": "C/C++", "project_count": 872}, {"month": "2021-02-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2021-01-01T00:00:00", "ext": "C/C++", "project_count": 820}, {"month": "2021-01-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2020-11-01T00:00:00", "ext": "C/C++", "project_count": 898}, {"month": "2020-11-01T00:00:00", "ext": "Assembly", "project_count": 10}, {"month": "2020-10-01T00:00:00", "ext": "Fortran", "project_count": 54}, {"month": "2020-08-01T00:00:00", "ext": "Fortran", "project_count": 32}, {"month": "2020-06-01T00:00:00", "ext": "Go", "project_count": 16}, {"month": "2020-05-01T00:00:00", "ext": "Go", "project_count": 14}, {"month": "2022-08-01T00:00:00", "ext": "C/C++", "project_count": 997}, {"month": "2022-08-01T00:00:00", "ext": "Assembly", "project_count": 15}, {"month": "2022-07-01T00:00:00", "ext": "Go", "project_count": 27}, {"month": "2022-06-01T00:00:00", "ext": "Rust", "project_count": 105}, {"month": "2022-01-01T00:00:00", "ext": "Go", "project_count": 21}, {"month": "2021-12-01T00:00:00", "ext": "C/C++", "project_count": 908}, {"month": "2021-12-01T00:00:00", "ext": "Assembly", "project_count": 8}, {"month": "2021-11-01T00:00:00", "ext": "Rust", "project_count": 78}, {"month": "2021-10-01T00:00:00", "ext": "Fortran", "project_count": 71}, {"month": "2018-05-01T00:00:00", "ext": "Assembly", "project_count": 1}, {"month": "2018-04-01T00:00:00", "ext": "C/C++", "project_count": 564}, {"month": "2018-04-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2018-03-01T00:00:00", "ext": "Go", "project_count": 5}, {"month": "2017-12-01T00:00:00", "ext": "C/C++", "project_count": 430}, {"month": "2017-12-01T00:00:00", "ext": "Assembly", "project_count": 4}, {"month": "2017-10-01T00:00:00", "ext": "Go", "project_count": 9}, {"month": "2017-09-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2017-06-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2017-05-01T00:00:00", "ext": "Go", "project_count": 7}, {"month": "2017-04-01T00:00:00", "ext": "C/C++", "project_count": 376}, {"month": "2017-04-01T00:00:00", "ext": "Assembly", "project_count": 6}, {"month": "2016-12-01T00:00:00", "ext": "C/C++", "project_count": 401}, {"month": "2016-12-01T00:00:00", "ext": "Assembly", "project_count": 9}, {"month": "2016-10-01T00:00:00", "ext": "Fortran", "project_count": 11}, {"month": "2016-09-01T00:00:00", "ext": "Go", "project_count": 8}, {"month": "2016-06-01T00:00:00", "ext": "Fortran", "project_count": 16}, {"month": "2016-03-01T00:00:00", "ext": "Rust", "project_count": 2}, {"month": "2016-02-01T00:00:00", "ext": "Go", "project_count": 3}, {"month": "2016-01-01T00:00:00", "ext": "Go", "project_count": 4}, {"month": "2023-09-01T00:00:00", "ext": "Go", "project_count": 42}, {"month": "2023-07-01T00:00:00", "ext": "Rust", "project_count": 208}, {"month": "2023-06-01T00:00:00", "ext": "Go", "project_count": 36}, {"month": "2023-04-01T00:00:00", "ext": "Rust", "project_count": 205}, {"month": "2023-03-01T00:00:00", "ext": "C/C++", "project_count": 1158}, {"month": "2023-03-01T00:00:00", "ext": "Assembly", "project_count": 7}, {"month": "2023-02-01T00:00:00", "ext": "Fortran", "project_count": 71}, {"month": "2022-12-01T00:00:00", "ext": "Rust", "project_count": 141}, {"month": "2022-10-01T00:00:00", "ext": "Rust", "project_count": 171}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <guid>https://ibis-project.org/posts/querying-pypi-metadata-compiled-languages/index.html</guid>
  <pubDate>Wed, 15 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Working with arrays in Google BigQuery</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/bigquery-arrays/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Ibis and BigQuery have <a href="https://cloud.google.com/blog/products/data-analytics/ibis-and-bigquery-scalable-analytics-comfort-python">worked well together for years</a>.</p>
<p>In Ibis 7.0.0, they work even better together with the addition of array functionality for BigQuery.</p>
<p>Let’s look at some examples using BigQuery’s <a href="https://developer.imdb.com/non-commercial-datasets/">IMDB sample data</a>.</p>
</section>
<section id="basics" class="level2">
<h2 class="anchored" data-anchor-id="basics">Basics</h2>
<p>First we’ll connect to BigQuery and pluck out a table to work with.</p>
<p>We’ll start with <code>from ibis.interactive import *</code> for maximum convenience.</p>
<div id="b789e16f" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="annotated-cell-1" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="1">1</button><span id="annotated-cell-1-1" class="code-annotation-target"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis.interactive <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="annotated-cell-1-2"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="2">2</button><span id="annotated-cell-1-3" class="code-annotation-target">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bigquery://ibis-gbq"</span>)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="3">3</button><span id="annotated-cell-1-4" class="code-annotation-target">con.set_database(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bigquery-public-data.imdb"</span>)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-1" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="1" data-code-annotation="1"><code>from ibis.interactive import *</code> imports Ibis APIs into the global namespace and enables <a href="../../how-to/configure/basics.html#interactive-mode">interactive mode</a>.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="3" data-code-annotation="2">Connect to Google BigQuery. Compute (but not storage) is billed to the project you connect to–<code>ibis-gbq</code> in this case.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="4" data-code-annotation="3">Set the database to the project and dataset that we will use for analysis.</span>
</dd>
</dl>
</div>
</div>
<p>Let’s look at the tables in this dataset:</p>
<div id="df3b7c1a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">con.tables</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="157">
<pre><code>Tables
------
- name_basics
- reviews
- title_akas
- title_basics
- title_crew
- title_episode
- title_principals
- title_ratings</code></pre>
</div>
</div>
<p>Let’s pull out the <code>name_basics</code> table, which contains names and metadata about people listed on IMDB. We’ll call this <code>ents</code> (short for <code>entities</code>), and remove some columns we won’t need:</p>
<div id="52171a11" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">ents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.tables.name_basics.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"birth_year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"death_year"</span>)</span>
<span id="cb3-2">ents</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="158">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst    </span>┃<span style="font-weight: bold"> primary_name      </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles    </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>              │
├───────────┼───────────────────┼────────────────────┼─────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm7195872</span> │ <span style="color: #008000; text-decoration-color: #008000">Amanda Goetz     </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt4529508          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7204100</span> │ <span style="color: #008000; text-decoration-color: #008000">Overload         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt4828308,tt4538296</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7206569</span> │ <span style="color: #008000; text-decoration-color: #008000">Carl Winter      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                │
│ <span style="color: #008000; text-decoration-color: #008000">nm7208626</span> │ <span style="color: #008000; text-decoration-color: #008000">Doug Goodin      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                │
│ <span style="color: #008000; text-decoration-color: #008000">nm7222505</span> │ <span style="color: #008000; text-decoration-color: #008000">Rickard Finndahl </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt4519546          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7226759</span> │ <span style="color: #008000; text-decoration-color: #008000">Kenneth Bell     </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt3545908          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7227158</span> │ <span style="color: #008000; text-decoration-color: #008000">Savannah Gardner </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt4028790          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7246216</span> │ <span style="color: #008000; text-decoration-color: #008000">Elisabeth Hofmann</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt4586074          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7253303</span> │ <span style="color: #008000; text-decoration-color: #008000">Wisda Febriyanti </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt4594232          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7255948</span> │ <span style="color: #008000; text-decoration-color: #008000">Charles Myers    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="color: #008000; text-decoration-color: #008000">tt2396758          </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │
└───────────┴───────────────────┴────────────────────┴─────────────────────┘
</pre>
</div>
</div>
<section id="splitting-strings-into-arrays" class="level3">
<h3 class="anchored" data-anchor-id="splitting-strings-into-arrays">Splitting strings into arrays</h3>
<p>We can see that <code>known_for_titles</code> looks sort of like an array, so let’s call the <a href="../../reference/expression-strings.html#ibis.expr.types.strings.StringValue.split"><code>split</code></a> method on that column and replace the existing column:</p>
<div id="269b9de2" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">ents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ents.mutate(known_for_titles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.known_for_titles.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))</span>
<span id="cb4-2">ents</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="159">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst    </span>┃<span style="font-weight: bold"> primary_name      </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles           </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>              │
├───────────┼───────────────────┼────────────────────┼────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm7195872</span> │ <span style="color: #008000; text-decoration-color: #008000">Amanda Goetz     </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4529508'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7204100</span> │ <span style="color: #008000; text-decoration-color: #008000">Overload         </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4828308'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt4538296'</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7206569</span> │ <span style="color: #008000; text-decoration-color: #008000">Carl Winter      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[]</span>                         │
│ <span style="color: #008000; text-decoration-color: #008000">nm7208626</span> │ <span style="color: #008000; text-decoration-color: #008000">Doug Goodin      </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[]</span>                         │
│ <span style="color: #008000; text-decoration-color: #008000">nm7222505</span> │ <span style="color: #008000; text-decoration-color: #008000">Rickard Finndahl </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4519546'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7226759</span> │ <span style="color: #008000; text-decoration-color: #008000">Kenneth Bell     </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt3545908'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7227158</span> │ <span style="color: #008000; text-decoration-color: #008000">Savannah Gardner </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4028790'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7246216</span> │ <span style="color: #008000; text-decoration-color: #008000">Elisabeth Hofmann</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4586074'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7253303</span> │ <span style="color: #008000; text-decoration-color: #008000">Wisda Febriyanti </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4594232'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7255948</span> │ <span style="color: #008000; text-decoration-color: #008000">Charles Myers    </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>               │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt2396758'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                          │
└───────────┴───────────────────┴────────────────────┴────────────────────────────┘
</pre>
</div>
</div>
<p>Similarly for <code>primary_profession</code>, since people involved in show business often have more than one responsibility on a project:</p>
<div id="4afaa049" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">ents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ents.mutate(primary_profession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.primary_profession.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))</span></code></pre></div>
</div>
</section>
<section id="array-length" class="level3">
<h3 class="anchored" data-anchor-id="array-length">Array length</h3>
<p>Let’s see how many titles each entity is known for, and then show the five people with the largest number of titles they’re known for:</p>
<p>This is computed using the <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.length"><code>length</code></a> API on array expressions:</p>
<div id="045dab82" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">(</span>
<span id="cb6-2">    ents.select(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_name"</span>, num_titles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.known_for_titles.length())</span>
<span id="cb6-3">    .order_by(_.num_titles.desc())</span>
<span id="cb6-4">    .limit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb6-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="161">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> primary_name     </span>┃<span style="font-weight: bold"> num_titles </span>┃
┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>      │
├──────────────────┼────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Sally Sun       </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Matthew Kavuma  </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Henry Townsend  </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Alex Koenigsmark</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Carrie Schnelker</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
└──────────────────┴────────────┘
</pre>
</div>
</div>
<p>It seems like the length of the <code>known_for_titles</code> might be capped at five!</p>
</section>
<section id="index" class="level3">
<h3 class="anchored" data-anchor-id="index">Index</h3>
<p>We can see the position of <code>"actor"</code> in <code>primary_profession</code>s:</p>
<div id="e33090eb" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">ents.primary_profession.index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actor"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="162">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ArrayPosition(primary_profession, 'actor') </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                                      │
├────────────────────────────────────────────┤
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1</span> │
│                                          <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>A return value of <code>-1</code> indicates that <code>"actor"</code> is not present in the value:</p>
<p>Let’s look for entities that are not primarily actors:</p>
<p>We can do this using the <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.index"><code>index</code></a> method by checking whether the position of the string <code>"actor"</code> is greater than zero:</p>
<div id="d1804a34" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="annotated-cell-8" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-8-1">actor_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ents.primary_profession.index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actor"</span>)</span>
<span id="annotated-cell-8-2">not_primarily_actors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> actor_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="1">1</button><span id="annotated-cell-8-3" class="code-annotation-target">not_primarily_actors.mean()</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-8" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="3" data-code-annotation="1">The average of a <code>bool</code> column gives the percentage of <code>True</code> values</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="163">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg ansi-bold">0.019474437073314168</span></pre>
</div>
</div>
</div>
<p>Who are they?</p>
<div id="4d48ad50" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">ents[not_primarily_actors]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="164">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst     </span>┃<span style="font-weight: bold"> primary_name       </span>┃<span style="font-weight: bold"> primary_profession  </span>┃<span style="font-weight: bold"> known_for_titles                    </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                       │
├────────────┼────────────────────┼─────────────────────┼─────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm2231782 </span> │ <span style="color: #008000; text-decoration-color: #008000">Rene Tovar        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>  │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt21996928'</span><span style="font-weight: bold">]</span>                      │
│ <span style="color: #008000; text-decoration-color: #008000">nm2250015 </span> │ <span style="color: #008000; text-decoration-color: #008000">Stephen Clark     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>  │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt1452628'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt14372154'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm0352162 </span> │ <span style="color: #008000; text-decoration-color: #008000">Brett Haber       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>  │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt1720280'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt10928526'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm12169237</span> │ <span style="color: #008000; text-decoration-color: #008000">Endi Ndini        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4557810'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt14137514'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm14475156</span> │ <span style="color: #008000; text-decoration-color: #008000">Colby White       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt26313337'</span><span style="font-weight: bold">]</span>                      │
│ <span style="color: #008000; text-decoration-color: #008000">nm8979480 </span> │ <span style="color: #008000; text-decoration-color: #008000">Bartosz Strusewicz</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt6685946'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt7334964'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span>  │
│ <span style="color: #008000; text-decoration-color: #008000">nm3116354 </span> │ <span style="color: #008000; text-decoration-color: #008000">Robert Marquis    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt8376014'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt1283513'</span><span style="font-weight: bold">]</span>          │
│ <span style="color: #008000; text-decoration-color: #008000">nm9962305 </span> │ <span style="color: #008000; text-decoration-color: #008000">Vino Domi         </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt8680966'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt8669176'</span><span style="font-weight: bold">]</span>          │
│ <span style="color: #008000; text-decoration-color: #008000">nm10346617</span> │ <span style="color: #008000; text-decoration-color: #008000">Lucas Oliveira    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt9483226'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt7216954'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span><span style="font-weight: bold">]</span>  │
│ <span style="color: #008000; text-decoration-color: #008000">nm7206820 </span> │ <span style="color: #008000; text-decoration-color: #008000">Prince Sethi      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span>, <span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt14396686'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt4219300'</span><span style="font-weight: bold">]</span>         │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                   │
└────────────┴────────────────────┴─────────────────────┴─────────────────────────────────────┘
</pre>
</div>
</div>
<p>It’s not 100% clear whether the order of elements in <code>primary_profession</code> matters here.</p>
</section>
<section id="containment" class="level3">
<h3 class="anchored" data-anchor-id="containment">Containment</h3>
<p>We can get people who are <strong>not</strong> actors using <code>contains</code>:</p>
<div id="327da073" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">non_actors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ents[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>ents.primary_profession.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actor"</span>)]</span>
<span id="cb9-2">non_actors</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="165">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst     </span>┃<span style="font-weight: bold"> primary_name          </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>    │
├────────────┼───────────────────────┼────────────────────┼──────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm13613518</span> │ <span style="color: #008000; text-decoration-color: #008000">Silvia Vannini       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm11482673</span> │ <span style="color: #008000; text-decoration-color: #008000">Umit Yildirim        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm14796117</span> │ <span style="color: #008000; text-decoration-color: #008000">Kendall Jackson      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm3922637 </span> │ <span style="color: #008000; text-decoration-color: #008000">Michael J. Douglas   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm5249145 </span> │ <span style="color: #008000; text-decoration-color: #008000">Christopher Addy     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm9235293 </span> │ <span style="color: #008000; text-decoration-color: #008000">Baolu Lan            </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm14560328</span> │ <span style="color: #008000; text-decoration-color: #008000">Jean Paul S Voilleque</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm11250663</span> │ <span style="color: #008000; text-decoration-color: #008000">Kelly D. Shapiro     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm11355058</span> │ <span style="color: #008000; text-decoration-color: #008000">Sameer Oberoi        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm8655635 </span> │ <span style="color: #008000; text-decoration-color: #008000">James Madison        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │
└────────────┴───────────────────────┴────────────────────┴──────────────────┘
</pre>
</div>
</div>
</section>
<section id="element-removal" class="level3">
<h3 class="anchored" data-anchor-id="element-removal">Element removal</h3>
<p>We can remove elements from arrays too.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.remove"><code>remove()</code></a> does not mutate the underlying data
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
<p>Let’s see who only has “actor” in the list of their primary professions:</p>
<div id="11189ac7" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">ents.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb10-2">    [</span>
<span id="cb10-3">        _.primary_profession.length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb10-4">        _.primary_profession.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actor"</span>).length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb10-5">    ]</span>
<span id="cb10-6">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="166">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst    </span>┃<span style="font-weight: bold"> primary_name       </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles                    </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                       │
├───────────┼────────────────────┼────────────────────┼─────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm7217990</span> │ <span style="color: #008000; text-decoration-color: #008000">Jay Isbell        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4450682'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7218053</span> │ <span style="color: #008000; text-decoration-color: #008000">Eric Crowell      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4500196'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7218081</span> │ <span style="color: #008000; text-decoration-color: #008000">John Wyman        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4500196'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7223556</span> │ <span style="color: #008000; text-decoration-color: #008000">Daniel Hope       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4558584'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt9089514'</span><span style="font-weight: bold">]</span>          │
│ <span style="color: #008000; text-decoration-color: #008000">nm7223623</span> │ <span style="color: #008000; text-decoration-color: #008000">Marcus Troy       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0120660'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt10914400'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7241836</span> │ <span style="color: #008000; text-decoration-color: #008000">Havár Csongor     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4580414'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7242608</span> │ <span style="color: #008000; text-decoration-color: #008000">Seigô Uetaki      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4581192'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7245253</span> │ <span style="color: #008000; text-decoration-color: #008000">Mahmoud El Faituri</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt2849138'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7254729</span> │ <span style="color: #008000; text-decoration-color: #008000">Tom Keesey        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0924155'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt0924156'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span>  │
│ <span style="color: #008000; text-decoration-color: #008000">nm7280985</span> │ <span style="color: #008000; text-decoration-color: #008000">Gabriel Garcia    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4629714'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                   │
└───────────┴────────────────────┴────────────────────┴─────────────────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="slicing-with-square-bracket-syntax" class="level3">
<h3 class="anchored" data-anchor-id="slicing-with-square-bracket-syntax">Slicing with square-bracket syntax</h3>
<p>Let’s remove everyone’s first profession from the list, but only if they have more than one profession listed:</p>
<div id="363b1821" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">ents[_.primary_profession.length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].mutate(</span>
<span id="cb11-2">    primary_profession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.primary_profession[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:],</span>
<span id="cb11-3">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="167">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst     </span>┃<span style="font-weight: bold"> primary_name           </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles           </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>              │
├────────────┼────────────────────────┼────────────────────┼────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm3146692 </span> │ <span style="color: #008000; text-decoration-color: #008000">Keith Sutton          </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0472984'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm2974992 </span> │ <span style="color: #008000; text-decoration-color: #008000">Dávid Farkas          </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0114301'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm6819046 </span> │ <span style="color: #008000; text-decoration-color: #008000">Walter Batt           </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt8592196'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm2231544 </span> │ <span style="color: #008000; text-decoration-color: #008000">Don Steele            </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0818746'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7267327 </span> │ <span style="color: #008000; text-decoration-color: #008000">Navarro Gray          </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'actor'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt1718437'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt7945012'</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm7783929 </span> │ <span style="color: #008000; text-decoration-color: #008000">Christopher T. Connell</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span><span style="font-weight: bold">]</span>         │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt7510258'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt5262988'</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">nm6894982 </span> │ <span style="color: #008000; text-decoration-color: #008000">Jason Robert Moore    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span><span style="font-weight: bold">]</span>         │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4177962'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm10526935</span> │ <span style="color: #008000; text-decoration-color: #008000">Damien Mota           </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span><span style="font-weight: bold">]</span>         │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt9889740'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7151380 </span> │ <span style="color: #008000; text-decoration-color: #008000">Chris Villa           </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span><span style="font-weight: bold">]</span>         │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4479468'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">nm7641135 </span> │ <span style="color: #008000; text-decoration-color: #008000">Curt Champagne        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'editor'</span><span style="font-weight: bold">]</span>         │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt5097098'</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                          │
└────────────┴────────────────────────┴────────────────────┴────────────────────────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="set-operations-and-sorting" class="level2">
<h2 class="anchored" data-anchor-id="set-operations-and-sorting">Set operations and sorting</h2>
<p>Treating arrays as sets is possible with the <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.union"><code>union</code></a> and <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.intersect"><code>intersect</code></a> APIs.</p>
<p>Let’s take a look at <code>intersect</code>:</p>
<section id="intersection" class="level3">
<h3 class="anchored" data-anchor-id="intersection">Intersection</h3>
<p>Let’s see if we can use array intersection to figure which actors share known-for titles and sort the result:</p>
<div id="11583fdc" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ents.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.known_for_titles.length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).limit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10_000</span>)</span>
<span id="cb12-2">right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left.view()</span>
<span id="cb12-3">shared_titles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb12-4">    left</span>
<span id="cb12-5">    .join(right, left.nconst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> right.nconst)</span>
<span id="cb12-6">    .select(</span>
<span id="cb12-7">        s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"known_for_titles"</span>),</span>
<span id="cb12-8">        left_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_name"</span>,</span>
<span id="cb12-9">        right_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_name_right"</span>,</span>
<span id="cb12-10">    )</span>
<span id="cb12-11">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.known_for_titles.intersect(_.known_for_titles_right).length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-12">    .group_by(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left_name"</span>)</span>
<span id="cb12-13">    .agg(together_with<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.right_name.collect())</span>
<span id="cb12-14">    .mutate(together_with<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.together_with.unique().sort())</span>
<span id="cb12-15">)</span>
<span id="cb12-16">shared_titles</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="168">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> name                  </span>┃<span style="font-weight: bold"> together_with                                       </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                                       │
├───────────────────────┼─────────────────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Chief Willie Sellars </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Amy Tan'</span>, <span style="color: #008000; text-decoration-color: #008000">'Bruce Williams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">13</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">Rainer Spanagel      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Andra Arnicane'</span>, <span style="color: #008000; text-decoration-color: #008000">'Aziz Sheikh'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9</span><span style="font-weight: bold">]</span>           │
│ <span style="color: #008000; text-decoration-color: #008000">Sam Cooper           </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Amy Tan'</span>, <span style="color: #008000; text-decoration-color: #008000">'Bruce Williams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10</span><span style="font-weight: bold">]</span>              │
│ <span style="color: #008000; text-decoration-color: #008000">Michelle Porter      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Amy Tan'</span>, <span style="color: #008000; text-decoration-color: #008000">'Bruce Williams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span><span style="font-weight: bold">]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">Bryan Carter         </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Andrew Bower'</span>, <span style="color: #008000; text-decoration-color: #008000">'Austin Murtha'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11</span><span style="font-weight: bold">]</span>          │
│ <span style="color: #008000; text-decoration-color: #008000">Timothy Johnson      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Betsy Blaney'</span>, <span style="color: #008000; text-decoration-color: #008000">'Brendan Halko'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19</span><span style="font-weight: bold">]</span>          │
│ <span style="color: #008000; text-decoration-color: #008000">Colin McLean         </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Alison Garnham'</span>, <span style="color: #008000; text-decoration-color: #008000">'Ashley Fox'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20</span><span style="font-weight: bold">]</span>           │
│ <span style="color: #008000; text-decoration-color: #008000">Jessica Williams     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Austin Williams'</span><span style="font-weight: bold">]</span>                                 │
│ <span style="color: #008000; text-decoration-color: #008000">Leighann Falcon      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Aaron Green'</span>, <span style="color: #008000; text-decoration-color: #008000">'Alejandro Garza y Garza'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">71</span><span style="font-weight: bold">]</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Oldham Tuneless Choir</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Alex Matvienko'</span>, <span style="color: #008000; text-decoration-color: #008000">'Andy McDonald'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38</span><span style="font-weight: bold">]</span>        │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                   │
└───────────────────────┴─────────────────────────────────────────────────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="advanced-operations" class="level2">
<h2 class="anchored" data-anchor-id="advanced-operations">Advanced operations</h2>
<section id="flatten-arrays-into-rows" class="level3">
<h3 class="anchored" data-anchor-id="flatten-arrays-into-rows">Flatten arrays into rows</h3>
<p>Thanks to the <a href="https://github.com/tobymao/sqlglot/commit/06e0869e7aa5714d77e6ec763da38d6a422965fa">tireless efforts</a> of the <a href="https://github.com/tobymao/sqlglot/graphs/contributors">folks</a> working on <a href="https://github.com/tobymao/sqlglot"><code>sqlglot</code></a>, as of version 7.0.0 Ibis supports <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.unnest"><code>unnest</code></a> for BigQuery!</p>
<p>You can use it standalone on a column expression:</p>
<div id="e28c4519" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">ents.primary_profession.unnest()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="169">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> primary_profession </span>┃
┡━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │
├────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │
└────────────────────┘
</pre>
</div>
</div>
<p>You can also use it in <code>select</code>/<code>mutate</code> calls to expand the table accordingly:</p>
<div id="99e2daa3" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">ents.mutate(primary_profession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.primary_profession.unnest())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="170">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst    </span>┃<span style="font-weight: bold"> primary_name       </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>    │
├───────────┼────────────────────┼────────────────────┼──────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm7211030</span> │ <span style="color: #008000; text-decoration-color: #008000">Josh Berry        </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4046896'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7211205</span> │ <span style="color: #008000; text-decoration-color: #008000">Alan Douglas      </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0038449'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7213536</span> │ <span style="color: #008000; text-decoration-color: #008000">Wilson Recalde    </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt2333598'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7214355</span> │ <span style="color: #008000; text-decoration-color: #008000">Julian Owen       </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt3488298'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7215983</span> │ <span style="color: #008000; text-decoration-color: #008000">Zach Ladouceur    </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4546288'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7221941</span> │ <span style="color: #008000; text-decoration-color: #008000">Alain Milani      </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4548654'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7225536</span> │ <span style="color: #008000; text-decoration-color: #008000">Gary Flanzer      </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4521030'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7236543</span> │ <span style="color: #008000; text-decoration-color: #008000">Bastiaan Schreuder</span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4506254'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7241255</span> │ <span style="color: #008000; text-decoration-color: #008000">Jared Young       </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4579992'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #008000; text-decoration-color: #008000">nm7241835</span> │ <span style="color: #008000; text-decoration-color: #008000">Fagyas Alex       </span> │ <span style="color: #008000; text-decoration-color: #008000">actor             </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4580414'</span><span style="font-weight: bold">]</span>    │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │
└───────────┴────────────────────┴────────────────────┴──────────────────┘
</pre>
</div>
</div>
<p>Unnesting can be useful when joining nested data.</p>
<p>Here we use unnest to find people known for any of the godfather movies:</p>
<div id="d3d9d571" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="annotated-cell-16" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-16" data-target-annotation="1">1</button><span id="annotated-cell-16-1" class="code-annotation-target">basics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.tables.title_basics.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="annotated-cell-16-2">    [</span>
<span id="annotated-cell-16-3">        _.title_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"movie"</span>,</span>
<span id="annotated-cell-16-4">        _.original_title.lower().startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the godfather"</span>),</span>
<span id="annotated-cell-16-5">        _.genres.lower().contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crime"</span>),</span>
<span id="annotated-cell-16-6">    ]</span>
<span id="annotated-cell-16-7">)</span>
<span id="annotated-cell-16-8"></span>
<span id="annotated-cell-16-9">known_for_the_godfather <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-16" data-target-annotation="2">2</button><span id="annotated-cell-16-10" class="code-annotation-target">    ents.mutate(tconst<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.known_for_titles.unnest())</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-16" data-target-annotation="3">3</button><span id="annotated-cell-16-11" class="code-annotation-target">    .join(basics, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tconst"</span>)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-16" data-target-annotation="4">4</button><span id="annotated-cell-16-12" class="code-annotation-target">    .select(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_title"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_name"</span>)</span>
<span id="annotated-cell-16-13">    .distinct()</span>
<span id="annotated-cell-16-14">    .order_by([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_title"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary_name"</span>])</span>
<span id="annotated-cell-16-15">)</span>
<span id="annotated-cell-16-16">known_for_the_godfather</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-16" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-16" data-code-lines="1,7" data-code-annotation="1">Filter the <code>title_basics</code> data set to only the Godfather movies</span>
</dd>
<dt data-target-cell="annotated-cell-16" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-16" data-code-lines="10" data-code-annotation="2">Unnest the <code>known_for_titles</code> array column</span>
</dd>
<dt data-target-cell="annotated-cell-16" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-16" data-code-lines="11" data-code-annotation="3">Join with <code>basics</code> to get movie titles</span>
</dd>
<dt data-target-cell="annotated-cell-16" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-16" data-code-lines="12,14" data-code-annotation="4">Ensure that each entity is only listed once and sort the results</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="171">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> primary_title </span>┃<span style="font-weight: bold"> primary_name        </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>              │
├───────────────┼─────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">A. Emmett Adams    </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Abe Vigoda         </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Al Lettieri        </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Al Martino         </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Al Pacino          </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Albert S. Ruddy    </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Alex Rocco         </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Andrea Eastman     </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Angelo Infanti     </span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather</span> │ <span style="color: #008000; text-decoration-color: #008000">Anna Hill Johnstone</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │
└───────────────┴─────────────────────┘
</pre>
</div>
</div>
<p>Let’s summarize by showing how many people are known for each Godfather movie:</p>
<div id="7a6153fd" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">known_for_the_godfather.primary_title.value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="172">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> primary_title          </span>┃<span style="font-weight: bold"> primary_title_count </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>               │
├────────────────────────┼─────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather Part III</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196</span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather Part II </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">117</span> │
│ <span style="color: #008000; text-decoration-color: #008000">The Godfather         </span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">96</span> │
└────────────────────────┴─────────────────────┘
</pre>
</div>
</div>
</section>
<section id="filtering-array-elements" class="level3">
<h3 class="anchored" data-anchor-id="filtering-array-elements">Filtering array elements</h3>
<p>Filtering array elements can be done with the <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.filter"><code>filter</code></a> method, which applies a predicate to each array element and returns an array of elements for which the predicate returns <code>True</code>.</p>
<p>This method is similar to Python’s <a href="https://docs.python.org/3.7/library/functions.html#filter"><code>filter</code></a> function.</p>
<p>Let’s show all people who are neither editors nor actors:</p>
<div id="888e227f" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="annotated-cell-18" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-18-1">ents.mutate(</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-18" data-target-annotation="1">1</button><span id="annotated-cell-18-2" class="code-annotation-target">    primary_profession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.primary_profession.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="annotated-cell-18-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> pp: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>pp.isin((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"editor"</span>))</span>
<span id="annotated-cell-18-4">    )</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-18" data-target-annotation="2">2</button><span id="annotated-cell-18-5" class="code-annotation-target">).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.primary_profession.length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-18" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-18" data-code-lines="2" data-code-annotation="1">This <code>filter</code> call is applied to each array element</span>
</dd>
<dt data-target-cell="annotated-cell-18" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-18" data-code-lines="5" data-code-annotation="2">This <code>filter</code> call is applied to the table</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="173">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst     </span>┃<span style="font-weight: bold"> primary_name       </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>    │
├────────────┼────────────────────┼────────────────────┼──────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm14701100</span> │ <span style="color: #008000; text-decoration-color: #008000">Karin Roach       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm3709802 </span> │ <span style="color: #008000; text-decoration-color: #008000">Kristin L. Holland</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm13336378</span> │ <span style="color: #008000; text-decoration-color: #008000">Rok Salazar       </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm7514782 </span> │ <span style="color: #008000; text-decoration-color: #008000">Christopher Spicer</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm11531194</span> │ <span style="color: #008000; text-decoration-color: #008000">J Manuel          </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm9114713 </span> │ <span style="color: #008000; text-decoration-color: #008000">Huy Nguyen        </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm2230248 </span> │ <span style="color: #008000; text-decoration-color: #008000">Jeffrey Galen     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm8479496 </span> │ <span style="color: #008000; text-decoration-color: #008000">Fatima Amgane     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm2229345 </span> │ <span style="color: #008000; text-decoration-color: #008000">Harold Brown      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #008000; text-decoration-color: #008000">nm7383201 </span> │ <span style="color: #008000; text-decoration-color: #008000">Ashley Silver     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'legal'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[]</span>               │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │
└────────────┴────────────────────┴────────────────────┴──────────────────┘
</pre>
</div>
</div>
</section>
<section id="applying-a-function-to-array-elements" class="level3">
<h3 class="anchored" data-anchor-id="applying-a-function-to-array-elements">Applying a function to array elements</h3>
<p>You can apply a function to run an ibis expression on each element of an array using the <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue.map"><code>map</code></a> method.</p>
<p>Let’s normalize the case of primary_profession to upper case:</p>
<div id="b979917c" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">ents.mutate(</span>
<span id="cb16-2">    primary_profession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.primary_profession.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> pp: pp.upper())</span>
<span id="cb16-3">).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.primary_profession.length() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="174">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> nconst    </span>┃<span style="font-weight: bold"> primary_name      </span>┃<span style="font-weight: bold"> primary_profession </span>┃<span style="font-weight: bold"> known_for_titles                    </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>                       │
├───────────┼───────────────────┼────────────────────┼─────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">nm7199328</span> │ <span style="color: #008000; text-decoration-color: #008000">Renzo Castro     </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4623856'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt4494580'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span><span style="font-weight: bold">]</span>  │
│ <span style="color: #008000; text-decoration-color: #008000">nm7199362</span> │ <span style="color: #008000; text-decoration-color: #008000">Pankaj           </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4367318'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7200119</span> │ <span style="color: #008000; text-decoration-color: #008000">Thibault Péan    </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt4534250'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7203213</span> │ <span style="color: #008000; text-decoration-color: #008000">Tim Goodman      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt2234701'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7207130</span> │ <span style="color: #008000; text-decoration-color: #008000">Ruupertti Arponen</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0185819'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt10628202'</span><span style="font-weight: bold">]</span>         │
│ <span style="color: #008000; text-decoration-color: #008000">nm7223822</span> │ <span style="color: #008000; text-decoration-color: #008000">Federico Carghini</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt1556087'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7232704</span> │ <span style="color: #008000; text-decoration-color: #008000">Ned Jackson      </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0407361'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt20453990'</span><span style="font-weight: bold">]</span>         │
│ <span style="color: #008000; text-decoration-color: #008000">nm7238980</span> │ <span style="color: #008000; text-decoration-color: #008000">Rasmus Cassanelli</span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0782510'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7240979</span> │ <span style="color: #008000; text-decoration-color: #008000">Changyuan Zhou   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt0311913'</span><span style="font-weight: bold">]</span>                       │
│ <span style="color: #008000; text-decoration-color: #008000">nm7242332</span> │ <span style="color: #008000; text-decoration-color: #008000">James Dolbeare   </span> │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'ACTOR'</span><span style="font-weight: bold">]</span>          │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tt10151048'</span>, <span style="color: #008000; text-decoration-color: #008000">'tt5769738'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                   │
└───────────┴───────────────────┴────────────────────┴─────────────────────────────────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Ibis has a sizable collection of array APIs that work with many different backends and as of version 7.0.0, Ibis supports a much larger set of those APIs for BigQuery!</p>
<p>Check out <a href="../../reference/expression-collections.html#ibis.expr.types.arrays.ArrayValue">the API documentation</a> for the full set of available methods.</p>
<p>Try it out, and let us know what you think.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>bigquery</category>
  <category>arrays</category>
  <category>cloud</category>
  <guid>https://ibis-project.org/posts/bigquery-arrays/index.html</guid>
  <pubDate>Tue, 12 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Icy IO: loading local files with Snowflake</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/snowflake-io/index.html</link>
  <description><![CDATA[ 




<section id="loading-files-without-ibis" class="level2">
<h2 class="anchored" data-anchor-id="loading-files-without-ibis">Loading files without Ibis</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/KFz4pbCqtQU" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>It can be challenging to load local files into Snowflake from Python.</p>
<p>Here’s how to load a CSV file into Snowflake without Ibis.</p>
<div class="sourceCode" id="annotated-cell-1" style="background: #f1f3f5;"><pre class="sourceCode sql code-annotation-code code-with-copy code-annotated"><code class="sourceCode sql"><button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="1">1</button><span id="annotated-cell-1-1" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CREATE</span> TEMP STAGE load_csv_stage;</span>
<span id="annotated-cell-1-2"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="2">2</button><span id="annotated-cell-1-3" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CREATE</span> TEMP <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FILE</span> FORMAT load_csv_format</span>
<span id="annotated-cell-1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TYPE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CSV PARSE_HEADER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TRUE</span>;</span>
<span id="annotated-cell-1-5"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="3">3</button><span id="annotated-cell-1-6" class="code-annotation-target">PUT <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'file:///path/to/my.csv'</span> @load_csv_stage;</span>
<span id="annotated-cell-1-7"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="4">4</button><span id="annotated-cell-1-8" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CREATE</span> TEMP <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TABLE</span> my_table</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="5">5</button><span id="annotated-cell-1-9" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">USING</span> TEMPLATE (</span>
<span id="annotated-cell-1-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span> ARRAY_AGG(OBJECT_CONSTRUCT(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>))</span>
<span id="annotated-cell-1-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TABLE</span>(</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="6">6</button><span id="annotated-cell-1-12" class="code-annotation-target">        INFER_SCHEMA(</span>
<span id="annotated-cell-1-13">            LOCATION <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@load_csv_stage'</span>,</span>
<span id="annotated-cell-1-14">            FILE_FORMAT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'load_csv_format'</span></span>
<span id="annotated-cell-1-15">        )</span>
<span id="annotated-cell-1-16">    )</span>
<span id="annotated-cell-1-17">);</span>
<span id="annotated-cell-1-18"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="7">7</button><span id="annotated-cell-1-19" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">COPY</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INTO</span> my_table</span>
<span id="annotated-cell-1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> @load_csv_stage</span>
<span id="annotated-cell-1-21">FILE_FORMAT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TYPE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CSV SKIP_HEADER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-1" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="1" data-code-annotation="1"><strong>Creates a temporary <a href="https://docs.snowflake.com/en/sql-reference/sql/create-stage">stage</a> in Snowflake.</strong> Stages are locations in Snowflake that hold files. They can be used to store raw files to load into tables. <code>TEMP</code> stages are only accessible to the current session and will be dropped when the session ends.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="3,4" data-code-annotation="2"><strong>A <a href="https://docs.snowflake.com/en/sql-reference/sql/create-file-format">file format</a> is a set of instructions for how to interpret a file.</strong> File formats are where you specify <a href="https://docs.snowflake.com/sql-reference/sql/create-file-format#type-csv">parsing</a> and some loading options for your files.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="6" data-code-annotation="3"><strong><a href="https://docs.snowflake.com/en/sql-reference/sql/put"><code>PUT</code></a> copies a file or glob pattern</strong> matching one or more files to a stage.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="8,17" data-code-annotation="4"><strong>Creates a temporary table</strong> with schema inferred using Snowflake’s <a href="https://docs.snowflake.com/en/sql-reference/functions/infer_schema"><code>INFER_SCHEMA</code></a> <a href="https://docs.snowflake.com/en/sql-reference/functions-table">table function</a>.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="9" data-code-annotation="5"><strong><a href="https://docs.snowflake.com/sql-reference/sql/create-table#create-table-using-template"><code>USING TEMPLATE</code></a> is a Snowflake-specific syntax</strong> that allows you to specify a set of column definitions computed from staged files.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="12,15" data-code-annotation="6"><strong><a href="https://docs.snowflake.com/en/sql-reference/functions/infer_schema"><code>INFER_SCHEMA</code></a></strong> is a powerful feature of Snowflake that allows you to load files without having to compute the schema in client code.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="7">7</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="19,21" data-code-annotation="7"><strong><a href="https://docs.snowflake.com/en/sql-reference/sql/copy-into-table"><code>COPY INTO</code></a> loads the staged data</strong> into the created temporary table.</span>
</dd>
</dl>
<p>Snowflake provides the full set of primitives required to achieve this, but composing them together can be challenging. Some users struggle to remember the sequence of steps.</p>
</section>
<section id="loading-files-with-ibis" class="level2">
<h2 class="anchored" data-anchor-id="loading-files-with-ibis">Loading files with Ibis</h2>
<p>Let’s take a look at how ibis turns the above process into a <strong>single line</strong> of Python.</p>
<p>First, we connect to snowflake:</p>
<div id="0c2dcca9" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis.interactive <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SNOWFLAKE_URL"</span>])</span></code></pre></div>
</div>
<section id="read_csv" class="level3">
<h3 class="anchored" data-anchor-id="read_csv"><code>read_csv</code></h3>
<p>Loading CSV files is now a single line of familiar Python code:</p>
<div id="3ed91053" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">diamonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamonds.csv"</span>)</span>
<span id="cb2-2">diamonds</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> carat         </span>┃<span style="font-weight: bold"> cut       </span>┃<span style="font-weight: bold"> color  </span>┃<span style="font-weight: bold"> clarity </span>┃<span style="font-weight: bold"> depth         </span>┃<span style="font-weight: bold"> table         </span>┃<span style="font-weight: bold"> price </span>┃<span style="font-weight: bold"> x             </span>┃<span style="font-weight: bold"> y             </span>┃<span style="font-weight: bold"> z             </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 1)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 1)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │
├───────────────┼───────────┼────────┼─────────┼───────────────┼───────────────┼───────┼───────────────┼───────────────┼───────────────┤
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">Ideal    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.43</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.21</span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.8</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.89</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.84</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">56.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">327</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.29</span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.4</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">334</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.20</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.23</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.63</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.31</span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">63.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">335</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.34</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.35</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.75</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">VVS2   </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.8</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.94</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.96</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.48</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">VVS1   </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.47</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.26</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.11</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.53</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.22</span> │ <span style="color: #008000; text-decoration-color: #008000">Fair     </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.87</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.78</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.49</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.4</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">338</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.39</span> │
│             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴───────────┴────────┴─────────┴───────────────┴───────────────┴───────┴───────────────┴───────────────┴───────────────┘
</pre>
</div>
</div>
</section>
<section id="read_parquet" class="level3">
<h3 class="anchored" data-anchor-id="read_parquet"><code>read_parquet</code></h3>
<p>Similarly, loading Parquet files is now a single line of code:</p>
<div id="0fca1621" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">diamonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.read_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamonds.parquet"</span>)</span>
<span id="cb3-2">diamonds</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┓
┃<span style="font-weight: bold"> carat   </span>┃<span style="font-weight: bold"> cut       </span>┃<span style="font-weight: bold"> color  </span>┃<span style="font-weight: bold"> clarity </span>┃<span style="font-weight: bold"> depth   </span>┃<span style="font-weight: bold"> table   </span>┃<span style="font-weight: bold"> price </span>┃<span style="font-weight: bold"> x       </span>┃<span style="font-weight: bold"> y       </span>┃<span style="font-weight: bold"> z       </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │
├─────────┼───────────┼────────┼─────────┼─────────┼─────────┼───────┼─────────┼─────────┼─────────┤
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">Ideal    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.5</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.43</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.21</span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.8</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.89</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.84</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">56.9</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">327</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.29</span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.4</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">334</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.20</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.23</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.63</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.31</span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">63.3</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">335</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.34</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.35</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.75</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">VVS2   </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.8</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.94</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.96</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.48</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">VVS1   </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.3</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.47</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.26</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.9</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.11</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.53</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.22</span> │ <span style="color: #008000; text-decoration-color: #008000">Fair     </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.1</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.87</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.78</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.49</span> │
│    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.4</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">338</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.39</span> │
│       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────┴─────────┴─────────┴─────────┴───────┴─────────┴─────────┴─────────┘
</pre>
</div>
</div>
</section>
<section id="read_json" class="level3">
<h3 class="anchored" data-anchor-id="read_json"><code>read_json</code></h3>
<p>Lastly, loading JSON files is now – surprise 🥳 – a single line of code!</p>
<p>Line delimited JSON is supported:</p>
<div id="2de5539d" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">diamonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.read_json(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamonds.ndjson"</span>)</span>
<span id="cb4-2">diamonds</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> carat         </span>┃<span style="font-weight: bold"> clarity </span>┃<span style="font-weight: bold"> color  </span>┃<span style="font-weight: bold"> cut       </span>┃<span style="font-weight: bold"> depth         </span>┃<span style="font-weight: bold"> price </span>┃<span style="font-weight: bold"> table         </span>┃<span style="font-weight: bold"> x             </span>┃<span style="font-weight: bold"> y             </span>┃<span style="font-weight: bold"> z             </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 1)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 1)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │
├───────────────┼─────────┼────────┼───────────┼───────────────┼───────┼───────────────┼───────────────┼───────────────┼───────────────┤
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Ideal    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.5</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.43</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.21</span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.8</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.89</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.84</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">56.9</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">327</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.29</span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.4</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">334</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.20</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.23</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.63</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.31</span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">63.3</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">335</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.34</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.35</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.75</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">VVS2   </span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.8</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.94</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.96</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.48</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">VVS1   </span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.3</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.47</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.26</span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.9</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.11</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.53</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.22</span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Fair     </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.1</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.87</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.78</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.49</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.4</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">338</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.39</span> │
│             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴─────────┴────────┴───────────┴───────────────┴───────┴───────────────┴───────────────┴───────────────┴───────────────┘
</pre>
</div>
</div>
<p>As well as strict JSON arrays of objects:</p>
<div id="6c6e0552" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">diamonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.read_json(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamonds.json"</span>)</span>
<span id="cb5-2">diamonds</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> carat         </span>┃<span style="font-weight: bold"> clarity </span>┃<span style="font-weight: bold"> color  </span>┃<span style="font-weight: bold"> cut       </span>┃<span style="font-weight: bold"> depth         </span>┃<span style="font-weight: bold"> price </span>┃<span style="font-weight: bold"> table         </span>┃<span style="font-weight: bold"> x             </span>┃<span style="font-weight: bold"> y             </span>┃<span style="font-weight: bold"> z             </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 1)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(3, 1)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">decimal(4, 2)</span> │
├───────────────┼─────────┼────────┼───────────┼───────────────┼───────┼───────────────┼───────────────┼───────────────┼───────────────┤
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Ideal    </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.5</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.43</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.21</span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.8</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">326</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.89</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.84</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">56.9</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">327</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.31</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.29</span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">Premium  </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.4</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">334</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.20</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.23</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.63</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.31</span> │ <span style="color: #008000; text-decoration-color: #008000">SI2    </span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">Good     </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">63.3</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">335</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.34</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.35</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.75</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">VVS2   </span> │ <span style="color: #008000; text-decoration-color: #008000">J     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.8</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.94</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.96</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.48</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24</span> │ <span style="color: #008000; text-decoration-color: #008000">VVS1   </span> │ <span style="color: #008000; text-decoration-color: #008000">I     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.3</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">336</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.95</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.98</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.47</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.26</span> │ <span style="color: #008000; text-decoration-color: #008000">SI1    </span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.9</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.07</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.11</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.53</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.22</span> │ <span style="color: #008000; text-decoration-color: #008000">VS2    </span> │ <span style="color: #008000; text-decoration-color: #008000">E     </span> │ <span style="color: #008000; text-decoration-color: #008000">Fair     </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65.1</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">337</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.87</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.78</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.49</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.23</span> │ <span style="color: #008000; text-decoration-color: #008000">VS1    </span> │ <span style="color: #008000; text-decoration-color: #008000">H     </span> │ <span style="color: #008000; text-decoration-color: #008000">Very Good</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.4</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">338</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.05</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.39</span> │
│             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴─────────┴────────┴───────────┴───────────────┴───────┴───────────────┴───────────────┴───────────────┴───────────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Ibis 7.0.0 adds support for <a href="../../backends/snowflake.html#ibis.backends.snowflake.Backend.read_csv"><code>read_csv</code></a>, <a href="../../backends/snowflake.html#ibis.backends.snowflake.Backend.read_parquet"><code>read_parquet</code></a> and <a href="../../backends/snowflake.html#ibis.backends.snowflake.Backend.read_json"><code>read_json</code></a> to the Snowflake backend.</p>
<p>We think you’ll enjoy the increase in productivity these new features bring to the Snowflake backend and we’d love to hear your feedback!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>snowflake</category>
  <category>io</category>
  <category>productivity</category>
  <guid>https://ibis-project.org/posts/snowflake-io/index.html</guid>
  <pubDate>Thu, 31 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis v6.1.0</title>
  <dc:creator>Ibis team</dc:creator>
  <link>https://ibis-project.org/posts/v6.1.0-release/index.html</link>
  <description><![CDATA[ 




<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Ibis 6.1.0 is a minor release that includes new features, backend improvements, bug fixes, documentation improvements, and refactors. We are excited to see further adoption of the dataframe interchange protocol enabling visualization and other libraries to be used more easily with Ibis.</p>
<p>You can view the full changelog in <a href="../../release_notes.html">the release notes</a>.</p>
<p>If you’re new to Ibis, see <a href="../../install.html">how to install</a> and <a href="../../tutorials/getting_started.html">the getting started tutorial</a>.</p>
<p>To follow along with this blog, ensure you’re on <code>'ibis-framework&gt;=6.1,&lt;7'</code>. First, we'll setup Ibis and fetch some sample data to use.</p>
<div id="24a6b50e" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> s</span>
<span id="cb1-3"></span>
<span id="cb1-4">ibis.__version__</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>'6.1.0'</code></pre>
</div>
</div>
<div id="4e2c9e69" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># interactive mode for demo purposes</span></span>
<span id="cb3-2">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
<div id="866d8631" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.examples.penguins.fetch()</span>
<span id="cb4-2">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.mutate(year<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>t[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>].cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>))</span>
<span id="cb4-3">t.limit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year   </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴────────┘
</pre>
</div>
</div>
</section>
<section id="ecosystem-integrations" class="level2">
<h2 class="anchored" data-anchor-id="ecosystem-integrations">Ecosystem integrations</h2>
<p>With the introduction of <code>__dataframe__</code> support in v6.0.0 and efficiency improvements in this release, Ibis now works with <a href="https://altair-viz.github.io/index.html">Altair</a>, <a href="https://plotly.com/python/">Plotly</a>, <a href="https://plotnine.readthedocs.io/en/stable/">plotnine</a>, and any other visualization library that implements the protocol. This enables passing Ibis tables directly to visualization libraries without a <code>.to_pandas()</code> or <code>to_pyarrow()</code> call for any of the 15+ backends supported, with data efficiently transferred through Apache Arrow.</p>
<div id="cc0a2a10" class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="annotated-cell-4" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="1">1</button><span id="annotated-cell-4-1" class="code-annotation-target">width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="annotated-cell-4-2">height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-4" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="1,2" data-code-annotation="1">Set the width and height of the plots.</span>
</dd>
</dl>
</div>
</div>
<div id="71cadaa6" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="annotated-cell-5" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-5" data-target-annotation="1">1</button><span id="annotated-cell-5-1" class="code-annotation-target">grouped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-5-2">    t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="annotated-cell-5-3">    .aggregate(count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis._.count())</span>
<span id="annotated-cell-5-4">    .order_by(ibis.desc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>))</span>
<span id="annotated-cell-5-5">)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-5" data-target-annotation="2">2</button><span id="annotated-cell-5-6" class="code-annotation-target">grouped</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-5" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-5" data-code-lines="1,5" data-code-annotation="1">Setup data to plot.</span>
</dd>
<dt data-target-cell="annotated-cell-5" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-5" data-code-lines="6" data-code-annotation="2">Display the table.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species   </span>┃<span style="font-weight: bold"> count </span>┃
┡━━━━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├───────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">152</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo   </span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">124</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Chinstrap</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">68</span> │
└───────────┴───────┘
</pre>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Altair</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Plotly</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">plotnine</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install altair</span></code></pre></div>
<div id="d7bb57e9" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="annotated-cell-24" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy"><code class="sourceCode python"><span id="annotated-cell-24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> altair <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> alt</span>
<span id="annotated-cell-24-2"></span>
<span id="annotated-cell-24-3">chart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-24-4">    alt.Chart(grouped)</span>
<span id="annotated-cell-24-5">    .mark_bar()</span>
<span id="annotated-cell-24-6">    .encode(</span>
<span id="annotated-cell-24-7">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>,</span>
<span id="annotated-cell-24-8">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>,</span>
<span id="annotated-cell-24-9">    )</span>
<span id="annotated-cell-24-10">    .properties(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>height)</span>
<span id="annotated-cell-24-11">)</span>
<span id="annotated-cell-24-12">chart</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>ExpressionError: Use .count() instead</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>alt.Chart(...)</code></pre>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install plotly</span></code></pre></div>
<div id="bedde087" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="annotated-cell-28" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy"><code class="sourceCode python"><span id="annotated-cell-28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span>
<span id="annotated-cell-28-2"></span>
<span id="annotated-cell-28-3">px.bar(</span>
<span id="annotated-cell-28-4">    grouped.to_pandas(),</span>
<span id="annotated-cell-28-5">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>,</span>
<span id="annotated-cell-28-6">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>,</span>
<span id="annotated-cell-28-7">    width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width,</span>
<span id="annotated-cell-28-8">    height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>height,</span>
<span id="annotated-cell-28-9">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="b37509bc-a479-4263-89e5-f183f999e8cd" class="plotly-graph-div" style="height:480px; width:640px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("b37509bc-a479-4263-89e5-f183f999e8cd")) {                    Plotly.newPlot(                        "b37509bc-a479-4263-89e5-f183f999e8cd",                        [{"alignmentgroup":"True","hovertemplate":"species=%{x}\u003cbr\u003ecount=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"","offsetgroup":"","orientation":"v","showlegend":false,"textposition":"auto","x":["Adelie","Gentoo","Chinstrap"],"xaxis":"x","y":[152,124,68],"yaxis":"y","type":"bar"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"species"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"count"}},"legend":{"tracegroupgap":0},"margin":{"t":60},"barmode":"relative","height":480,"width":640},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('b37509bc-a479-4263-89e5-f183f999e8cd');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install plotnine</span></code></pre></div>
<div id="e04b7abe" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> plotnine <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ggplot, aes, geom_bar, theme</span>
<span id="cb10-2"></span>
<span id="cb10-3">(</span>
<span id="cb10-4">    ggplot(</span>
<span id="cb10-5">        grouped,</span>
<span id="cb10-6">        aes(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>),</span>
<span id="cb10-7">    )</span>
<span id="cb10-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_bar(stat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>)</span>
<span id="cb10-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> theme(figure_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span>
<span id="cb10-10">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://ibis-project.org/posts/v6.1.0-release/index_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>&lt;Figure Size: (640 x 480)&gt;</code></pre>
</div>
</div>
</div>
</div>
</div>
<p>A more modular, composable, and scalable way of working with data is taking shape with <code>__dataframe__</code> and <code>__array__</code> support in Ibis and increasingly the Python data ecosystem. Let's combine the above with PCA after some preprocessing in Ibis to visualize all numeric columns in 2D.</p>
<div id="7810cfc2" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="annotated-cell-6" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="1">1</button><span id="annotated-cell-6-1" class="code-annotation-target"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> s</span>
<span id="annotated-cell-6-2"></span>
<span id="annotated-cell-6-3"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="2">2</button><span id="annotated-cell-6-4" class="code-annotation-target"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> transform(t):</span>
<span id="annotated-cell-6-5">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.mutate(</span>
<span id="annotated-cell-6-6">        s.across(s.numeric(), {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zscore"</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> x.std()})</span>
<span id="annotated-cell-6-7">    ).dropna()</span>
<span id="annotated-cell-6-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> t</span>
<span id="annotated-cell-6-9"></span>
<span id="annotated-cell-6-10"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="3">3</button><span id="annotated-cell-6-11" class="code-annotation-target">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform(t)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="4">4</button><span id="annotated-cell-6-12" class="code-annotation-target">f</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-6" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="1" data-code-annotation="1">Import the selectors module.</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="4,5,6,7,8" data-code-annotation="2">Define a function to transform the table for code reuse (compute z-scores on numeric columns).</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="11" data-code-annotation="3">Apply the function to the table and assign it to a new variable.</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="12" data-code-annotation="4">Display the transformed table.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year   </span>┃<span style="font-weight: bold"> bill_length_mm_zscore </span>┃<span style="font-weight: bold"> bill_depth_mm_zscore </span>┃<span style="font-weight: bold"> flipper_length_mm_zscore </span>┃<span style="font-weight: bold"> body_mass_g_zscore </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>            │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼────────┼───────────────────────┼──────────────────────┼──────────────────────────┼────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.883205</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.784300</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.416272</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.563317</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.809939</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.126003</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.060696</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.500969</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.663408</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.429833</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.420660</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.186793</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.322799</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.088129</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.562890</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.937403</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.846572</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.746426</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.776236</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.688012</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.919837</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.328556</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.416272</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.719186</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.864888</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.240044</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.420660</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.590115</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">41.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">182</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3200</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.516876</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.227280</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.345156</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.249141</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.6</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">191</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.974787</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.050255</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.705121</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.500969</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.6</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">198</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4400</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.707443</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.999617</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.207315</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.247203</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │                     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                  <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴────────┴───────────────────────┴──────────────────────┴──────────────────────────┴────────────────────┘
</pre>
</div>
</div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install scikit-learn</span></code></pre></div>
<div id="7812e59f" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="annotated-cell-8" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="1">1</button><span id="annotated-cell-8-1" class="code-annotation-target"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span>
<span id="annotated-cell-8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="annotated-cell-8-3"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="2">2</button><span id="annotated-cell-8-4" class="code-annotation-target">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.select(s.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zscore"</span>))</span>
<span id="annotated-cell-8-5"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="3">3</button><span id="annotated-cell-8-6" class="code-annotation-target">n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="annotated-cell-8-7">pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_components).fit(X)</span>
<span id="annotated-cell-8-8"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="4">4</button><span id="annotated-cell-8-9" class="code-annotation-target">t_pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.memtable(pca.transform(X)).relabel(</span>
<span id="annotated-cell-8-10">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col0"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pc1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pc2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pc3"</span>}</span>
<span id="annotated-cell-8-11">)</span>
<span id="annotated-cell-8-12"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="5">5</button><span id="annotated-cell-8-13" class="code-annotation-target">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.mutate(row_number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis.row_number().over()).join(</span>
<span id="annotated-cell-8-14">    t_pca.mutate(row_number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis.row_number().over()), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row_number"</span></span>
<span id="annotated-cell-8-15">)</span>
<span id="annotated-cell-8-16"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="6">6</button><span id="annotated-cell-8-17" class="code-annotation-target">px.scatter_3d(</span>
<span id="annotated-cell-8-18">    f.to_pandas(),</span>
<span id="annotated-cell-8-19">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pc1"</span>,</span>
<span id="annotated-cell-8-20">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pc2"</span>,</span>
<span id="annotated-cell-8-21">    z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pc3"</span>,</span>
<span id="annotated-cell-8-22">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>,</span>
<span id="annotated-cell-8-23">)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-8" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="1,2" data-code-annotation="1">Import data science libraries</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="4" data-code-annotation="2">Select “features” (numeric columns) as X</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="6,7" data-code-annotation="3">Compute PCA</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="9,10,11" data-code-annotation="4">Create a table from the PCA results</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="13,14,15" data-code-annotation="5">Join the PCA results to the original table</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="17,18,19,20,21,22,23" data-code-annotation="6">Plot the results</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display">
<div>                            <div id="d314f10b-ab71-4214-8e83-c562da0277d6" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("d314f10b-ab71-4214-8e83-c562da0277d6")) {                    Plotly.newPlot(                        "d314f10b-ab71-4214-8e83-c562da0277d6",                        [{"hovertemplate":"species=Adelie\u003cbr\u003epc1=%{x}\u003cbr\u003epc2=%{y}\u003cbr\u003epc3=%{z}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"Adelie","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"Adelie","scene":"scene","showlegend":true,"x":[-1.3138691260427637,-1.378630918265439,-1.8839844056788373,-1.9134406656399912,-1.7691713222603629,-0.8105470540897982,-1.7974036882002518,-1.9481949228797064,-1.5621664787299547,-1.745718527942345,-1.5752354005905727,-0.7953185129178546,-2.3487959420791156,-2.1081622392315484,-1.8530508458444208,-1.5004866095648766,-1.5772862684672722,-1.9245247435390693,-1.7581470019394885,-2.708309167780973,-1.673946976975034,-1.8789672773626795,-1.904413891569045,-1.6568283203236207,-1.5115283537861695,-1.4510769091809697,-1.4326708743397192,-1.6279369014900253,-2.402798772785781,-1.1269209704971839,-2.295639206974038,-0.9697219819784466,-0.5707266824003372,-2.0135576152407135,-0.8724654120280445,-1.9238199612761107,-1.7836004376089105,-1.3987692798573221,-1.1392379319307866,-1.8669512336889065,-0.7830855544259319,-2.450212231152599,-1.2611471144714745,-1.217401942705769,-2.2617494344689955,-1.521301147360894,-2.0186160654905367,-1.1263492697251736,-1.570454131122968,-0.9238576189375951,-2.2479380500804873,-0.9108526130398376,-1.3480977043684428,-1.8061304250511885,-0.5859535722379992,-2.109750496771035,-1.2657963988850958,-1.0287249407938681,-0.3995366047354037,-1.5727238659708762,-0.5820900244389923,-0.941070533866609,-1.920412960016839,-1.4589463680431267,-0.9331822156668959,-0.04210849330231697,-1.5209550882829117,-1.6831344187503627,-1.8391248156095026,-1.8557112261911464,-1.5497113505982594,-1.619461533645183,-1.269305453218963,-0.20018743853187346,-2.0283444420301198,-0.9985925046285808,-1.872276994896654,-0.2633382098001746,-1.577082449779192,-2.5328560769194333,-0.7746804153923569,-1.5958169120021313,-0.37945075556564956,-1.5046925282616792,-2.0048236716438836,-1.8525770066085638,-0.8517124992704438,-1.7123799073560797,-1.984966055911378,-0.205939403964617,-0.63294290950839,-1.4845373441781442,-0.734102142959868,-1.6954924096289123,-0.6298665802725868,-1.8465256053645784,-1.6060642309143263,-1.7374724517903226,-1.6261517314183624,-1.955477247403888,-1.8249390201627262,-0.6708811428802992,-1.8873054902535502,-0.8746002446650297,-1.5695623526635807,-0.6158188668310564,-1.607351909694154,0.06775565376536331,-1.6613047679540631,-1.1324986174269451,-1.680438140677286,-0.7053920337067914,-0.96822929505067,-1.8850526244087447,-1.1053497725786314,-0.8016489158928197,-1.1845478403842975,-1.3649223112345346,-1.9835482130263289,-1.0215968015111836,-1.682311086563663,-1.760985134890843,-1.1066387636925685,-2.0621266060489534,-1.5732922640743234,-0.6173424509708877,-1.847295831821652,-0.9935976778528978,-2.402434193370415,-1.7033176210704057,-1.7273215207957497,-2.3087229609918545,-1.5478044973199843,-1.2338119130168932,-1.787736296880138,-1.5918013005003793,-0.6807242499591375,-1.8044426928226605,-0.7419354881985292,-1.6881211582403295,-1.65770806090851,-1.5591145642433202,-1.3445353749192577,-1.572421212183917,-1.972650576426363,-1.6622992008968143],"y":[-0.4402919798412642,-0.15897830842875235,-0.014236134696754832,0.8135849171805278,-0.3621856813023133,0.4942003712714863,-0.23887121185894436,0.9919691655039661,0.5668876254493836,-0.6080788890866503,0.08570741299948116,1.2853254053667045,-0.6432512917210572,-0.13440083284877552,-0.11148803255880554,-0.288120202061525,-0.5990904182511275,-0.2988085217342182,0.14090326969023434,-0.19514963991507359,0.28664595332631393,-0.7738642854713145,-0.4041697407452686,-0.324420385812166,0.32690162518728316,-0.984701966472308,1.0506551829000268,0.5441833045706372,0.06906224748939238,0.354637217826088,-0.5892602778980115,0.11651636265479545,1.0495767802730134,-0.9903356855762233,0.2083069910848536,0.3455285273021924,-0.6558076860718469,1.4316452122357368,0.2759562851184996,-0.7660113192635546,0.7064071279053272,-0.7912741613515976,0.2442164733567818,0.24609561538371885,-1.180684222685833,0.03193900543675938,-1.119919292758678,1.3047010249039193,-0.8292120371362087,0.08215361633331217,-0.9897686197854588,0.04758067963546717,-1.403821087613807,-1.2269120858554527,0.6802050772338271,-0.4745886018471446,-0.005625872072592686,-0.5307910093495374,0.8920887071341864,-0.8492156613548025,0.40912323761859193,-0.535871427081773,0.12053320566760392,-1.3501832422282671,0.5508408623873554,0.0988775545600112,-0.08187936331173383,-0.5617570639150956,0.05360808233496334,-0.27030865924819447,0.16668180306805835,0.039957008072222154,-0.6372672556739626,0.06706589098292051,-1.203909599924116,-0.0880477480606143,-0.8896610462777425,0.35677178121873515,-0.11963916381915571,-1.7527521697682629,0.4389726319986042,-0.7405619780378807,0.8597044827836087,0.46134190331246006,-0.2118147133558791,0.16273466143478174,-0.6222022116556519,0.47350075266669134,-0.8136079730193982,0.7028409153551975,1.4738675077473193,-0.35085916959308594,0.748418585563911,0.9099085193838786,0.3017712106656422,-0.7823026688594998,0.5659544049012064,-1.0606662095718542,0.1765852981957524,-0.9436191669024362,-0.5580165355942519,0.22192089473640195,-1.5867282522683508,0.3459929985150735,-0.4838461814267719,0.18986487714243855,-0.683712152028217,0.3309557921830949,-0.39169953306488187,0.6560850756343765,-0.32087143665208573,-0.15369975377410303,-0.21383382752555158,-0.8858955562760082,0.7428620581244382,-0.17453734850987315,-0.5191778929891109,-0.42908076293093045,-2.089100238507752,-0.47526160605309986,-0.9962660667735241,0.014342500505876288,0.0517489245698628,-0.3871221827325344,-0.9557728063205654,0.24415854038457532,0.03374901722968265,1.9653409839376674,-0.3038318619768152,-0.18324413958367683,0.2764011352091325,-0.44680285261994007,-0.47791865172379866,0.4484724396703771,-0.18480043992375358,0.9047750161855243,0.142918546260468,-1.2692129215665988,-0.9525861505169197,-0.5480421992674097,-1.11496072829656,-0.6951664525132638,-0.3489739621474796,-0.3358028344818403,-1.1150173127336431,0.30283113199002404],"z":[-0.0290034720348789,0.1927506794962343,-0.6265721193031735,-0.7024774462077622,0.026000359253776667,-1.33838736846389,0.625387456659793,-1.0423991318699894,-2.049488657126064,-0.3653069068602019,-0.36002024394047594,-1.093917853848548,-0.4594314829821335,-0.2750874624574592,-0.8915562432796902,-0.42791115152136416,0.03157998266144219,-0.8636792863169105,0.07401922449916588,0.2354388687527417,-0.2493050195922474,0.6623851970583494,-0.3923864582778642,0.22113893643077984,-0.23154775455847745,-0.10283526651798405,-1.2920776232644806,-0.8528495028199213,-0.21159525316042996,-0.9590596077039683,0.036233584829599076,-0.31659478658254325,-0.5986260840248495,0.39514006508569544,-0.9795715072909277,0.15483183988516389,-0.3550094034333755,-0.867670238232381,-0.6875477014032174,-0.4722482649654631,-0.6084874454011102,-0.11760331788849779,-0.07550545545551936,-0.31981676487535204,0.5788374950067733,-0.7162092509533247,0.13170601908064686,-1.2143786936734449,-0.0003264597451516383,-0.2994055875551011,0.4089253291821366,-0.12333899738664937,-0.05312826132501272,0.21163403650684312,-0.8732091552545741,-0.9980031979412795,-0.36287488228845155,0.045825795575298374,-0.057091438219880705,-0.5118050934346087,-0.3628876952462427,0.2567583923201001,-0.7739102307109963,0.03491555459344715,-0.39021011447703297,-0.5053292782580854,-1.390987665517948,-0.1234039921318906,-0.92634444215301,-0.42197590354037834,-0.7212065016160152,-0.3214818702744886,-0.6843508483491804,-0.6777039550269749,-0.2960707309396463,-0.6503916958167694,-0.04063408774543612,-0.936211106248306,-0.4458571681155306,0.3014058034646582,-0.15535903343243945,-0.7088644567816657,-1.3835204536646337,-1.1921354163786793,0.05470701945931731,-0.11317949436586676,-0.2690540251622018,-0.8861849777347283,0.4390057496421847,-0.84622624095563,-0.6184109339456656,0.25763547846345974,-0.7019653709270627,-0.8905972658629965,-0.2181891893862527,0.5854125986615341,-1.1565878101491875,-0.1041872082174026,0.19995476190994757,0.0921051759646582,0.5643468798145086,-0.3652189991289697,0.3477231188952058,-0.6104987906619149,0.15139753856642618,-0.5088745818488833,0.44995928837664195,-0.1649072326866699,0.030607355407956085,0.04231836861099142,-0.47813017358033777,-1.216935071969819,-0.0032988368726979095,-0.12803539663060423,-0.8943000593327548,-0.562960679023404,0.2985179673922773,0.36740519367695085,0.03807253814101599,0.18791175401382015,0.33627174847093777,-0.242367436449578,-0.7239806824791294,-0.31252951362487563,-0.3167131206938964,-0.42947818759099593,-0.23851311272174924,-0.5856510968460111,0.07074992487582973,0.4072142746708763,0.33292673183489796,-0.1601028139993049,0.07570056952454308,-0.4657089472468683,-0.6778291424752287,-0.39498294762792935,-0.7465370634812292,0.6502102052140758,-0.2146385246617225,0.024452931064140017,0.18594027983717107,-0.4159763177160042,-0.45906757128343945,0.13962025305472292,-0.16555790528288203,-0.7376024402387135],"type":"scatter3d"},{"hovertemplate":"species=Gentoo\u003cbr\u003epc1=%{x}\u003cbr\u003epc2=%{y}\u003cbr\u003epc3=%{z}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"Gentoo","marker":{"color":"#EF553B","symbol":"circle"},"mode":"markers","name":"Gentoo","scene":"scene","showlegend":true,"x":[1.5843321794026255,2.8894401214238212,2.6199782761153574,2.23138939651239,1.5509353213681394,1.4512191413978544,2.021375742967594,1.8116701292356763,1.2763520884373247,2.1706984895712966,1.0304914129694371,2.5235659345351165,0.9003965132637006,3.089121102599238,1.456241693921327,2.4542027088068235,2.8175244246537883,1.7475521805679437,1.6207403461718166,1.8455430792490681,1.779184040202433,1.566285545746695,2.5783387758017104,1.1642759272540364,1.4549630428361546,3.789954136289625,2.1407065959501774,1.5837659028379298,1.1029754696615226,1.7613308005129718,0.6990618768661349,2.7120032582139797,1.238557060687985,1.8908591693466872,2.5811855974475493,1.756000339380918,1.1461674991739963,2.6005211375245705,1.9591596470638388,1.7012171115741066,1.6251842452559235,1.150070632879542,2.4725965826705476,1.8972309872782223,1.7971621810742233,0.9915807857866555,1.8847943794839117,0.9242838999112085,2.7751899272086322,1.0678392556174723,2.210710146438919,1.823105397931332,2.7722833014731374,2.8958494037231435,1.672276275191072,2.819609454229711,1.732492656794695,1.8801038113180177,2.0990003006981253,2.0234368279988173,1.5897040936726425,2.9019060597887516,1.4871596123939042,2.7789440839828514,1.724405944114216,2.3552776514770737,1.7000782785213078,2.6984364213685073,2.4835355030227846,2.6045269638948736,1.473126058365623,2.653847406744264,1.8393663066182835,2.820497883509084,1.935308026938385,2.623682629828514,1.4860967331784645,2.5688686360139457,1.8339242017183925,2.0775489185259723,1.2939306792186702,2.426650037636776,1.9906714748259982,3.0899080203436644,1.7043992667575387,1.9120165017335173,1.0129810990750876,2.6859345852772254,1.1191869607990346,1.976079608644497,2.0978428626150953,3.0844442236421235,2.8767362026715873,1.5709761986054354,3.4781187625267833,1.990841008940614,1.8261456135436391,2.750775295005652,1.7106922518761687,2.0197834966579298,1.5448580234263956,1.1601348131611866,2.5061100387045023,1.3692975399757918,2.31973553608399,2.2284518735648406,2.328349494319942,1.462154797262923,2.5223179263546736,1.4640786042371472,3.374877717475099,1.6071496494744917,1.5767675805590247,2.608260609997255,1.5131717457281708,2.856204193502314,1.1507264677975313,1.6597657504053067,2.689090001633259],"y":[-1.336145797481505,0.4551737493187792,0.009922926361948409,-0.564418000767081,-1.1668566058854186,-0.8220480435711804,-0.3588921307586743,-0.3128897253437064,-1.6935876078920753,0.2481639238382225,-0.8328747018048608,0.14766287474085507,-1.699255931159478,-0.02296457339444988,-0.7745294369623453,-0.20480681479444315,-0.3305293889210595,-0.8764100596577248,-0.21600426728569247,-1.6827361178904718,-0.5154236545406067,-0.6527340202071703,0.03688611033971542,-1.27917354776578,-0.8733188688152191,1.826990264487121,0.24964922784549576,-1.4790628471759428,-1.4206974674490516,0.03428414614689498,-1.560168161851718,0.28934304385180243,-1.2413488163442217,-0.2017268993067078,0.33401725016974027,-1.2921309860840928,-1.1478748243678676,0.320887077132881,-1.3730213934999607,-0.3144264038519615,-0.8465349780272223,-0.972329766399224,-0.12217039397652671,-0.7711554265385012,-0.5194587708501135,-1.3264675521025315,-0.6300253448748927,-1.1372465881032234,0.08170215418960654,-1.2105598509507411,-0.5656139267217918,-0.9467261717576362,0.6345180459700765,0.36873202439953845,-1.2000108804552618,-0.006251417469966367,-0.4111138023709524,-0.2889963994114872,-0.08150911568856914,-0.5826851759732591,-0.5589388975090948,0.18917839285444846,-0.7703372157425964,0.6019235013301685,-1.1701305888886573,-0.012010358901996027,-0.4703492597377133,0.4242891109582265,0.2610412409048032,0.9366186631869756,-1.1399652737230244,-0.2860653729794841,-0.8252582361894758,0.954859295660095,-0.414545745767003,0.9921082523838247,-0.8556814092555569,0.25533631746215163,0.11440971327959933,-0.6478819117239137,-0.5894216364195548,0.6149901690287072,-0.31327920890983685,1.377826178490902,-0.24449256937032124,0.0009719111842412946,-1.198828873343717,0.6082194668489371,-1.3162103181013878,-0.259635298105629,0.0008122398262933692,0.294643216350033,0.6022377111506537,-0.9729314363534757,0.9100623805894708,-0.9742226728452459,-0.7832990085144428,0.2606843654904003,-0.7268681373389891,0.33311513481408794,-0.6918673288939376,-1.5736500003668787,-0.39530203694209554,-0.7772167323429995,-0.31819039089449214,-0.2876586359248224,-0.30016515873383454,0.19773997804787538,-0.634545255287589,-1.1068580192006303,0.6830106197499352,-0.6082976875278455,-1.2037426217760763,0.31385566555833605,-0.8758429938669618,-0.1862193643491106,-0.8030867393680197,-1.1866508952102193,0.30854543561791575],"z":[0.7253109493816123,-0.6930276448711303,-0.2557161654562507,-0.1134226260416448,0.6865879692956024,0.11717636652785357,-0.31077825656032576,-0.21761614451592168,-0.15354293627000637,-0.42430007945408,0.6247025455899065,-0.5408490526299653,0.4550758284367685,-0.8432109499228931,0.2657562542420381,-0.19350217530359984,-0.03682675387900177,-0.11045704383630345,-0.2890828420601117,-0.06436221145226956,-0.1975282924936602,0.6751602903216339,-0.19948143793142992,0.006307022132106913,-0.01517264267372874,0.021400367928482444,-0.4931974673370256,-0.15974739329624985,0.5528795065781595,-0.0922851759418694,0.6748159849252471,-0.5920933244143004,0.6875090700858041,0.4770418242006431,-0.3042294941376953,-0.11507828673674539,0.7415410510075937,-0.24281555931199253,0.08574141300125218,-0.6030847997676325,0.32425463954482775,0.4380354498931833,0.2017932713815646,0.11633572322251304,-0.43731306324417624,0.5012923631859093,-0.25482283968665115,0.189631094072768,-0.2187320149021048,0.7728820771896897,-0.3896234813399782,0.19265830276959497,-0.8250541056613434,-0.7874104915534272,-0.09352760915008358,-0.1018766129563232,0.25428798728967694,-0.29613882088420423,-0.15912455413533608,-0.19257427959119353,0.13888530930240764,-0.8660305219346653,0.6313453553418091,-0.6207466452537291,0.23831621621644394,-1.3467734151729915,0.6856668085130172,0.08594765642152488,-0.24789061767771384,-0.709305187812406,-0.0415942258961658,0.40991446753861366,0.4216241085232469,-0.48781267351772417,0.04973578617372396,-0.3537079382561848,0.1710873019863891,-0.03271758783694564,0.150340703304595,0.05562106146466514,0.7741441167002117,-0.191743142559959,0.22445380131882406,-0.046239780908481444,-0.06290889058428734,-0.6286812024243505,-0.2477709444328614,0.14409637519419502,0.2174140636986588,-0.1598941230897806,0.3540861141637787,-0.7981151460168594,-0.36913798455521885,0.5348936188998373,-0.14098576398054125,0.38151876035769816,0.24330402217509814,-0.42055327291516614,-0.2623021476035196,-0.15815198687423385,0.8882347224945311,0.4606994064988933,-0.3413447917609845,0.5308445271537144,-0.3835927522412481,-0.32705237283315136,0.09964501120904704,-1.051750234023754,0.0702883321537728,0.5508113337127215,-0.038134802494031644,0.3906293222028189,0.2527541489444496,-0.5719885758639462,-0.09667177973986155,-0.33513360138260584,-0.15792143134208678,0.38575582677759673,-0.9017533498725265],"type":"scatter3d"},{"hovertemplate":"species=Chinstrap\u003cbr\u003epc1=%{x}\u003cbr\u003epc2=%{y}\u003cbr\u003epc3=%{z}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"Chinstrap","marker":{"color":"#00cc96","symbol":"circle"},"mode":"markers","name":"Chinstrap","scene":"scene","showlegend":true,"x":[-0.7922291340634333,-0.3830876034150576,-0.5092353378917297,-1.1909882357928185,-0.2979685909593475,-0.32532883339559343,-1.630312005438758,-0.07588612701132406,-0.4646218620068658,-0.4110955934835766,-0.5163238447564241,-0.570006644287163,-0.7783835879757018,0.3726627646748752,-0.7115675786963128,-0.053823411649171655,-0.830881655698697,-0.12552232480535225,-1.0574334834055101,-1.42360032305258,-0.504477974787429,0.09714099881363494,-0.3011560009644012,-0.22963056418156233,-0.6836144768959992,0.5653302059025657,-1.408711984728229,0.18556918917385729,-1.1921504584930007,-0.47468973046869783,0.07379649908343941,0.7345194263189502,-1.0485439492101694,0.6093405670874431,0.14028204413523412,-0.8379360008641674,-0.4687102558817134,-0.531193107846075,-0.14146094957332805,0.4677127065355889,-0.642786741099023,0.4429678260021579,-0.030807415892241626,-0.19177776918847117,0.07291124126833198,-0.6285830133659644,0.02450483190735283,-1.312734451374622,-0.32804957272929086,-0.8523602003912655,-0.1323809468985156,-0.04933492614422982,-0.4521030722196351,0.5585748645252613,-0.7425641605961022,0.4940977224680821,-0.20996469108124424,0.11494465156796488,-1.3941731393547208,-0.6548809779955389,-0.7906559629884697,0.2648185882718398,-0.41727176470559363,-0.9128049931478871,-1.0697331521429922,0.21848851979229952,-0.5051967852593403,-0.36387704921321157],"y":[0.5062581297166108,1.5736204868990158,1.572701393199937,0.7087957658904076,1.9762236561724873,0.3648616356695722,0.5576347634628742,1.1797866811717104,0.9137621384859241,1.8601190360108635,0.5045473679546875,2.071414475329434,0.33665387281747156,1.244749042254718,0.12439317523494318,1.6835986623360737,1.7535257839224074,1.7495442706426882,0.7722491317274098,-0.4366576224526566,1.5897939752483625,1.6156282375807032,1.1408061229416535,1.3087474936088874,0.47301860205189794,2.1445133477711376,-0.6627637468600542,2.5974780209851356,-0.4324798131286293,1.1505204754433214,0.21118322108560195,2.3620095719843857,-0.04622742938251532,2.1768185143584833,1.4705482927024582,0.3248518988776433,1.4797731342173894,0.03429604517676132,1.0078500082945592,1.3100956769677532,0.8935031699423113,1.5431151965694432,0.6453312791227185,0.06375310449631408,1.5319991602831995,0.1857375868368244,1.7462836889189464,-0.1908177851810619,1.4932697470582847,-0.18359316157358044,1.6725526117664105,1.3057033228138317,0.06983424013856651,2.344773441438871,0.2489169719125208,1.481210925124658,1.2624115415882347,1.0072765920385038,-0.18013817441543606,0.5562529858471701,0.5106083113291715,1.4214121089440306,0.8210636917115601,1.355772234777453,1.013877410994056,1.7894042383852025,-0.01142867250000675,0.9939861001670605],"z":[0.8059177398573444,0.5065930944524353,0.9587996287442838,0.5508712911792626,0.8709817241184749,0.24293319714711925,1.110425617718742,1.0357952001194746,-0.0005706051217079257,0.6870989708831381,0.6007737812847641,0.6577659232857794,0.9625559415573041,0.8513849672785146,0.8868616222972509,0.3497906095289973,0.8607436380857291,2.209750851509982,0.7122645926230213,1.2281108428920506,0.72227742426497,0.6480737655823032,1.1080179383437696,0.564421914595567,0.6844147537789913,0.09635249863780232,0.7364144093415783,0.3379463348143881,0.791257324082825,0.9054466576861884,0.7502112672470785,-0.41717061646679326,1.7272433465991668,0.2371432814114684,0.12083496537361814,0.8292681581508066,0.9580259146494652,0.817974396012578,1.126095161999462,0.3277726466174128,1.3350663861735046,-0.1930087271460114,1.0943537797029643,1.3330077180044857,0.6596156950973209,0.751868862407461,0.3184495833469016,0.6609628979022704,1.2330628013444693,1.1373875503416004,0.11088370180846045,0.6568475322697916,0.7469351727015382,0.8655137598847236,0.31942005991767813,0.3294200786018356,0.7632133125522834,0.34156470563606084,0.563418984102101,1.2178106281133227,0.9277872889939099,0.5120550390729138,0.5393530515368564,1.486108007945322,0.3230897172331023,0.5269737854001818,1.0836957912458942,0.8841313360962134],"type":"scatter3d"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"scene":{"domain":{"x":[0.0,1.0],"y":[0.0,1.0]},"xaxis":{"title":{"text":"pc1"}},"yaxis":{"title":{"text":"pc2"}},"zaxis":{"title":{"text":"pc3"}}},"legend":{"title":{"text":"species"},"tracegroupgap":0},"margin":{"t":60}},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('d314f10b-ab71-4214-8e83-c562da0277d6');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</section>
<section id="backends" class="level2">
<h2 class="anchored" data-anchor-id="backends">Backends</h2>
<p>Numerous backends received improvements. See the <a href="../../release_notes.html">release notes</a> for more details.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">DataFusion</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">BigQuery</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">PySpark</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-4" aria-controls="tabset-2-4" aria-selected="false">Trino</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-5" aria-controls="tabset-2-5" aria-selected="false">SQLite</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-6" aria-controls="tabset-2-6" aria-selected="false">pandas</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<p>The DataFusion backend (and a few others) received several improvements from community member <a href="https://github.com/mesejo">@mesejo</a> with memtables and many new operations now supported. Some highlights include:</p>
<div id="c24f725c" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.literal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://ibis-project.org/concepts/why_ibis"</span>)</span>
<span id="cb13-2">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.datafusion.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>()</span>
<span id="cb13-3"></span>
<span id="cb13-4">con.execute(url.host())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>'ibis-project.org'</code></pre>
</div>
</div>
<div id="16d76af6" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">con.execute(url.path())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>'/concepts/why_ibis'</code></pre>
</div>
</div>
<div id="f5ee0679" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">con.execute(ibis.literal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aaabbbaaa"</span>).re_search(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bbb"</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>True</code></pre>
</div>
</div>
<div id="a192e678" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">con.execute(ibis.literal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.56</span>).ln())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>1.715598108262491</code></pre>
</div>
</div>
<div id="87803f17" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">con.execute(ibis.literal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.56</span>).log10())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>0.7450747915820575</code></pre>
</div>
</div>
<div id="ec7d20c1" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">con.execute(ibis.literal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.56</span>).radians())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>0.09704030641088471</code></pre>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<p>Some remaining gaps in <code>CREATE TABLE</code> DDL options for BigQuery have been filled in, including the ability to pass in <code>overwrite=True</code> for table creation.</p>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<p>The PySpark backend now supports reading/writing Delta Lake tables. Your PySpark session must be configured to use the Delta Lake package and you must have the <code>delta</code> package installed in your environment.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.read_delta(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/delta"</span>)</span>
<span id="cb25-2"></span>
<span id="cb25-3">...</span>
<span id="cb25-4"></span>
<span id="cb25-5">t.to_delta(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/delta"</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overwrite"</span>)</span></code></pre></div>
</div>
<div id="tabset-2-4" class="tab-pane" aria-labelledby="tabset-2-4-tab">
<p>The <code>.sql</code> API is now supported in Trino, enabling you to chain Ibis and SQL together.</p>
</div>
<div id="tabset-2-5" class="tab-pane" aria-labelledby="tabset-2-5-tab">
<p>Scalar Python UDFs are now supported in SQLite.</p>
<p>Additionally, URL parsing has been added:</p>
<div id="18842920" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.sqlite.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>()</span>
<span id="cb26-2"></span>
<span id="cb26-3">con.execute(url.host())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>'ibis-project.org'</code></pre>
</div>
</div>
<div id="1953136c" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">con.execute(url.path())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>'/concepts/why_ibis'</code></pre>
</div>
</div>
</div>
<div id="tabset-2-6" class="tab-pane" aria-labelledby="tabset-2-6-tab">
<p>URL parsing support was added.</p>
<div id="b2c845b3" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.pandas.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>()</span>
<span id="cb30-2"></span>
<span id="cb30-3">con.execute(url.host())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>'ibis-project.org'</code></pre>
</div>
</div>
<div id="8462ce32" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">con.execute(url.path())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>'/concepts/why_ibis'</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="functionality" class="level2">
<h2 class="anchored" data-anchor-id="functionality">Functionality</h2>
<p>Various new features and were added.</p>
<section id="nunique-supported-on-tables" class="level3">
<h3 class="anchored" data-anchor-id="nunique-supported-on-tables"><code>.nunique()</code> supported on tables</h3>
<p>You can now call <code>.nunique()</code> on tables to get the number of unique rows.</p>
<div id="a4b7830c" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># how many unique rows are there? equivalent to `.count()` in this case</span></span>
<span id="cb34-2">t.nunique()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="21">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg ansi-bold">344</span></pre>
</div>
</div>
</div>
<div id="09761376" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># how many unique species/island/year combinations are there?</span></span>
<span id="cb35-2">t.select(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>).nunique()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="22">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg ansi-bold">15</span></pre>
</div>
</div>
</div>
</section>
<section id="to_sql-returns-a-str-type" class="level3">
<h3 class="anchored" data-anchor-id="to_sql-returns-a-str-type"><code>to_sql</code> returns a <code>str</code> type</h3>
<p>The <code>ibis.expr.sql.SQLString</code> type resulting from <code>to_sql</code> is now a proper <code>str</code> subclass, enabling use without casting to <code>str</code> first.</p>
<div id="9684a5ea" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ibis.to_sql(t))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>ibis.expr.sql.SQLString</code></pre>
</div>
</div>
<div id="8bade411" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">issubclass</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ibis.to_sql(t)), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre><code>True</code></pre>
</div>
</div>
</section>
<section id="allow-mixing-literals-and-columns-in-ibisarray" class="level3">
<h3 class="anchored" data-anchor-id="allow-mixing-literals-and-columns-in-ibisarray">Allow mixing literals and columns in <code>ibis.array</code></h3>
<p>Note that arrays must still be of a single type.</p>
<div id="6bfcdc09" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">ibis.array([t[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ArrayColumn()       </span>┃
┡━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span>       │
├─────────────────────┤
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'Adelie'</span>, <span style="color: #008000; text-decoration-color: #008000">'hello'</span><span style="font-weight: bold">]</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                   │
└─────────────────────┘
</pre>
</div>
</div>
<div id="bbe78626" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">ibis.array([t[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ArrayColumn() </span>┃
┡━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;int64&gt;</span>  │
├───────────────┤
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>    │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42</span><span style="font-weight: bold">]</span>     │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │
└───────────────┘
</pre>
</div>
</div>
</section>
<section id="array-concat-and-repeat-methods" class="level3">
<h3 class="anchored" data-anchor-id="array-concat-and-repeat-methods">Array <code>concat</code> and <code>repeat</code> methods</h3>
<p>You can still use <code>+</code> or <code>*</code> in typical Python fashion, with new and more explicit <code>concat</code> and <code>repeat</code> methods added in this release.</p>
<div id="5b21260b" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb42-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb42-3"></span>
<span id="cb42-4">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a.concat(b)</span>
<span id="cb42-5">c</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="27">
<div class="ansi-escaped-output">
<pre><span class="ansi-bold">[</span><span class="ansi-cyan-fg ansi-bold">1</span>, <span class="ansi-cyan-fg ansi-bold">2</span>, <span class="ansi-cyan-fg ansi-bold">3</span>, <span class="ansi-cyan-fg ansi-bold">4</span>, <span class="ansi-cyan-fg ansi-bold">5</span><span class="ansi-bold">]</span></pre>
</div>
</div>
</div>
<div id="909aca5a" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb43-2">c</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="28">
<div class="ansi-escaped-output">
<pre><span class="ansi-bold">[</span><span class="ansi-cyan-fg ansi-bold">1</span>, <span class="ansi-cyan-fg ansi-bold">2</span>, <span class="ansi-cyan-fg ansi-bold">3</span>, <span class="ansi-cyan-fg ansi-bold">4</span>, <span class="ansi-cyan-fg ansi-bold">5</span><span class="ansi-bold">]</span></pre>
</div>
</div>
</div>
<div id="22351df0" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">b.repeat(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="29">
<div class="ansi-escaped-output">
<pre><span class="ansi-bold">[</span><span class="ansi-cyan-fg ansi-bold">4</span>, <span class="ansi-cyan-fg ansi-bold">5</span>, <span class="ansi-cyan-fg ansi-bold">4</span>, <span class="ansi-cyan-fg ansi-bold">5</span><span class="ansi-bold">]</span></pre>
</div>
</div>
</div>
<div id="9818ea14" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="30">
<div class="ansi-escaped-output">
<pre><span class="ansi-bold">[</span><span class="ansi-cyan-fg ansi-bold">4</span>, <span class="ansi-cyan-fg ansi-bold">5</span>, <span class="ansi-cyan-fg ansi-bold">4</span>, <span class="ansi-cyan-fg ansi-bold">5</span><span class="ansi-bold">]</span></pre>
</div>
</div>
</div>
</section>
<section id="support-boolean-literals-in-the-join-api" class="level3">
<h3 class="anchored" data-anchor-id="support-boolean-literals-in-the-join-api">Support boolean literals in the join API</h3>
<p>This allows for joins with boolean predicates.</p>
<div id="247f723b" class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">t.join(t, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year   </span>┃<span style="font-weight: bold"> species_right </span>┃<span style="font-weight: bold"> island_right </span>┃<span style="font-weight: bold"> bill_length_mm_right </span>┃<span style="font-weight: bold"> bill_depth_mm_right </span>┃<span style="font-weight: bold"> flipper_length_mm_right </span>┃<span style="font-weight: bold"> body_mass_g_right </span>┃<span style="font-weight: bold"> sex_right </span>┃<span style="font-weight: bold"> year_right </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼────────┼───────────────┼──────────────┼──────────────────────┼─────────────────────┼─────────────────────────┼───────────────────┼───────────┼────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male     </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female   </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female   </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female   </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male     </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female   </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male     </span> │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen   </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #008000; text-decoration-color: #008000">2007      </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴────────┴───────────────┴──────────────┴──────────────────────┴─────────────────────┴─────────────────────────┴───────────────────┴───────────┴────────────┘
</pre>
</div>
</div>
<div id="1540b3c9" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">t.join(t, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year   </span>┃<span style="font-weight: bold"> species_right </span>┃<span style="font-weight: bold"> island_right </span>┃<span style="font-weight: bold"> bill_length_mm_right </span>┃<span style="font-weight: bold"> bill_depth_mm_right </span>┃<span style="font-weight: bold"> flipper_length_mm_right </span>┃<span style="font-weight: bold"> body_mass_g_right </span>┃<span style="font-weight: bold"> sex_right </span>┃<span style="font-weight: bold"> year_right </span>┃
┡━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │
└─────────┴────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴────────┴───────────────┴──────────────┴──────────────────────┴─────────────────────┴─────────────────────────┴───────────────────┴───────────┴────────────┘
</pre>
</div>
</div>
<div id="f6412d33" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">t.join(t, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outer"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year   </span>┃<span style="font-weight: bold"> species_right </span>┃<span style="font-weight: bold"> island_right </span>┃<span style="font-weight: bold"> bill_length_mm_right </span>┃<span style="font-weight: bold"> bill_depth_mm_right </span>┃<span style="font-weight: bold"> flipper_length_mm_right </span>┃<span style="font-weight: bold"> body_mass_g_right </span>┃<span style="font-weight: bold"> sex_right </span>┃<span style="font-weight: bold"> year_right </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼────────┼───────────────┼──────────────┼──────────────────────┼─────────────────────┼─────────────────────────┼───────────────────┼───────────┼────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008000; text-decoration-color: #008000">2007  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>       │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴────────┴───────────────┴──────────────┴──────────────────────┴─────────────────────┴─────────────────────────┴───────────────────┴───────────┴────────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="refactors" class="level2">
<h2 class="anchored" data-anchor-id="refactors">Refactors</h2>
<p>Several internal refactors that shouldn't affect normal usage were made. See <a href="../../release_notes.html">the release notes</a> for more details.</p>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping up</h2>
<p>Ibis v6.1.0 brings exciting enhancements to the library that enable broader ecosystem adoption of Python standards.</p>
<p>As always, try Ibis by <a href="../../install.html">installing</a> and <a href="../../tutorials/getting_started.html">getting started</a>.</p>
<p>If you run into any issues or find support is lacking for your backend, <a href="https://github.com/ibis-project/issues/new/choose">open an issue</a> or <a href="https://github.com/ibis-project/discussions/new/choose">discussion</a> and let us know!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>release</category>
  <category>blog</category>
  <guid>https://ibis-project.org/posts/v6.1.0-release/index.html</guid>
  <pubDate>Wed, 02 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis v6.0.0</title>
  <dc:creator>Ibis team</dc:creator>
  <link>https://ibis-project.org/posts/ibis-version-6.0.0-release/index.html</link>
  <description><![CDATA[ 




<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Ibis 6.0.0 adds the Oracle backend, revamped UDF support, and many new features. This release also includes a number of refactors, bug fixes, and performance improvements. You can view the full changelog in <a href="../../../release_notes.md">the release notes</a>.</p>
<p>If you’re new to Ibis, see <a href="../../../install.qmd">how to install</a> and <a href="../../../tutorials/getting_started.qmd">the getting started tutorial</a>.</p>
<p>To follow along with this blog, ensure you’re on <code>'ibis-framework&gt;=6,&lt;7'</code>. First, we’ll setup Ibis and fetch some sample data to use.</p>
<div id="df4d0de1" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> s</span>
<span id="cb1-3"></span>
<span id="cb1-4">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-5">ibis.options.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">repr</span>.interactive.max_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
</div>
<p>Now, fetch the penguins dataset.</p>
<div id="4967a305" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.examples.penguins.fetch()</span>
<span id="cb2-2">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
</section>
<section id="breaking-changes" class="level2">
<h2 class="anchored" data-anchor-id="breaking-changes">Breaking changes</h2>
<section id="join-duplicate-column-names" class="level3">
<h3 class="anchored" data-anchor-id="join-duplicate-column-names">Join duplicate column names</h3>
<p>Previously when joining tables with duplicate column names, <code>_x</code> and <code>_y</code> suffixes would be appended by default to the left and right tables respectively. You could override this with the <code>suffix</code> argument, which is now removed in favor of <code>lname</code> and <code>rname</code> arguments. The default is changed to no suffix for the left table and <code>_right</code> for the right table.</p>
<div id="63b558d3" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">t.join(t, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>).select(s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> species_right </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │
├─────────┼───────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie       </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │
└─────────┴───────────────┘
</pre>
</div>
</div>
<p>To replicate the previous behavior:</p>
<div id="8870c8c1" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">t.join(t, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, lname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{name}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_x"</span>, rname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{name}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_y"</span>).select(</span>
<span id="cb4-2">    s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb4-3">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species_x </span>┃<span style="font-weight: bold"> species_y </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │
├───────────┼───────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │
└───────────┴───────────┘
</pre>
</div>
</div>
</section>
<section id="count-column-names-no-longer-named-count-automatically" class="level3">
<h3 class="anchored" data-anchor-id="count-column-names-no-longer-named-count-automatically"><code>.count()</code> column names no longer named <code>count</code> automatically</h3>
<p>Columns created with the <code>.count()</code> aggregation are no longer automatically named <code>count</code>. This is to follow convention with other aggregations and reduce the likelihood of name collisions.</p>
<div id="07597e82" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>).agg(ibis._.species.count())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species   </span>┃<span style="font-weight: bold"> Count(species) </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>          │
├───────────┼────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">152</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo   </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">124</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Chinstrap</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">68</span> │
└───────────┴────────────────┘
</pre>
</div>
</div>
<p>To reproduce the old behavior, you can rename the column to <code>count</code> with:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>).agg(count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis._.species.count())</span></code></pre></div>
</section>
</section>
<section id="backends" class="level2">
<h2 class="anchored" data-anchor-id="backends">Backends</h2>
<section id="oracle" class="level3">
<h3 class="anchored" data-anchor-id="oracle">Oracle</h3>
<p>The Oracle backend was added! See the <a href="https://voltrondata.com/resources/ibis-6-0-oracle-backend-support">Voltron Data blog</a> for more details.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"oracle://user:password@host"</span>)</span></code></pre></div>
</section>
<section id="duckdb" class="level3">
<h3 class="anchored" data-anchor-id="duckdb">DuckDB</h3>
<p>There were various DuckDB improvements, but one notable new feature is the ability to attach to a SQLite database through DuckDB. This allows you to run OLAP queries via DuckDB significantly faster on source data from SQLite.</p>
<p>First we’ll create a DuckDB connection and show it has no tables:</p>
<div id="8ba6caec" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">duckdb_con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duckdb://"</span>)</span>
<span id="cb8-2">duckdb_con.list_tables()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>[]</code></pre>
</div>
</div>
<p>Then create a SQLite database with a table:</p>
<div id="7a85bcc6" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">sqlite_con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sqlite://penguins.db"</span>)</span>
<span id="cb10-2">sqlite_con.create_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>, t.to_pandas(), overwrite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750.0</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800.0</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250.0</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p>And attach it:</p>
<div id="e75c55eb" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">duckdb_con.attach_sqlite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./penguins.db"</span>)</span>
<span id="cb11-2">duckdb_con.list_tables()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>['penguins']</code></pre>
</div>
</div>
<section id="motherduck-support" class="level4">
<h4 class="anchored" data-anchor-id="motherduck-support">MotherDuck support!</h4>
<p>MotherDuck launched recently and is now supported in Ibis!</p>
<p>Simply connect with the DuckDB backend using <code>md:</code> or <code>motherduck:</code> as the database.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duckdb://md:"</span>)</span></code></pre></div>
</section>
</section>
<section id="polars" class="level3">
<h3 class="anchored" data-anchor-id="polars">Polars</h3>
<p>The Polars backend received many improvements from community members <a href="https://github.com/alexander-beedie"><span class="citation" data-cites="alexander-beedie">@alexander-beedie</span></a> and <a href="https://github.com/mesejo"><span class="citation" data-cites="mesejo">@mesejo</span></a>, with plenty of operations now supported.</p>
<p>Some additions in this version include:</p>
<ul>
<li><code>any</code> and <code>all</code> reductions</li>
<li><code>argmin</code> and <code>argmax</code></li>
<li><code>identical_to</code></li>
<li><code>corr</code></li>
<li>support for <code>.sql()</code></li>
</ul>
<p>Give it a try by setting your backend to Polars with <code>ibis.set_backend("polars")</code>.</p>
</section>
</section>
<section id="functionality" class="level2">
<h2 class="anchored" data-anchor-id="functionality">Functionality</h2>
<section id="udfs" class="level3">
<h3 class="anchored" data-anchor-id="udfs">UDFs</h3>
<p>User-defined functions (UDFs) have been revamped with a new syntax and new backends added. To get started, import the decorator:</p>
<div id="c85c3821" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> udf</span></code></pre></div>
</div>
<p>Define a UDF:</p>
<div id="1cf149ea" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@udf.scalar.python</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> num_vowels(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, include_y: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb15-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(s.lower().count, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeiou"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> include_y)))</span></code></pre></div>
</div>
<p>And call it:</p>
<div id="158fdd6a" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">num_vowels(t[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].species.execute()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg ansi-bold">4</span></pre>
</div>
</div>
</div>
<div id="aab3553e" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">t.group_by(num_vowels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_vowels(t.species)).agg(</span>
<span id="cb17-2">    num_vowels_island_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>t.island.count()</span>
<span id="cb17-3">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> num_vowels </span>┃<span style="font-weight: bold"> num_vowels_island_count </span>┃
┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                   │
├────────────┼─────────────────────────┤
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">152</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">124</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">68</span> │
└────────────┴─────────────────────────┘
</pre>
</div>
</div>
<div id="9307cb71" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">t.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(num_vowels(t.species) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">46.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">13.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">211</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4500</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5700</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">48.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">210</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
</section>
<section id="to_torch-api" class="level3">
<h3 class="anchored" data-anchor-id="to_torch-api"><code>to_torch</code> API</h3>
<p>A new <code>to_torch</code> output method was added. Combined with UDFs, this brings powerful ML capabilities into Ibis. See a complete example in the <a href="../torch">Ibis + DuckDB + PyTorch blog</a>.</p>
<div id="33e48456" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb19-2"></span>
<span id="cb19-3">torch.set_printoptions(threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
<div id="867cc0d3" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">t.select(s.numeric()).to_torch()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>{'bill_length_mm': tensor([39.1000, 39.5000, 40.3000,  ..., 49.6000, 50.8000, 50.2000],
        dtype=torch.float64),
 'bill_depth_mm': tensor([18.7000, 17.4000, 18.0000,  ..., 18.2000, 19.0000, 18.7000],
        dtype=torch.float64),
 'flipper_length_mm': tensor([181, 186, 195,  ..., 193, 210, 198]),
 'body_mass_g': tensor([3750, 3800, 3250,  ..., 3775, 4100, 3775]),
 'year': tensor([2007, 2007, 2007,  ..., 2009, 2009, 2009])}</code></pre>
</div>
</div>
</section>
<section id="array-zip-support" class="level3">
<h3 class="anchored" data-anchor-id="array-zip-support">Array zip support</h3>
<p>A new zip operation was added on array data types, allowing you to zip together multiple arrays.</p>
<div id="f0880cfc" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">arrays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.memtable(</span>
<span id="cb22-2">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numbers"</span>: [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strings"</span>: [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>]]}</span>
<span id="cb22-3">)</span>
<span id="cb22-4">arrays</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> numbers      </span>┃<span style="font-weight: bold"> strings       </span>┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;int64&gt;</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span> │
├──────────────┼───────────────┤
│ <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span><span style="font-weight: bold">]</span>       │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'a'</span>, <span style="color: #008000; text-decoration-color: #008000">'c'</span><span style="font-weight: bold">]</span>    │
│ <span style="font-weight: bold">[]</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>         │ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'e'</span><span style="font-weight: bold">]</span>         │
└──────────────┴───────────────┘
</pre>
</div>
</div>
<div id="cac84c5c" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">arrays.numbers.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(arrays.strings)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ArrayZip()                           </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;struct&lt;f1: int64, f2: string&gt;&gt;</span> │
├──────────────────────────────────────┤
│ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}]</span>                       │
│ <span style="font-weight: bold">[]</span>                                   │
│ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}]</span>                              │
└──────────────────────────────────────┘
</pre>
</div>
</div>
<div id="4e961ab3" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">arrays.numbers.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(arrays.strings).unnest()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ArrayZip()                    </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">struct&lt;f1: int64, f2: string&gt;</span> │
├───────────────────────────────┤
│ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'f1'</span>: <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3</span>, <span style="color: #008000; text-decoration-color: #008000">'f2'</span>: <span style="color: #008000; text-decoration-color: #008000">'a'</span><span style="font-weight: bold">}</span>          │
│ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'f1'</span>: <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span>, <span style="color: #008000; text-decoration-color: #008000">'f2'</span>: <span style="color: #008000; text-decoration-color: #008000">'c'</span><span style="font-weight: bold">}</span>          │
│ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'f1'</span>: <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, <span style="color: #008000; text-decoration-color: #008000">'f2'</span>: <span style="color: #008000; text-decoration-color: #008000">'e'</span><span style="font-weight: bold">}</span>       │
└───────────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="try-cast-support" class="level3">
<h3 class="anchored" data-anchor-id="try-cast-support">Try cast support</h3>
<p>A new <code>try_cast()</code> operation was added that allows you to cast a column to a type, but return null if the cast fails.</p>
<div id="d8e748e5" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">ibis.literal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>).try_cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"int"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="19">
<div class="ansi-escaped-output">
<pre><span style="font-style:italic" class="ansi-magenta-fg">None</span></pre>
</div>
</div>
</div>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">ibis.literal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).try_cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float"</span>)</span></code></pre></div>
</section>
<section id="dataframe__-support" class="level3">
<h3 class="anchored" data-anchor-id="dataframe__-support"><code>__dataframe__</code> support</h3>
<p>Ibis now supports the <a href="https://data-apis.org/dataframe-protocol/latest/index.html">dataframe interchange protocol</a>, allowing Ibis expressions to be used in any framework that supports it. Adoption of the protocol is still in its early stages, but we expect this to enable Ibis to be used in many new places going forward.</p>
<div id="418f5bdb" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">t.__dataframe__()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>&lt;ibis.expr.types.dataframe_interchange.IbisDataFrame at 0x7f7bf415d9c0&gt;</code></pre>
</div>
</div>
</section>
<section id="streamlit-experimental-connection-interface" class="level3">
<h3 class="anchored" data-anchor-id="streamlit-experimental-connection-interface">Streamlit experimental connection interface</h3>
<p>A new experimental connection interface was added for Streamlit. See <a href="../../../how-to/visualization/streamlit.qmd">how-to write a Streamlit app with Ibis</a>.</p>
</section>
<section id="sql-dialect-parameter" class="level3">
<h3 class="anchored" data-anchor-id="sql-dialect-parameter">SQL dialect parameter</h3>
<p>In SQL methods, you can now pass the <code>dialect</code> parameter to specify the SQL dialect used. This leverages <a href="https://github.com/tobymao/sqlglot"><code>sqlglot</code></a> under the hood.</p>
<div id="da81bb20" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">bigquery_sql <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb29-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb29-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  t0.`species`,</span></span>
<span id="cb29-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  COUNT(t0.`species`) AS `count`,</span></span>
<span id="cb29-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  CAST(COUNT(DISTINCT t0.`island`) AS FLOAT64) AS `islands`</span></span>
<span id="cb29-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">FROM penguins AS t0</span></span>
<span id="cb29-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GROUP BY</span></span>
<span id="cb29-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  1</span></span>
<span id="cb29-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb29-10"></span>
<span id="cb29-11">duckdb_con.sql(bigquery_sql, dialect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bigquery"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━┓
┃<span style="font-weight: bold"> species   </span>┃<span style="font-weight: bold"> count </span>┃<span style="font-weight: bold"> islands </span>┃
┡━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span> │
├───────────┼───────┼─────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie   </span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">152</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.0</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo   </span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">124</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Chinstrap</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">68</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span> │
└───────────┴───────┴─────────┘
</pre>
</div>
</div>
</section>
<section id="delta-lake-readwrite-support-for-some-backends" class="level3">
<h3 class="anchored" data-anchor-id="delta-lake-readwrite-support-for-some-backends">Delta Lake read/write support for some backends</h3>
<p><a href="https://delta-io">Delta Lake tables</a> are supported through the <a href="https://github.com/delta-io/delta-rs"><code>deltalake</code> package</a> with <code>read_delta()</code> implemented for DuckDB, Polars, and DataFusion.</p>
<div id="202f5c55" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">t.to_delta(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins.delta"</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overwrite"</span>)</span></code></pre></div>
</div>
<div id="4e3e2b24" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.read_delta(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins.delta"</span>)</span>
<span id="cb31-2">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
</section>
<section id="selectors" class="level3">
<h3 class="anchored" data-anchor-id="selectors">Selectors</h3>
<p>Some minor selectors improvements were added including the ability to use abstract type names and lists of strings.</p>
<div id="4b1a65d9" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">t.select(s.of_type(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> sex    </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │
├─────────┼───────────┼────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │
└─────────┴───────────┴────────┘
</pre>
</div>
</div>
<div id="7a7f62d3" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">t.agg(s.across([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>], ibis._.count()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island </span>┃
┡━━━━━━━━━╇━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>  │
├─────────┼────────┤
│     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">344</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">344</span> │
└─────────┴────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="refactors" class="level2">
<h2 class="anchored" data-anchor-id="refactors">Refactors</h2>
<p>Several internal refactors that shouldn’t affect normal usage were made. See <a href="../../release_notes.html">the release notes</a> for more details.</p>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping up</h2>
<p>Ibis v6.0.0 brings exciting new features that enable future support for ML and streaming workloads.</p>
<p>As always, try Ibis by <a href="../../install.html">installing</a> and <a href="../../tutorials/getting_started.html">getting started</a>.</p>
<p>If you run into any issues or find support is lacking for your backend, <a href="https://github.com/ibis-project/issues/new/choose">open an issue</a> or <a href="https://github.com/ibis-project/discussions/new/choose">discussion</a> and let us know!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>release</category>
  <category>blog</category>
  <guid>https://ibis-project.org/posts/ibis-version-6.0.0-release/index.html</guid>
  <pubDate>Mon, 03 Jul 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis on 🔥: Supercharge Your Workflow with DuckDB and PyTorch</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/torch/index.html</link>
  <description><![CDATA[ 




<p>In this blog post we show how to leverage ecosystem tools to build an end-to-end ML pipeline using Ibis, DuckDB and PyTorch.</p>
<p>Check out the live stream of this notebook below!</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/L4_deAdStKs" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Let’s get started!</p>
<div id="00698153" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis.expr.datatypes <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dt</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _, selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> s, udf</span>
<span id="cb1-5"></span>
<span id="cb1-6">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
<section id="define-a-function-to-clean-inputs" class="level2">
<h2 class="anchored" data-anchor-id="define-a-function-to-clean-inputs">Define a Function to Clean Inputs</h2>
<p>Let’s define a function to clean the data in a few different ways:</p>
<ul>
<li>Remove outliers (Z-score based)</li>
<li>Remove negative trip distances and negative fare amounts</li>
<li>Cast inputs to <code>float32</code>, since that’s what PyTorch wants</li>
</ul>
<p>We use a function here to ensure that we can run the same code on the test data set before prediction.</p>
<div id="958d91ec" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> clean_input(path):</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (</span>
<span id="cb2-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load parquet</span></span>
<span id="cb2-4">        ibis.read_parquet(path)</span>
<span id="cb2-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute fare_amount_zscore and trip_distance_zscore</span></span>
<span id="cb2-6">        .mutate(s.across([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fare_amount"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trip_distance"</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(zscore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std())))</span>
<span id="cb2-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter out negative trip distance and bizarre transactions</span></span>
<span id="cb2-8">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>([_.trip_distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, _.fare_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>])</span>
<span id="cb2-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep values that within 2 standard deviations</span></span>
<span id="cb2-10">        .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(s.if_all(s.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_zscore"</span>), _.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop columns that aren't necessary for further analysis</span></span>
<span id="cb2-12">        .drop(s.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_zscore"</span>))</span>
<span id="cb2-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select the columns we care about</span></span>
<span id="cb2-14">        .select(s.across([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fare_amount"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trip_distance"</span>], _.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float32"</span>)))</span>
<span id="cb2-15">    )</span></code></pre></div>
</div>
<div id="859cdcf4" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">training_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clean_input(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://storage.googleapis.com/ibis-tutorial-data/nyctaxi/yellow/yellow_tripdata_2016-01.parquet"</span>)</span>
<span id="cb3-2">training_data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> trip_distance </span>┃<span style="font-weight: bold"> fare_amount </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>     │
├───────────────┼─────────────┤
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.20</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14.0</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.00</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.5</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.90</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.0</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.80</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5.0</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.80</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.0</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.30</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.0</span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">13.80</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">43.0</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.46</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.0</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.83</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5.5</span> │
│          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.87</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.0</span> │
│             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴─────────────┘
</pre>
</div>
</div>
</section>
<section id="execute-the-query-and-convert-to-torch-tensors" class="level2">
<h2 class="anchored" data-anchor-id="execute-the-query-and-convert-to-torch-tensors">Execute the Query and Convert to Torch Tensors</h2>
<p>New in Ibis 6.0 is the <code>to_torch</code> method, which executes a query and returns the results as a dictionary of <code>torch.Tensor</code>s keyed by column names.</p>
<p>We’ll use that to get our input data for training.</p>
<div id="0e01d8f2" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb4-2"></span>
<span id="cb4-3">torch_training_data: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, torch.Tensor] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> training_data.to_torch()</span>
<span id="cb4-4">torch_training_data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>{'trip_distance': tensor([3.2000, 1.0000, 0.9000,  ..., 5.6300, 0.7700, 1.2600]),
 'fare_amount': tensor([14.0000,  9.5000,  6.0000,  ..., 18.5000,  5.0000,  6.5000])}</code></pre>
</div>
</div>
</section>
<section id="train-the-model" class="level2">
<h2 class="anchored" data-anchor-id="train-the-model">Train the Model</h2>
<p>Let’s assume for now we don’t have access to the model code. Maybe your co-worker wrote the model or it’s part of an API that you don’t control. Either way, it’s a black box to us.</p>
<p>The API looks like this:</p>
<div id="4345f20d" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyarrow</span>
<span id="cb6-2"></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PredictCabFare:</span>
<span id="cb6-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, data: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, torch.Tensor]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb6-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Initialize the model with training data."""</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> train(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb6-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Train the model."""</span></span>
<span id="cb6-10"></span>
<span id="cb6-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>: pyarrow.ChunkedArray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pyarrow.Array:</span>
<span id="cb6-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Invoke the trained model on unseen input."""</span></span></code></pre></div>
</div>
<div id="f1f6ccd5" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PredictCabFare</span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PredictCabFare(torch_training_data)</span>
<span id="cb7-5">model.train()</span></code></pre></div>
</div>
</section>
<section id="define-an-ibis-udf-that-predicts-fares" class="level2">
<h2 class="anchored" data-anchor-id="define-an-ibis-udf-that-predicts-fares">Define an Ibis UDF that predicts fares</h2>
<p>Now we get to the meaty part: defining an Ibis UDF (user-defined function) that invokes our model on unseen data!</p>
<div id="190a3ea6" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis.expr.operations <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> udf</span>
<span id="cb8-2"></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@udf.scalar.pyarrow</span></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_fare(distance: dt.float64) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> dt.float32:</span>
<span id="cb8-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> model(distance)</span></code></pre></div>
</div>
<p>Let’s run our UDF</p>
<div id="ce8225d3" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb9-2">    clean_input(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://storage.googleapis.com/ibis-tutorial-data/nyctaxi/yellow/yellow_tripdata_2016-02.parquet"</span>)</span>
<span id="cb9-3">    .limit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10_000</span>)</span>
<span id="cb9-4">    .mutate(predicted_fare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> t: predict_fare(t.trip_distance.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float32"</span>)))</span>
<span id="cb9-5">)</span>
<span id="cb9-6">prediction</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> trip_distance </span>┃<span style="font-weight: bold"> fare_amount </span>┃<span style="font-weight: bold"> predicted_fare </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>        │
├───────────────┼─────────────┼────────────────┤
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.1</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29.085516</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.3</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.5</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12.626410</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.5</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.0</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.680637</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.4</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">26.5</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">24.261295</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.6</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.5</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.802191</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.8</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14.045299</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.1</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.0</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.383303</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.8</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">22.558630</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.9</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.491301</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.2</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.5</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.667080</span> │
│             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴─────────────┴────────────────┘
</pre>
</div>
</div>
</section>
<section id="prepare-the-data-for-plotting" class="level2">
<h2 class="anchored" data-anchor-id="prepare-the-data-for-plotting">Prepare the Data for Plotting</h2>
<p>Here we <a href="https://r4ds.had.co.nz/tidy-data.html">tidy up our data</a> to make it easier to adjust plotting style based on the data.</p>
<p>In this case, we’re interested in visually distinguishing the model’s <strong>predicted</strong> fare amount from the <strong>actual</strong> fare amount so we pivot the data into a <a href="https://r4ds.had.co.nz/tidy-data.html#longer">longer form</a> which adds a string column <code>metric</code> that indicates the kind of fare a given row contains.</p>
<div id="e4794df0" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">pivoted_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prediction.pivot_longer(</span>
<span id="cb10-2">    s.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fare"</span>),</span>
<span id="cb10-3">    values_to<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fare"</span>,</span>
<span id="cb10-4">    names_to<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span>,</span>
<span id="cb10-5">)</span>
<span id="cb10-6">pivoted_prediction</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃<span style="font-weight: bold"> trip_distance </span>┃<span style="font-weight: bold"> metric         </span>┃<span style="font-weight: bold"> fare      </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>   │
├───────────────┼────────────────┼───────────┤
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.1</span> │ <span style="color: #008000; text-decoration-color: #008000">fare_amount   </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27.000000</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.1</span> │ <span style="color: #008000; text-decoration-color: #008000">predicted_fare</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29.085516</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.3</span> │ <span style="color: #008000; text-decoration-color: #008000">fare_amount   </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.500000</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.3</span> │ <span style="color: #008000; text-decoration-color: #008000">predicted_fare</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12.626410</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.5</span> │ <span style="color: #008000; text-decoration-color: #008000">fare_amount   </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.000000</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.5</span> │ <span style="color: #008000; text-decoration-color: #008000">predicted_fare</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.680637</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.4</span> │ <span style="color: #008000; text-decoration-color: #008000">fare_amount   </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">26.500000</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.4</span> │ <span style="color: #008000; text-decoration-color: #008000">predicted_fare</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">24.261295</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.6</span> │ <span style="color: #008000; text-decoration-color: #008000">fare_amount   </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.500000</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.6</span> │ <span style="color: #008000; text-decoration-color: #008000">predicted_fare</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7.802191</span> │
│             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>              │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴────────────────┴───────────┘
</pre>
</div>
</div>
</section>
<section id="plot-the-results" class="level2">
<h2 class="anchored" data-anchor-id="plot-the-results">Plot the Results</h2>
<p>There are a bunch of strange and interesting data points and observations that don’t have an obvious explanation:</p>
<ul>
<li>There seem to be a good number of \$50-ish rides regardless of distance. What’s going on there?</li>
<li>What’s going on with the extreme outliers? For instance, the 50 mile ride that only cost about \$60 or the 25 mile ride that cost about \$140.</li>
</ul>
<div id="eb2af3ac" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> plotnine <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> aes, ggtitle, ggplot, geom_point, xlab, ylab</span>
<span id="cb11-2"></span>
<span id="cb11-3">(</span>
<span id="cb11-4">    ggplot(pivoted_prediction, aes(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trip_distance"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fare"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span>))</span>
<span id="cb11-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_point()</span>
<span id="cb11-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> xlab(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Trip Distance"</span>)</span>
<span id="cb11-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ylab(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fare"</span>)</span>
<span id="cb11-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ggtitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Fare vs Actual Fare by Trip Distance"</span>)</span>
<span id="cb11-9">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://ibis-project.org/posts/torch/index_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>&lt;Figure Size: (640 x 480)&gt;</code></pre>
</div>
</div>
</section>
<section id="appendix-model.py" class="level1">
<h1>Appendix: <code>model.py</code></h1>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Linear regression model for predicting cab fares using PyTorch.</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Adapted from https://gist.github.com/pdet/e8d38734232c08e6c15aba79b4eb8368#file-taxi_prediction_example-py.</span></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb13-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> __future__ <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> annotations</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyarrow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pa</span>
<span id="cb13-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb13-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb13-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nn</span>
<span id="cb13-11"></span>
<span id="cb13-12"></span>
<span id="cb13-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> LinearRegression(nn.Module):</span>
<span id="cb13-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_dim, output_dim):</span>
<span id="cb13-15">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb13-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.linear <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(input_dim, output_dim)</span>
<span id="cb13-17"></span>
<span id="cb13-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, distances):</span>
<span id="cb13-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.linear(distances)</span>
<span id="cb13-20"></span>
<span id="cb13-21"></span>
<span id="cb13-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PredictCabFare:</span>
<span id="cb13-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, data, learning_rate: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, epochs: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb13-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the input and output dimensions</span></span>
<span id="cb13-25">        input_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-26">        output_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-27"></span>
<span id="cb13-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a linear regression model instance</span></span>
<span id="cb13-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data</span>
<span id="cb13-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression(input_dim, output_dim)</span>
<span id="cb13-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learning_rate</span>
<span id="cb13-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> epochs</span>
<span id="cb13-33"></span>
<span id="cb13-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> train(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb13-35">        distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trip_distance"</span>].reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-36">        fares <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fare_amount"</span>].reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-37"></span>
<span id="cb13-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the loss function</span></span>
<span id="cb13-39">        criterion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.MSELoss()</span>
<span id="cb13-40"></span>
<span id="cb13-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the optimizer</span></span>
<span id="cb13-42">        optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.SGD(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.learning_rate)</span>
<span id="cb13-43"></span>
<span id="cb13-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train the model</span></span>
<span id="cb13-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm.trange(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.epochs):</span>
<span id="cb13-46">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forward pass</span></span>
<span id="cb13-47">            y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model(distances)</span>
<span id="cb13-48"></span>
<span id="cb13-49">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute loss</span></span>
<span id="cb13-50">            loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> criterion(y_pred, fares)</span>
<span id="cb13-51"></span>
<span id="cb13-52">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Backward pass and optimize</span></span>
<span id="cb13-53">            optimizer.zero_grad()</span>
<span id="cb13-54">            loss.backward()</span>
<span id="cb13-55">            optimizer.step()</span>
<span id="cb13-56"></span>
<span id="cb13-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>):</span>
<span id="cb13-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb13-59">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>)</span>
<span id="cb13-60"></span>
<span id="cb13-61">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>: pa.ChunkedArray):</span>
<span id="cb13-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input to numpy so it can be fed to the model</span></span>
<span id="cb13-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb13-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .copy() to avoid the warning about undefined behavior from torch</span></span>
<span id="cb13-65">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.from_numpy(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>.to_numpy().copy())[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb13-66">        predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.predict(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>).ravel()</span>
<span id="cb13-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pa.array(predicted.numpy())</span></code></pre></div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>case study</category>
  <category>machine learning</category>
  <category>ecosystem</category>
  <category>new feature</category>
  <guid>https://ibis-project.org/posts/torch/index.html</guid>
  <pubDate>Tue, 27 Jun 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring campaign finance data</title>
  <dc:creator>Nick Crews</dc:creator>
  <link>https://ibis-project.org/posts/campaign-finance/index.html</link>
  <description><![CDATA[ 




<p>Hi! My name is <a href="https://www.linkedin.com/in/nicholas-b-crews/">Nick Crews</a>, and I’m a data engineer that looks at public campaign finance data.</p>
<p>In this post, I’ll walk through how I use Ibis to explore public campaign contribution data from the Federal Election Commission (FEC). We’ll do some loading, cleaning, featurizing, and visualization. There will be filtering, sorting, grouping, and aggregation.</p>
<section id="downloading-the-data" class="level2">
<h2 class="anchored" data-anchor-id="downloading-the-data">Downloading The Data</h2>
<div id="02d63441" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> zipfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ZipFile</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlretrieve</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download and unzip the 2018 individual contributions data</span></span>
<span id="cb1-6">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cg-519a459a-0ea3-42c2-b7bc-fa1143481f74.s3-us-gov-west-1.amazonaws.com/bulk-downloads/2018/indiv18.zip"</span></span>
<span id="cb1-7">zip_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"indiv18.zip"</span>)</span>
<span id="cb1-8">csv_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"indiv18.csv"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> zip_path.exists():</span>
<span id="cb1-11">    urlretrieve(url, zip_path)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> csv_path.exists():</span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> ZipFile(zip_path) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> zip_file, csv_path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> csv_file:</span>
<span id="cb1-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> zip_file.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"itcont.txt"</span>):</span>
<span id="cb1-16">            csv_file.write(line.decode())</span></code></pre></div>
</div>
</section>
<section id="loading-the-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-data">Loading the data</h2>
<p>Now that we have our raw data in a .csv format, let’s load it into Ibis, using the duckdb backend.</p>
<p>Note that a 4.3 GB .csv would be near the limit of what pandas could handle on my laptop with 16GB of RAM. In pandas, typically every time you perform a transformation on the data, a copy of the data is made. I could only do a few transformations before I ran out of memory.</p>
<p>With Ibis, this problem is solved in two different ways.</p>
<p>First, because they are designed to work with very large datasets, many (all?) SQL backends support out of core operations. The data lives on disk, and are only loaded in a streaming fashion when needed, and then written back to disk as the operation is performed.</p>
<p>Second, unless you explicitly ask for it, Ibis makes use of lazy evaluation. This means that when you ask for a result, the result is not persisted in memory. Only the original source data is persisted. Everything else is derived from this on the fly.</p>
<div id="83a871f2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb2-3"></span>
<span id="cb2-4">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The raw .csv file doesn't have column names, so we will add them in the next step.</span></span>
<span id="cb2-7">raw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.read_csv(csv_path)</span>
<span id="cb2-8">raw</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> C00401224 </span>┃<span style="font-weight: bold"> A      </span>┃<span style="font-weight: bold"> M6     </span>┃<span style="font-weight: bold"> P      </span>┃<span style="font-weight: bold"> 201804059101866001 </span>┃<span style="font-weight: bold"> 24T    </span>┃<span style="font-weight: bold"> IND    </span>┃<span style="font-weight: bold"> STOUFFER, LEIGH   </span>┃<span style="font-weight: bold"> AMSTELVEEN   </span>┃<span style="font-weight: bold"> ZZ     </span>┃<span style="font-weight: bold"> 1187RC    </span>┃<span style="font-weight: bold"> MYSELF            </span>┃<span style="font-weight: bold"> SELF EMPLOYED           </span>┃<span style="font-weight: bold"> 05172017 </span>┃<span style="font-weight: bold"> 10    </span>┃<span style="font-weight: bold"> C00458000 </span>┃<span style="font-weight: bold"> SA11AI_81445687 </span>┃<span style="font-weight: bold"> 1217152 </span>┃<span style="font-weight: bold"> column18 </span>┃<span style="font-weight: bold"> EARMARKED FOR PROGRESSIVE CHANGE CAMPAIGN COMMITTEE (C00458000) </span>┃<span style="font-weight: bold"> 4050820181544765358 </span>┃
┡━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>               │
├───────────┼────────┼────────┼────────┼────────────────────┼────────┼────────┼───────────────────┼──────────────┼────────┼───────────┼───────────────────┼─────────────────────────┼──────────┼───────┼───────────┼─────────────────┼─────────┼──────────┼─────────────────────────────────────────────────────────────────┼─────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101867748</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STRAWS, JOYCE    </span> │ <span style="color: #008000; text-decoration-color: #008000">OCOEE       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">34761    </span> │ <span style="color: #008000; text-decoration-color: #008000">SILVERSEA CRUISES</span> │ <span style="color: #008000; text-decoration-color: #008000">RESERVATIONS SUPERVISOR</span> │ <span style="color: #008000; text-decoration-color: #008000">05182017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81592336</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544770597</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101867748</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STRAWS, JOYCE    </span> │ <span style="color: #008000; text-decoration-color: #008000">OCOEE       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">34761    </span> │ <span style="color: #008000; text-decoration-color: #008000">SILVERSEA CRUISES</span> │ <span style="color: #008000; text-decoration-color: #008000">RESERVATIONS SUPERVISOR</span> │ <span style="color: #008000; text-decoration-color: #008000">05192017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81627562</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544770598</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101865942</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STOTT, JIM       </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">039020760</span> │ <span style="color: #008000; text-decoration-color: #008000">NONE             </span> │ <span style="color: #008000; text-decoration-color: #008000">NONE                   </span> │ <span style="color: #008000; text-decoration-color: #008000">05132017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81047921</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544765179</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101865942</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STOTT, JIM       </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">039020760</span> │ <span style="color: #008000; text-decoration-color: #008000">NONE             </span> │ <span style="color: #008000; text-decoration-color: #008000">NONE                   </span> │ <span style="color: #008000; text-decoration-color: #008000">05152017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81209209</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544765180</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101865942</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STOTT, JIM       </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">039020760</span> │ <span style="color: #008000; text-decoration-color: #008000">NONE             </span> │ <span style="color: #008000; text-decoration-color: #008000">NONE                   </span> │ <span style="color: #008000; text-decoration-color: #008000">05192017</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81605223</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544765181</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101865943</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STOTT, JIM       </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">039020760</span> │ <span style="color: #008000; text-decoration-color: #008000">NONE             </span> │ <span style="color: #008000; text-decoration-color: #008000">NONE                   </span> │ <span style="color: #008000; text-decoration-color: #008000">05242017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_82200022</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544765182</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101865943</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STOTT, JIM       </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">03902    </span> │ <span style="color: #008000; text-decoration-color: #008000">NOT EMPLOYED     </span> │ <span style="color: #008000; text-decoration-color: #008000">NOT EMPLOYED           </span> │ <span style="color: #008000; text-decoration-color: #008000">05292017</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">100</span> │ <span style="color: #008000; text-decoration-color: #008000">C00213512</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_82589834</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR NANCY PELOSI FOR CONGRESS (C00213512)            </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544765184</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101865944</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STOTT, JIM       </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">039020760</span> │ <span style="color: #008000; text-decoration-color: #008000">NONE             </span> │ <span style="color: #008000; text-decoration-color: #008000">NONE                   </span> │ <span style="color: #008000; text-decoration-color: #008000">05302017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_82643727</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544765185</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101867050</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STRANGE, WINIFRED</span> │ <span style="color: #008000; text-decoration-color: #008000">ANNA MSRIA  </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">34216    </span> │ <span style="color: #008000; text-decoration-color: #008000">NOT EMPLOYED     </span> │ <span style="color: #008000; text-decoration-color: #008000">NOT EMPLOYED           </span> │ <span style="color: #008000; text-decoration-color: #008000">05162017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81325918</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544768505</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">A     </span> │ <span style="color: #008000; text-decoration-color: #008000">M6    </span> │ <span style="color: #008000; text-decoration-color: #008000">P     </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201804059101867051</span> │ <span style="color: #008000; text-decoration-color: #008000">24T   </span> │ <span style="color: #008000; text-decoration-color: #008000">IND   </span> │ <span style="color: #008000; text-decoration-color: #008000">STRANGE, WINIFRED</span> │ <span style="color: #008000; text-decoration-color: #008000">ANNA MSRIA  </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">34216    </span> │ <span style="color: #008000; text-decoration-color: #008000">NOT EMPLOYED     </span> │ <span style="color: #008000; text-decoration-color: #008000">NOT EMPLOYED           </span> │ <span style="color: #008000; text-decoration-color: #008000">05232017</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │ <span style="color: #008000; text-decoration-color: #008000">C00000935</span> │ <span style="color: #008000; text-decoration-color: #008000">SA11AI_81991189</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1217152</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>     │ <span style="color: #008000; text-decoration-color: #008000">EARMARKED FOR DCCC (C00000935)                                 </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4050820181544768506</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │                  <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>        │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                               │                   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────┴────────┴────────┴────────┴────────────────────┴────────┴────────┴───────────────────┴──────────────┴────────┴───────────┴───────────────────┴─────────────────────────┴──────────┴───────┴───────────┴─────────────────┴─────────┴──────────┴─────────────────────────────────────────────────────────────────┴─────────────────────┘
</pre>
</div>
</div>
<div id="d2a81789" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a more comprehesive description of the columns and their meaning, see</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://www.fec.gov/campaign-finance-data/contributions-individuals-file-description/</span></span>
<span id="cb3-3">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_ID"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Committee ID</span></span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AMNDT_IND"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Amendment indicator. A = amendment, N = new, T = termination</span></span>
<span id="cb3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RPT_TP"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Report type (monthly, quarterly, etc)</span></span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_PGI"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Primary/general indicator</span></span>
<span id="cb3-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IMAGE_NUM"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Image number</span></span>
<span id="cb3-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_TP"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transaction type</span></span>
<span id="cb3-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENTITY_TP"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Entity type</span></span>
<span id="cb3-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAME"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributor name</span></span>
<span id="cb3-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CITY"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributor city</span></span>
<span id="cb3-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATE"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributor state</span></span>
<span id="cb3-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZIP_CODE"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributor zip code</span></span>
<span id="cb3-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPLOYER"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributor employer</span></span>
<span id="cb3-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OCCUPATION"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributor occupation</span></span>
<span id="cb3-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_DT"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transaction date</span></span>
<span id="cb3-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_AMT"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transaction amount</span></span>
<span id="cb3-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Other ID. For individual contributions will be null. For contributions from</span></span>
<span id="cb3-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># other FEC committees, will be the committee ID of the other committee.</span></span>
<span id="cb3-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OTHER_ID"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,</span>
<span id="cb3-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRAN_ID"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transaction ID</span></span>
<span id="cb3-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FILE_NUM"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># File number, unique number assigned to each report filed with the FEC</span></span>
<span id="cb3-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MEMO_CD"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Memo code</span></span>
<span id="cb3-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MEMO_TEXT"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Memo text</span></span>
<span id="cb3-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUB_ID"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Submission ID. Unique number assigned to each transaction.</span></span>
<span id="cb3-27">}</span>
<span id="cb3-28"></span>
<span id="cb3-29">renaming <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {old: new <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> old, new <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(raw.columns, columns.keys())}</span>
<span id="cb3-30">to_keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [k <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> columns.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keep"</span>]</span>
<span id="cb3-31">kept <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> raw.relabel(renaming)[to_keep]</span>
<span id="cb3-32">kept</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> CMTE_ID   </span>┃<span style="font-weight: bold"> TRANSACTION_PGI </span>┃<span style="font-weight: bold"> ENTITY_TP </span>┃<span style="font-weight: bold"> CITY         </span>┃<span style="font-weight: bold"> STATE  </span>┃<span style="font-weight: bold"> TRANSACTION_DT </span>┃<span style="font-weight: bold"> TRANSACTION_AMT </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │
├───────────┼─────────────────┼───────────┼──────────────┼────────┼────────────────┼─────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">OCOEE       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05182017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">OCOEE       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05192017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05132017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05152017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05192017      </span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05242017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05292017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">100</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05302017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">ANNA MSRIA  </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05162017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">ANNA MSRIA  </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05232017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>              │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────┴─────────────────┴───────────┴──────────────┴────────┴────────────────┴─────────────────┘
</pre>
</div>
</div>
<div id="1e6d16fe" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 21 million rows</span></span>
<span id="cb4-2">kept.count()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg ansi-bold">21730730</span></pre>
</div>
</div>
</div>
<p>Huh, what’s up with those timings? Previewing the head only took a fraction of a second, but finding the number of rows took 10 seconds.</p>
<p>That’s because duckdb is scanning the .csv file on the fly every time we access it. So we only have to read the first few lines to get that preview, but we have to read the whole file to get the number of rows.</p>
<p>Note that this isn’t a feature of Ibis, but a feature of Duckdb. This what I think is one of the strengths of Ibis: Ibis itself doesn’t have to implement any of the optimimizations or features of the backends. Those backends can focus on what they do best, and Ibis can get those things for free.</p>
<p>So, let’s tell duckdb to actually read in the file to its native format so later accesses will be faster. This will be a ~20 seconds that we’ll only have to pay once.</p>
<div id="185a2d89" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">kept <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kept.cache()</span>
<span id="cb5-2">kept</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> CMTE_ID   </span>┃<span style="font-weight: bold"> TRANSACTION_PGI </span>┃<span style="font-weight: bold"> ENTITY_TP </span>┃<span style="font-weight: bold"> CITY         </span>┃<span style="font-weight: bold"> STATE  </span>┃<span style="font-weight: bold"> TRANSACTION_DT </span>┃<span style="font-weight: bold"> TRANSACTION_AMT </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │
├───────────┼─────────────────┼───────────┼──────────────┼────────┼────────────────┼─────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">OCOEE       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05182017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">OCOEE       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05192017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05132017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05152017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05192017      </span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05242017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05292017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">100</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">CAPE NEDDICK</span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">05302017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">ANNA MSRIA  </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05162017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00401224</span> │ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">ANNA MSRIA  </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">05232017      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>              │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────┴─────────────────┴───────────┴──────────────┴────────┴────────────────┴─────────────────┘
</pre>
</div>
</div>
<p>Look, now accessing it only takes a fraction of a second!</p>
<div id="9253e73f" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">kept.count()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg ansi-bold">21730730</span></pre>
</div>
</div>
</div>
<section id="committees-data" class="level3">
<h3 class="anchored" data-anchor-id="committees-data">Committees Data</h3>
<p>The contributions only list an opaque <code>CMTE_ID</code> column. We want to know which actual committee this is. Let’s load the committees table so we can lookup from committee ID to committee name.</p>
<div id="30076e2c" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> read_committees():</span>
<span id="cb7-2">    committees_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cg-519a459a-0ea3-42c2-b7bc-fa1143481f74.s3-us-gov-west-1.amazonaws.com/bulk-downloads/2018/committee_summary_2018.csv"</span></span>
<span id="cb7-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This just creates a view, it doesn't actually fetch the data yet</span></span>
<span id="cb7-4">    tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.read_csv(committees_url)</span>
<span id="cb7-5">    tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tmp[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_NM"</span>]</span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The raw table contains multiple rows for each committee id, so lets pick</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># an arbitrary row for each committee id as the representative name.</span></span>
<span id="cb7-8">    deduped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tmp.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_ID"</span>).agg(CMTE_NM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.CMTE_NM.arbitrary())</span>
<span id="cb7-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> deduped</span>
<span id="cb7-10"></span>
<span id="cb7-11"></span>
<span id="cb7-12">comms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_committees().cache()</span>
<span id="cb7-13">comms</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> CMTE_ID   </span>┃<span style="font-weight: bold"> CMTE_NM                                                        </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                         │
├───────────┼────────────────────────────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">C00659441</span> │ <span style="color: #008000; text-decoration-color: #008000">JASON ORTITAY FOR CONGRESS                                    </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00661249</span> │ <span style="color: #008000; text-decoration-color: #008000">SERVICE AFTER SERVICE                                         </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00457754</span> │ <span style="color: #008000; text-decoration-color: #008000">U.S. TRAVEL ASSOCIATION PAC                                   </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00577635</span> │ <span style="color: #008000; text-decoration-color: #008000">ISAKSON VICTORY COMMITTEE                                     </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00297911</span> │ <span style="color: #008000; text-decoration-color: #008000">TEXAS FORESTRY ASSOCIATION FORESTRY POLITICAL ACTION COMMITTEE</span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00551382</span> │ <span style="color: #008000; text-decoration-color: #008000">VOTECLIMATE.US PAC                                            </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00414318</span> │ <span style="color: #008000; text-decoration-color: #008000">LOEBSACK FOR CONGRESS                                         </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00610709</span> │ <span style="color: #008000; text-decoration-color: #008000">AUSTIN INNOVATION 2016                                        </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00131607</span> │ <span style="color: #008000; text-decoration-color: #008000">FLORIDA CITRUS MUTUAL POLITCAL ACTION COMMITTEE               </span> │
│ <span style="color: #008000; text-decoration-color: #008000">C00136531</span> │ <span style="color: #008000; text-decoration-color: #008000">NATIONAL DEMOCRATIC POLICY COMMITTEE                          </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                              │
└───────────┴────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>Now add the committee name to the contributions table:</p>
<div id="0a9f3b35" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">together <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kept.left_join(comms, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_ID"</span>).drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_ID_right"</span>)</span>
<span id="cb8-2">together</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> TRANSACTION_PGI </span>┃<span style="font-weight: bold"> ENTITY_TP </span>┃<span style="font-weight: bold"> CITY             </span>┃<span style="font-weight: bold"> STATE  </span>┃<span style="font-weight: bold"> TRANSACTION_DT </span>┃<span style="font-weight: bold"> TRANSACTION_AMT </span>┃<span style="font-weight: bold"> CMTE_NM                                         </span>┃
┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                          │
├─────────────────┼───────────┼──────────────────┼────────┼────────────────┼─────────────────┼─────────────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">COHASSET        </span> │ <span style="color: #008000; text-decoration-color: #008000">MA    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">KEY LARGO       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │ <span style="color: #008000; text-decoration-color: #008000">01042017      </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5000</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">LOOKOUT MOUNTAIN</span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">NORTH YARMOUTH  </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">ALPHARETTA      </span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">HOLLIS CENTER   </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │ <span style="color: #008000; text-decoration-color: #008000">ALEXANDRIA      </span> │ <span style="color: #008000; text-decoration-color: #008000">VA    </span> │ <span style="color: #008000; text-decoration-color: #008000">01312017      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>              │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                               │
└─────────────────┴───────────┴──────────────────┴────────┴────────────────┴─────────────────┴─────────────────────────────────────────────────┘
</pre>
</div>
</div>
</section>
</section>
<section id="cleaning" class="level2">
<h2 class="anchored" data-anchor-id="cleaning">Cleaning</h2>
<p>First, let’s drop any contributions that don’t have a committee name. There are only 6 of them.</p>
<div id="14ae871f" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We can do this fearlessly, no .copy() needed, because</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># everything in Ibis is immutable. If we did this in pandas,</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we might start modifying the original DataFrame accidentally!</span></span>
<span id="cb9-4">cleaned <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> together</span>
<span id="cb9-5"></span>
<span id="cb9-6">has_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned.CMTE_NM.notnull()</span>
<span id="cb9-7">cleaned <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned[has_name]</span>
<span id="cb9-8">has_name.value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> NotNull(CMTE_NM) </span>┃<span style="font-weight: bold"> NotNull(CMTE_NM)_count </span>┃
┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">boolean</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                  │
├──────────────────┼────────────────────────┤
│ True             │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21730724</span> │
│ False            │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span> │
└──────────────────┴────────────────────────┘
</pre>
</div>
</div>
<p>Let’s look at the <code>ENTITY_TP</code> column. This represents the type of entity that made the contribution:</p>
<div id="72577ed8" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">together.ENTITY_TP.value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> ENTITY_TP </span>┃<span style="font-weight: bold"> ENTITY_TP_count </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │
├───────────┼─────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">IND      </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21687992</span> │
│ <span style="color: #008000; text-decoration-color: #008000">CCM      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">698</span> │
│ <span style="color: #008000; text-decoration-color: #008000">CAN      </span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">13659</span> │
│ <span style="color: #008000; text-decoration-color: #008000">ORG      </span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18555</span> │
│ <span style="color: #008000; text-decoration-color: #008000">PTY      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">49</span> │
│ <span style="color: #008000; text-decoration-color: #008000">COM      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">867</span> │
│ <span style="color: #008000; text-decoration-color: #008000">PAC      </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3621</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5289</span> │
└───────────┴─────────────────┘
</pre>
</div>
</div>
<p>We only care about contributions from individuals.</p>
<p>Once we filter on this column, the contents of it are irrelevant, so let’s drop it.</p>
<div id="f29924a2" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">cleaned <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> together[_.ENTITY_TP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IND"</span>].drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENTITY_TP"</span>)</span></code></pre></div>
</div>
<p>It looks like the <code>TRANSACTION_DT</code> column was a raw string like “MMDDYYYY”, so let’s convert that to a proper date type.</p>
<div id="15443483" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis.expr.types <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StringValue, DateValue</span>
<span id="cb12-2"></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> mmddyyyy_to_date(val: StringValue) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> DateValue:</span>
<span id="cb12-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> val.cast(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>).lpad(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>).to_timestamp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%Y"</span>).date()</span>
<span id="cb12-6"></span>
<span id="cb12-7"></span>
<span id="cb12-8">cleaned <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned.mutate(date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mmddyyyy_to_date(_.TRANSACTION_DT)).drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_DT"</span>)</span>
<span id="cb12-9">cleaned</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> TRANSACTION_PGI </span>┃<span style="font-weight: bold"> CITY             </span>┃<span style="font-weight: bold"> STATE  </span>┃<span style="font-weight: bold"> TRANSACTION_AMT </span>┃<span style="font-weight: bold"> CMTE_NM                                         </span>┃<span style="font-weight: bold"> date       </span>┃
┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>       │
├─────────────────┼──────────────────┼────────┼─────────────────┼─────────────────────────────────────────────────┼────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">COHASSET        </span> │ <span style="color: #008000; text-decoration-color: #008000">MA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">KEY LARGO       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5000</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-04</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">LOOKOUT MOUNTAIN</span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">NORTH YARMOUTH  </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">ALPHARETTA      </span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">HOLLIS CENTER   </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │ <span style="color: #008000; text-decoration-color: #008000">ALEXANDRIA      </span> │ <span style="color: #008000; text-decoration-color: #008000">VA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │
└─────────────────┴──────────────────┴────────┴─────────────────┴─────────────────────────────────────────────────┴────────────┘
</pre>
</div>
</div>
<p>The <code>TRANSACTION_PGI</code> column represents the type (primary, general, etc) of election, and the year. But it seems to be not very consistent:</p>
<div id="fa016097" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">cleaned.TRANSACTION_PGI.topk(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> TRANSACTION_PGI </span>┃<span style="font-weight: bold"> Count(TRANSACTION_PGI) </span>┃
┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                  │
├─────────────────┼────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">P              </span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17013596</span> │
│ <span style="color: #008000; text-decoration-color: #008000">G2018          </span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2095123</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P2018          </span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1677183</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P2020          </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">208501</span> │
│ <span style="color: #008000; text-decoration-color: #008000">O2018          </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">161874</span> │
│ <span style="color: #008000; text-decoration-color: #008000">S2017          </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">124336</span> │
│ <span style="color: #008000; text-decoration-color: #008000">G2017          </span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">98401</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P2022          </span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">91136</span> │
│ <span style="color: #008000; text-decoration-color: #008000">P2017          </span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61153</span> │
│ <span style="color: #008000; text-decoration-color: #008000">R2017          </span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">54281</span> │
└─────────────────┴────────────────────────┘
</pre>
</div>
</div>
<div id="35c8a393" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_election_type(pgi: StringValue) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> StringValue:</span>
<span id="cb14-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Use the first letter of the TRANSACTION_PGI column to determine the election type</span></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    If the first letter is not one of the known election stage, then return null.</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb14-6">    election_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb14-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary"</span>,</span>
<span id="cb14-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"general"</span>,</span>
<span id="cb14-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>,</span>
<span id="cb14-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"convention"</span>,</span>
<span id="cb14-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"runoff"</span>,</span>
<span id="cb14-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"special"</span>,</span>
<span id="cb14-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recount"</span>,</span>
<span id="cb14-14">    }</span>
<span id="cb14-15">    first_letter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pgi[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb14-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> first_letter.substitute(election_types, else_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis.NA)</span>
<span id="cb14-17"></span>
<span id="cb14-18"></span>
<span id="cb14-19">cleaned <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned.mutate(election_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>get_election_type(_.TRANSACTION_PGI)).drop(</span>
<span id="cb14-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_PGI"</span></span>
<span id="cb14-21">)</span>
<span id="cb14-22">cleaned</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> CITY             </span>┃<span style="font-weight: bold"> STATE  </span>┃<span style="font-weight: bold"> TRANSACTION_AMT </span>┃<span style="font-weight: bold"> CMTE_NM                                         </span>┃<span style="font-weight: bold"> date       </span>┃<span style="font-weight: bold"> election_type </span>┃
┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │
├──────────────────┼────────┼─────────────────┼─────────────────────────────────────────────────┼────────────┼───────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">COHASSET        </span> │ <span style="color: #008000; text-decoration-color: #008000">MA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">KEY LARGO       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5000</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-04</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">LOOKOUT MOUNTAIN</span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">NORTH YARMOUTH  </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">ALPHARETTA      </span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">HOLLIS CENTER   </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">ALEXANDRIA      </span> │ <span style="color: #008000; text-decoration-color: #008000">VA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │
└──────────────────┴────────┴─────────────────┴─────────────────────────────────────────────────┴────────────┴───────────────┘
</pre>
</div>
</div>
<p>That worked well! There are 0 nulls in the resulting column, so we always were able to determine the election type.</p>
<div id="e7038c36" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">cleaned.election_type.topk(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> election_type </span>┃<span style="font-weight: bold"> Count(election_type) </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                │
├───────────────┼──────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19061953</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2216685</span> │
│ <span style="color: #008000; text-decoration-color: #008000">other        </span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">161965</span> │
│ <span style="color: #008000; text-decoration-color: #008000">special      </span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">149572</span> │
│ <span style="color: #008000; text-decoration-color: #008000">runoff       </span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">69637</span> │
│ <span style="color: #008000; text-decoration-color: #008000">convention   </span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">22453</span> │
│ <span style="color: #008000; text-decoration-color: #008000">recount      </span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5063</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>          │                    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │
└───────────────┴──────────────────────┘
</pre>
</div>
</div>
<p>About 1/20 of transactions are negative. These could represent refunds, or they could be data entry errors. Let’s drop them to keep it simple.</p>
<div id="ab64b9b2" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">above_zero <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned.TRANSACTION_AMT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb16-2">cleaned <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned[above_zero]</span>
<span id="cb16-3">above_zero.value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> Greater(TRANSACTION_AMT, 0) </span>┃<span style="font-weight: bold"> Greater(TRANSACTION_AMT, 0)_count </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">boolean</span>                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>                             │
├─────────────────────────────┼───────────────────────────────────┤
│ True                        │                          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20669809</span> │
│ False                       │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1018183</span> │
└─────────────────────────────┴───────────────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="adding-features" class="level2">
<h2 class="anchored" data-anchor-id="adding-features">Adding Features</h2>
<p>Now that the data is cleaned up to a usable format, let’s add some features.</p>
<p>First, it’s useful to categorize donations by size, placing them into buckets of small, medium, large, etc.</p>
<div id="db1e9cbe" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">edges <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb17-2">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb17-3">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb17-4">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb17-5">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb17-6">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb17-7">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>,</span>
<span id="cb17-8">]</span>
<span id="cb17-9">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb17-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;10"</span>,</span>
<span id="cb17-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10-50"</span>,</span>
<span id="cb17-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"50-100"</span>,</span>
<span id="cb17-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100-500"</span>,</span>
<span id="cb17-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"500-1000"</span>,</span>
<span id="cb17-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000-5000"</span>,</span>
<span id="cb17-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5000+"</span>,</span>
<span id="cb17-17">]</span>
<span id="cb17-18"></span>
<span id="cb17-19"></span>
<span id="cb17-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> bucketize(vals, edges, str_labels):</span>
<span id="cb17-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Uses Ibis's .bucket() method to create a categorical column</span></span>
<span id="cb17-22">    int_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vals.bucket(edges, include_under<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, include_over<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb17-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Map the integer labels to the string labels</span></span>
<span id="cb17-24">    int_to_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i): s <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(str_labels)}</span>
<span id="cb17-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> int_labels.cast(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>).substitute(int_to_str)</span>
<span id="cb17-26"></span>
<span id="cb17-27"></span>
<span id="cb17-28">featured <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cleaned.mutate(amount_bucket<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bucketize(_.TRANSACTION_AMT, edges, labels))</span>
<span id="cb17-29">featured</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> CITY             </span>┃<span style="font-weight: bold"> STATE  </span>┃<span style="font-weight: bold"> TRANSACTION_AMT </span>┃<span style="font-weight: bold"> CMTE_NM                                         </span>┃<span style="font-weight: bold"> date       </span>┃<span style="font-weight: bold"> election_type </span>┃<span style="font-weight: bold"> amount_bucket </span>┃
┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │
├──────────────────┼────────┼─────────────────┼─────────────────────────────────────────────────┼────────────┼───────────────┼───────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">COHASSET        </span> │ <span style="color: #008000; text-decoration-color: #008000">MA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">KEY LARGO       </span> │ <span style="color: #008000; text-decoration-color: #008000">FL    </span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5000</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-04</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">1000-5000    </span> │
│ <span style="color: #008000; text-decoration-color: #008000">LOOKOUT MOUNTAIN</span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">NORTH YARMOUTH  </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">ALPHARETTA      </span> │ <span style="color: #008000; text-decoration-color: #008000">GA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">HOLLIS CENTER   </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">FALMOUTH        </span> │ <span style="color: #008000; text-decoration-color: #008000">ME    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #008000; text-decoration-color: #008000">ALEXANDRIA      </span> │ <span style="color: #008000; text-decoration-color: #008000">VA    </span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384</span> │ <span style="color: #008000; text-decoration-color: #008000">UNUM GROUP POLITICAL ACTION COMMITTEE (UNUMPAC)</span> │ <span style="color: #800080; text-decoration-color: #800080">2017-01-31</span> │ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │
└──────────────────┴────────┴─────────────────┴─────────────────────────────────────────────────┴────────────┴───────────────┴───────────────┘
</pre>
</div>
</div>
</section>
<section id="analysis" class="level2">
<h2 class="anchored" data-anchor-id="analysis">Analysis</h2>
<section id="by-donation-size" class="level3">
<h3 class="anchored" data-anchor-id="by-donation-size">By donation size</h3>
<p>One thing we can look at is the donation breakdown by size: - Are most donations small or large? - Where do politicians/committees get most of their money from? Large or small donations?</p>
<p>We also will compare performance of Ibis vs pandas during this groupby.</p>
<div id="2c306d0f" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> summary_by(table, by):</span>
<span id="cb18-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> table.group_by(by).agg(</span>
<span id="cb18-3">        n_donations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.count(),</span>
<span id="cb18-4">        total_amount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.TRANSACTION_AMT.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(),</span>
<span id="cb18-5">        mean_amount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.TRANSACTION_AMT.mean(),</span>
<span id="cb18-6">        median_amount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.TRANSACTION_AMT.approx_median(),</span>
<span id="cb18-7">    )</span>
<span id="cb18-8"></span>
<span id="cb18-9"></span>
<span id="cb18-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> summary_by_pandas(df, by):</span>
<span id="cb18-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df.groupby(by, as_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).agg(</span>
<span id="cb18-12">        n_donations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>),</span>
<span id="cb18-13">        total_amount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_AMT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sum"</span>),</span>
<span id="cb18-14">        mean_amount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_AMT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>),</span>
<span id="cb18-15">        median_amount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_AMT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median"</span>),</span>
<span id="cb18-16">    )</span>
<span id="cb18-17"></span>
<span id="cb18-18"></span>
<span id="cb18-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># persist the input data so the following timings of the group_by are accurate.</span></span>
<span id="cb18-20">subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> featured[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amount_bucket"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRANSACTION_AMT"</span>]</span>
<span id="cb18-21">subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subset.cache()</span>
<span id="cb18-22">pandas_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subset.execute()</span></code></pre></div>
</div>
<p>Let’s take a look at what we are actually computing:</p>
<div id="a621ca5f" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">by_type_and_bucket <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary_by(subset, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amount_bucket"</span>])</span>
<span id="cb19-2">by_type_and_bucket</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> election_type </span>┃<span style="font-weight: bold"> amount_bucket </span>┃<span style="font-weight: bold"> n_donations </span>┃<span style="font-weight: bold"> total_amount </span>┃<span style="font-weight: bold"> mean_amount  </span>┃<span style="font-weight: bold"> median_amount </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │
├───────────────┼───────────────┼─────────────┼──────────────┼──────────────┼───────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">50-100       </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2663933</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">155426540</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.344763</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">10-50        </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8115403</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">187666251</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">23.124699</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3636287</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">637353634</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">175.275943</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">150</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">&lt;10          </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2423728</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10080721</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.159180</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">500-1000     </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">634677</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">334630687</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">527.245649</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">500</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">1000-5000    </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">684755</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1231394874</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1798.299938</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1008</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">5000+        </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44085</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1558371116</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35349.237065</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10000</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">700821</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">123174568</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">175.757530</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">150</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │ <span style="color: #008000; text-decoration-color: #008000">50-100       </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">304363</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16184312</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">53.174374</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │ <span style="color: #008000; text-decoration-color: #008000">10-50        </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">660787</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14411588</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.809733</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴───────────────┴─────────────┴──────────────┴──────────────┴───────────────┘
</pre>
</div>
</div>
<p>OK, now let’s do our timings.</p>
<p>One interesting thing to pay attention to here is the execution time for the following groupby. Before, we could get away with lazy execution: because we only wanted to preview the first few rows, we only had to compute the first few rows, so all our previews were very fast.</p>
<p>But now, as soon as we do a groupby, we have to actually go through the whole dataset in order to compute the aggregate per group. So this is going to be slower. BUT, duckdb is still quite fast. It only takes milliseconds to groupby-agg all 20 million rows!</p>
<div id="fc3694c3" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit summary_by(subset, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amount_bucket"</span>]).execute()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .execute() so we actually fetch the data</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>679 ms ± 11.6 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
</div>
</div>
<p>Now let’s try the same thing in pandas:</p>
<div id="ab990661" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit summary_by_pandas(pandas_subset, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amount_bucket"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>3.59 s ± 31.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
</div>
</div>
<p>It takes about 4 seconds, which is about 10 times slower than duckdb. At this scale, it again doesn’t matter, but you could imagine with a dataset much larger than this, it would matter.</p>
<p>Let’s also think about memory usage:</p>
<div id="03834f0b" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">pandas_subset.memory_usage(deep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e9</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GB</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>2.782586663</code></pre>
</div>
</div>
<p>The source dataframe is couple gigabytes, so probably during the groupby, the peak memory usage is going to be a bit higher than this. You could use a profiler such as <a href="https://github.com/pythonspeed/filprofiler">FIL</a> if you wanted an exact number, I was too lazy to use that here.</p>
<p>Again, this works on my laptop at this dataset size, but much larger than this and I’d start having problems. Duckdb on the other hand is designed around working out of core so it should scale to datasets into the hundreds of gigabytes, much larger than your computer’s RAM.</p>
</section>
<section id="back-to-analysis" class="level3">
<h3 class="anchored" data-anchor-id="back-to-analysis">Back to analysis</h3>
<p>OK, let’s plot the result of that groupby.</p>
<p>Surprise! (Or maybe not…) Most donations are small. But most of the money comes from donations larger than $1000.</p>
<p>Well if that’s the case, why do politicians spend so much time soliciting small donations? One explanation is that they can use the number of donations as a marketing pitch, to show how popular they are, and thus how viable of a candidate they are.</p>
<p>This also might explain whose interests are being served by our politicians.</p>
<div id="cf2c035e" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> altair <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> alt</span>
<span id="cb26-2"></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do some bookkeeping so the buckets are displayed smallest to largest on the charts</span></span>
<span id="cb26-4">bucket_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alt.Column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amount_bucket:N"</span>, sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels)</span>
<span id="cb26-5"></span>
<span id="cb26-6">n_by_bucket <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb26-7">    alt.Chart(by_type_and_bucket.execute())</span>
<span id="cb26-8">    .mark_bar()</span>
<span id="cb26-9">    .encode(</span>
<span id="cb26-10">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bucket_col,</span>
<span id="cb26-11">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_donations:Q"</span>,</span>
<span id="cb26-12">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type:N"</span>,</span>
<span id="cb26-13">    )</span>
<span id="cb26-14">)</span>
<span id="cb26-15">total_by_bucket <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb26-16">    alt.Chart(by_type_and_bucket.execute())</span>
<span id="cb26-17">    .mark_bar()</span>
<span id="cb26-18">    .encode(</span>
<span id="cb26-19">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bucket_col,</span>
<span id="cb26-20">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_amount:Q"</span>,</span>
<span id="cb26-21">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type:N"</span>,</span>
<span id="cb26-22">    )</span>
<span id="cb26-23">)</span>
<span id="cb26-24">n_by_bucket <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> total_by_bucket</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">

<style>
  #altair-viz-86646cc3a2964613b7509f2dcc47f742.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-86646cc3a2964613b7509f2dcc47f742.vega-embed details,
  #altair-viz-86646cc3a2964613b7509f2dcc47f742.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-86646cc3a2964613b7509f2dcc47f742"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-86646cc3a2964613b7509f2dcc47f742") {
      outputDiv = document.getElementById("altair-viz-86646cc3a2964613b7509f2dcc47f742");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.8.0?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.8.0"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "hconcat": [{"data": {"name": "data-7df486c18103705f447413da2d200c84"}, "mark": {"type": "bar"}, "encoding": {"color": {"field": "election_type", "type": "nominal"}, "x": {"field": "amount_bucket", "sort": ["<10", "10-50", "50-100", "100-500", "500-1000", "1000-5000", "5000+"], "type": "nominal"}, "y": {"field": "n_donations", "type": "quantitative"}}}, {"data": {"name": "data-334b351fcf36268adfd9e34181060327"}, "mark": {"type": "bar"}, "encoding": {"color": {"field": "election_type", "type": "nominal"}, "x": {"field": "amount_bucket", "sort": ["<10", "10-50", "50-100", "100-500", "500-1000", "1000-5000", "5000+"], "type": "nominal"}, "y": {"field": "total_amount", "type": "quantitative"}}}], "$schema": "https://vega.github.io/schema/vega-lite/v5.8.0.json", "datasets": {"data-7df486c18103705f447413da2d200c84": [{"election_type": "primary", "amount_bucket": "<10", "n_donations": 2423728, "total_amount": 10080721, "mean_amount": 4.159179990493983, "median_amount": 5}, {"election_type": "primary", "amount_bucket": "10-50", "n_donations": 8115403, "total_amount": 187666251, "mean_amount": 23.12469892129818, "median_amount": 25}, {"election_type": "primary", "amount_bucket": "100-500", "n_donations": 3636287, "total_amount": 637353634, "mean_amount": 175.27594329050484, "median_amount": 150}, {"election_type": "primary", "amount_bucket": "50-100", "n_donations": 2663933, "total_amount": 155426540, "mean_amount": 58.34476317535013, "median_amount": 50}, {"election_type": "primary", "amount_bucket": "5000+", "n_donations": 44085, "total_amount": 1558371116, "mean_amount": 35349.237064761255, "median_amount": 10000}, {"election_type": "primary", "amount_bucket": "1000-5000", "n_donations": 684755, "total_amount": 1231394874, "mean_amount": 1798.2999379340056, "median_amount": 1008}, {"election_type": "general", "amount_bucket": "100-500", "n_donations": 700821, "total_amount": 123174568, "mean_amount": 175.75753009684357, "median_amount": 149}, {"election_type": "primary", "amount_bucket": "500-1000", "n_donations": 634677, "total_amount": 334630687, "mean_amount": 527.2456493618014, "median_amount": 500}, {"election_type": "general", "amount_bucket": "1000-5000", "n_donations": 246101, "total_amount": 460025242, "mean_amount": 1869.2538510611496, "median_amount": 1959}, {"election_type": "general", "amount_bucket": "10-50", "n_donations": 660787, "total_amount": 14411588, "mean_amount": 21.809732939661345, "median_amount": 25}, {"election_type": "general", "amount_bucket": "50-100", "n_donations": 304363, "total_amount": 16184312, "mean_amount": 53.174374020495264, "median_amount": 50}, {"election_type": "general", "amount_bucket": "500-1000", "n_donations": 174182, "total_amount": 91015697, "mean_amount": 522.5321617618354, "median_amount": 500}, {"election_type": "general", "amount_bucket": "<10", "n_donations": 115873, "total_amount": 536742, "mean_amount": 4.632157620843509, "median_amount": 5}, {"election_type": "runoff", "amount_bucket": "10-50", "n_donations": 20166, "total_amount": 461107, "mean_amount": 22.865565803828225, "median_amount": 25}, {"election_type": "runoff", "amount_bucket": "50-100", "n_donations": 11578, "total_amount": 585827, "mean_amount": 50.59828986007946, "median_amount": 50}, {"election_type": "runoff", "amount_bucket": "100-500", "n_donations": 18193, "total_amount": 3088289, "mean_amount": 169.75149782883526, "median_amount": 100}, {"election_type": "runoff", "amount_bucket": "500-1000", "n_donations": 4117, "total_amount": 2110393, "mean_amount": 512.6045664318679, "median_amount": 500}, {"election_type": "runoff", "amount_bucket": "1000-5000", "n_donations": 5196, "total_amount": 9601993, "mean_amount": 1847.958622016936, "median_amount": 1894}, {"election_type": "runoff", "amount_bucket": "<10", "n_donations": 10191, "total_amount": 49621, "mean_amount": 4.869100186439015, "median_amount": 5}, {"election_type": "special", "amount_bucket": "100-500", "n_donations": 34497, "total_amount": 5943498, "mean_amount": 172.29028611183583, "median_amount": 117}, {"election_type": "general", "amount_bucket": "5000+", "n_donations": 3125, "total_amount": 44496373, "mean_amount": 14238.83936, "median_amount": 7541}, {"election_type": "special", "amount_bucket": "5000+", "n_donations": 129, "total_amount": 788712, "mean_amount": 6114.046511627907, "median_amount": 5400}, {"election_type": "other", "amount_bucket": "500-1000", "n_donations": 119, "total_amount": 62535, "mean_amount": 525.5042016806723, "median_amount": 500}, {"election_type": "other", "amount_bucket": "100-500", "n_donations": 630, "total_amount": 117988, "mean_amount": 187.2825396825397, "median_amount": 192}, {"election_type": "other", "amount_bucket": "1000-5000", "n_donations": 235, "total_amount": 548212, "mean_amount": 2332.817021276596, "median_amount": 2633}, {"election_type": "other", "amount_bucket": "50-100", "n_donations": 451, "total_amount": 27149, "mean_amount": 60.19733924611973, "median_amount": 50}, {"election_type": "other", "amount_bucket": "10-50", "n_donations": 2644, "total_amount": 64297, "mean_amount": 24.318078668683814, "median_amount": 23}, {"election_type": "convention", "amount_bucket": "100-500", "n_donations": 6350, "total_amount": 1097843, "mean_amount": 172.88866141732282, "median_amount": 138}, {"election_type": "convention", "amount_bucket": "1000-5000", "n_donations": 2822, "total_amount": 4977314, "mean_amount": 1763.7540751240256, "median_amount": 1434}, {"election_type": "convention", "amount_bucket": "10-50", "n_donations": 6848, "total_amount": 141604, "mean_amount": 20.678154205607477, "median_amount": 25}, {"election_type": "convention", "amount_bucket": "500-1000", "n_donations": 1824, "total_amount": 945321, "mean_amount": 518.2680921052631, "median_amount": 500}, {"election_type": "convention", "amount_bucket": "50-100", "n_donations": 2966, "total_amount": 153281, "mean_amount": 51.67936614969656, "median_amount": 50}, {"election_type": "convention", "amount_bucket": "<10", "n_donations": 945, "total_amount": 4660, "mean_amount": 4.931216931216931, "median_amount": 5}, {"election_type": "other", "amount_bucket": "<10", "n_donations": 10993, "total_amount": 25816, "mean_amount": 2.3484035295187846, "median_amount": 1}, {"election_type": "special", "amount_bucket": "1000-5000", "n_donations": 7935, "total_amount": 13493154, "mean_amount": 1700.4604914933836, "median_amount": 1001}, {"election_type": "special", "amount_bucket": "50-100", "n_donations": 22859, "total_amount": 1177660, "mean_amount": 51.518439126820944, "median_amount": 50}, {"election_type": "special", "amount_bucket": "<10", "n_donations": 25115, "total_amount": 122898, "mean_amount": 4.893410312562214, "median_amount": 5}, {"election_type": "special", "amount_bucket": "10-50", "n_donations": 51066, "total_amount": 1134616, "mean_amount": 22.21861904202405, "median_amount": 25}, {"election_type": "special", "amount_bucket": "500-1000", "n_donations": 7811, "total_amount": 4003293, "mean_amount": 512.5199078223019, "median_amount": 500}, {"election_type": "runoff", "amount_bucket": "5000+", "n_donations": 37, "total_amount": 211400, "mean_amount": 5713.513513513513, "median_amount": 5400}, {"election_type": null, "amount_bucket": "1000-5000", "n_donations": 116, "total_amount": 228657, "mean_amount": 1971.1810344827586, "median_amount": 1300}, {"election_type": "recount", "amount_bucket": "5000+", "n_donations": 26, "total_amount": 1888024, "mean_amount": 72616.30769230769, "median_amount": 101450}, {"election_type": null, "amount_bucket": "5000+", "n_donations": 48, "total_amount": 1622455, "mean_amount": 33801.145833333336, "median_amount": 21731}, {"election_type": "recount", "amount_bucket": "100-500", "n_donations": 2232, "total_amount": 413753, "mean_amount": 185.37320788530465, "median_amount": 200}, {"election_type": "recount", "amount_bucket": "10-50", "n_donations": 883, "total_amount": 20860, "mean_amount": 23.62400906002265, "median_amount": 25}, {"election_type": "recount", "amount_bucket": "1000-5000", "n_donations": 589, "total_amount": 1113150, "mean_amount": 1889.8981324278438, "median_amount": 1965}, {"election_type": "recount", "amount_bucket": "500-1000", "n_donations": 494, "total_amount": 250960, "mean_amount": 508.0161943319838, "median_amount": 500}, {"election_type": "recount", "amount_bucket": "50-100", "n_donations": 712, "total_amount": 38450, "mean_amount": 54.002808988764045, "median_amount": 50}, {"election_type": "convention", "amount_bucket": "5000+", "n_donations": 219, "total_amount": 1590300, "mean_amount": 7261.643835616438, "median_amount": 8100}, {"election_type": null, "amount_bucket": "100-500", "n_donations": 195, "total_amount": 46746, "mean_amount": 239.72307692307692, "median_amount": 250}, {"election_type": null, "amount_bucket": "500-1000", "n_donations": 89, "total_amount": 48290, "mean_amount": 542.5842696629213, "median_amount": 500}, {"election_type": null, "amount_bucket": "50-100", "n_donations": 36, "total_amount": 1880, "mean_amount": 52.22222222222222, "median_amount": 50}, {"election_type": "recount", "amount_bucket": "<10", "n_donations": 110, "total_amount": 569, "mean_amount": 5.172727272727273, "median_amount": 5}, {"election_type": null, "amount_bucket": "10-50", "n_donations": 151, "total_amount": 3167, "mean_amount": 20.973509933774835, "median_amount": 25}, {"election_type": null, "amount_bucket": "<10", "n_donations": 24, "total_amount": 108, "mean_amount": 4.5, "median_amount": 5}, {"election_type": "other", "amount_bucket": "5000+", "n_donations": 48, "total_amount": 1901300, "mean_amount": 39610.416666666664, "median_amount": 16950}], "data-334b351fcf36268adfd9e34181060327": [{"election_type": "primary", "amount_bucket": "<10", "n_donations": 2423728, "total_amount": 10080721, "mean_amount": 4.159179990493983, "median_amount": 5}, {"election_type": "primary", "amount_bucket": "10-50", "n_donations": 8115403, "total_amount": 187666251, "mean_amount": 23.12469892129818, "median_amount": 25}, {"election_type": "primary", "amount_bucket": "100-500", "n_donations": 3636287, "total_amount": 637353634, "mean_amount": 175.27594329050484, "median_amount": 150}, {"election_type": "primary", "amount_bucket": "50-100", "n_donations": 2663933, "total_amount": 155426540, "mean_amount": 58.34476317535013, "median_amount": 50}, {"election_type": "primary", "amount_bucket": "5000+", "n_donations": 44085, "total_amount": 1558371116, "mean_amount": 35349.237064761255, "median_amount": 10000}, {"election_type": "primary", "amount_bucket": "1000-5000", "n_donations": 684755, "total_amount": 1231394874, "mean_amount": 1798.2999379340056, "median_amount": 1005}, {"election_type": "general", "amount_bucket": "100-500", "n_donations": 700821, "total_amount": 123174568, "mean_amount": 175.75753009684357, "median_amount": 150}, {"election_type": "primary", "amount_bucket": "500-1000", "n_donations": 634677, "total_amount": 334630687, "mean_amount": 527.2456493618014, "median_amount": 500}, {"election_type": "general", "amount_bucket": "1000-5000", "n_donations": 246101, "total_amount": 460025242, "mean_amount": 1869.2538510611496, "median_amount": 1946}, {"election_type": "general", "amount_bucket": "10-50", "n_donations": 660787, "total_amount": 14411588, "mean_amount": 21.809732939661345, "median_amount": 25}, {"election_type": "general", "amount_bucket": "50-100", "n_donations": 304363, "total_amount": 16184312, "mean_amount": 53.174374020495264, "median_amount": 50}, {"election_type": "general", "amount_bucket": "500-1000", "n_donations": 174182, "total_amount": 91015697, "mean_amount": 522.5321617618354, "median_amount": 500}, {"election_type": "general", "amount_bucket": "<10", "n_donations": 115873, "total_amount": 536742, "mean_amount": 4.632157620843509, "median_amount": 5}, {"election_type": "runoff", "amount_bucket": "10-50", "n_donations": 20166, "total_amount": 461107, "mean_amount": 22.865565803828225, "median_amount": 25}, {"election_type": "runoff", "amount_bucket": "50-100", "n_donations": 11578, "total_amount": 585827, "mean_amount": 50.59828986007946, "median_amount": 50}, {"election_type": "runoff", "amount_bucket": "100-500", "n_donations": 18193, "total_amount": 3088289, "mean_amount": 169.75149782883526, "median_amount": 100}, {"election_type": "runoff", "amount_bucket": "500-1000", "n_donations": 4117, "total_amount": 2110393, "mean_amount": 512.6045664318679, "median_amount": 500}, {"election_type": "runoff", "amount_bucket": "1000-5000", "n_donations": 5196, "total_amount": 9601993, "mean_amount": 1847.958622016936, "median_amount": 1901}, {"election_type": "runoff", "amount_bucket": "<10", "n_donations": 10191, "total_amount": 49621, "mean_amount": 4.869100186439015, "median_amount": 5}, {"election_type": "special", "amount_bucket": "100-500", "n_donations": 34497, "total_amount": 5943498, "mean_amount": 172.29028611183583, "median_amount": 118}, {"election_type": "general", "amount_bucket": "5000+", "n_donations": 3125, "total_amount": 44496373, "mean_amount": 14238.83936, "median_amount": 7528}, {"election_type": "special", "amount_bucket": "5000+", "n_donations": 129, "total_amount": 788712, "mean_amount": 6114.046511627907, "median_amount": 5400}, {"election_type": "special", "amount_bucket": "1000-5000", "n_donations": 7935, "total_amount": 13493154, "mean_amount": 1700.4604914933836, "median_amount": 1000}, {"election_type": "convention", "amount_bucket": "1000-5000", "n_donations": 2822, "total_amount": 4977314, "mean_amount": 1763.7540751240256, "median_amount": 1437}, {"election_type": "convention", "amount_bucket": "100-500", "n_donations": 6350, "total_amount": 1097843, "mean_amount": 172.88866141732282, "median_amount": 139}, {"election_type": "convention", "amount_bucket": "500-1000", "n_donations": 1824, "total_amount": 945321, "mean_amount": 518.2680921052631, "median_amount": 500}, {"election_type": "special", "amount_bucket": "10-50", "n_donations": 51066, "total_amount": 1134616, "mean_amount": 22.21861904202405, "median_amount": 25}, {"election_type": "special", "amount_bucket": "50-100", "n_donations": 22859, "total_amount": 1177660, "mean_amount": 51.518439126820944, "median_amount": 50}, {"election_type": "special", "amount_bucket": "500-1000", "n_donations": 7811, "total_amount": 4003293, "mean_amount": 512.5199078223019, "median_amount": 500}, {"election_type": "special", "amount_bucket": "<10", "n_donations": 25115, "total_amount": 122898, "mean_amount": 4.893410312562214, "median_amount": 5}, {"election_type": null, "amount_bucket": "1000-5000", "n_donations": 116, "total_amount": 228657, "mean_amount": 1971.1810344827586, "median_amount": 1300}, {"election_type": null, "amount_bucket": "5000+", "n_donations": 48, "total_amount": 1622455, "mean_amount": 33801.145833333336, "median_amount": 21731}, {"election_type": "convention", "amount_bucket": "10-50", "n_donations": 6848, "total_amount": 141604, "mean_amount": 20.678154205607477, "median_amount": 25}, {"election_type": "convention", "amount_bucket": "<10", "n_donations": 945, "total_amount": 4660, "mean_amount": 4.931216931216931, "median_amount": 5}, {"election_type": "convention", "amount_bucket": "50-100", "n_donations": 2966, "total_amount": 153281, "mean_amount": 51.67936614969656, "median_amount": 50}, {"election_type": "convention", "amount_bucket": "5000+", "n_donations": 219, "total_amount": 1590300, "mean_amount": 7261.643835616438, "median_amount": 8100}, {"election_type": "recount", "amount_bucket": "100-500", "n_donations": 2232, "total_amount": 413753, "mean_amount": 185.37320788530465, "median_amount": 200}, {"election_type": "recount", "amount_bucket": "10-50", "n_donations": 883, "total_amount": 20860, "mean_amount": 23.62400906002265, "median_amount": 25}, {"election_type": "recount", "amount_bucket": "1000-5000", "n_donations": 589, "total_amount": 1113150, "mean_amount": 1889.8981324278438, "median_amount": 1965}, {"election_type": "recount", "amount_bucket": "500-1000", "n_donations": 494, "total_amount": 250960, "mean_amount": 508.0161943319838, "median_amount": 500}, {"election_type": "recount", "amount_bucket": "50-100", "n_donations": 712, "total_amount": 38450, "mean_amount": 54.002808988764045, "median_amount": 50}, {"election_type": "recount", "amount_bucket": "<10", "n_donations": 110, "total_amount": 569, "mean_amount": 5.172727272727273, "median_amount": 5}, {"election_type": null, "amount_bucket": "100-500", "n_donations": 195, "total_amount": 46746, "mean_amount": 239.72307692307692, "median_amount": 250}, {"election_type": null, "amount_bucket": "500-1000", "n_donations": 89, "total_amount": 48290, "mean_amount": 542.5842696629213, "median_amount": 500}, {"election_type": "other", "amount_bucket": "10-50", "n_donations": 2644, "total_amount": 64297, "mean_amount": 24.318078668683814, "median_amount": 23}, {"election_type": "other", "amount_bucket": "50-100", "n_donations": 451, "total_amount": 27149, "mean_amount": 60.19733924611973, "median_amount": 50}, {"election_type": "other", "amount_bucket": "100-500", "n_donations": 630, "total_amount": 117988, "mean_amount": 187.2825396825397, "median_amount": 192}, {"election_type": "other", "amount_bucket": "<10", "n_donations": 10993, "total_amount": 25816, "mean_amount": 2.3484035295187846, "median_amount": 1}, {"election_type": "other", "amount_bucket": "1000-5000", "n_donations": 235, "total_amount": 548212, "mean_amount": 2332.817021276596, "median_amount": 2633}, {"election_type": "recount", "amount_bucket": "5000+", "n_donations": 26, "total_amount": 1888024, "mean_amount": 72616.30769230769, "median_amount": 101450}, {"election_type": null, "amount_bucket": "<10", "n_donations": 24, "total_amount": 108, "mean_amount": 4.5, "median_amount": 5}, {"election_type": null, "amount_bucket": "10-50", "n_donations": 151, "total_amount": 3167, "mean_amount": 20.973509933774835, "median_amount": 25}, {"election_type": "other", "amount_bucket": "500-1000", "n_donations": 119, "total_amount": 62535, "mean_amount": 525.5042016806723, "median_amount": 500}, {"election_type": "runoff", "amount_bucket": "5000+", "n_donations": 37, "total_amount": 211400, "mean_amount": 5713.513513513513, "median_amount": 5400}, {"election_type": null, "amount_bucket": "50-100", "n_donations": 36, "total_amount": 1880, "mean_amount": 52.22222222222222, "median_amount": 50}, {"election_type": "other", "amount_bucket": "5000+", "n_donations": 48, "total_amount": 1901300, "mean_amount": 39610.416666666664, "median_amount": 16950}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
</section>
<section id="by-election-stage" class="level3">
<h3 class="anchored" data-anchor-id="by-election-stage">By election stage</h3>
<p>Let’s look at how donations break down by election stage. Do people donate differently for primary elections vs general elections?</p>
<p>Let’s ignore everything but primary and general elections, since they are the most common, and arguably the most important.</p>
<div id="92651642" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">gb2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> by_type_and_bucket[_.election_type.isin((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"general"</span>))]</span>
<span id="cb27-2">n_donations_per_election_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _.n_donations.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>().over(group_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type"</span>)</span>
<span id="cb27-3">frac <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _.n_donations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_donations_per_election_type</span>
<span id="cb27-4">gb2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gb2.mutate(frac_n_donations_per_election_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>frac)</span>
<span id="cb27-5">gb2</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> election_type </span>┃<span style="font-weight: bold"> amount_bucket </span>┃<span style="font-weight: bold"> n_donations </span>┃<span style="font-weight: bold"> total_amount </span>┃<span style="font-weight: bold"> mean_amount  </span>┃<span style="font-weight: bold"> median_amount </span>┃<span style="font-weight: bold"> frac_n_donations_per_election_type </span>┃
┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                            │
├───────────────┼───────────────┼─────────────┼──────────────┼──────────────┼───────────────┼────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">10-50        </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8115403</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">187666251</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">23.124699</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.445831</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">&lt;10          </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2423728</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10080721</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.159180</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.133151</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3636287</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">637353634</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">175.275943</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">150</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.199765</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">50-100       </span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2663933</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">155426540</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58.344763</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.146347</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">500-1000     </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">634677</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">334630687</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">527.245649</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">500</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.034867</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">1000-5000    </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">684755</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1231394874</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1798.299938</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1008</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.037618</span> │
│ <span style="color: #008000; text-decoration-color: #008000">primary      </span> │ <span style="color: #008000; text-decoration-color: #008000">5000+        </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44085</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1558371116</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35349.237065</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10000</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.002422</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │ <span style="color: #008000; text-decoration-color: #008000">50-100       </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">304363</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16184312</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">53.174374</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.138017</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │ <span style="color: #008000; text-decoration-color: #008000">100-500      </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">700821</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">123174568</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">175.757530</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">150</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.317796</span> │
│ <span style="color: #008000; text-decoration-color: #008000">general      </span> │ <span style="color: #008000; text-decoration-color: #008000">500-1000     </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">174182</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">91015697</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">522.532162</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">500</span> │                           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.078985</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                                  <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└───────────────┴───────────────┴─────────────┴──────────────┴──────────────┴───────────────┴────────────────────────────────────┘
</pre>
</div>
</div>
<p>It looks like primary elections get a larger proportion of small donations.</p>
<div id="fd42d9bf" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">alt.Chart(gb2.execute()).mark_bar().encode(</span>
<span id="cb28-2">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"election_type:O"</span>,</span>
<span id="cb28-3">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"frac_n_donations_per_election_type:Q"</span>,</span>
<span id="cb28-4">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bucket_col,</span>
<span id="cb28-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">

<style>
  #altair-viz-d70f3d08fb7d48c3b9c5b7d4e4e4b735.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-d70f3d08fb7d48c3b9c5b7d4e4e4b735.vega-embed details,
  #altair-viz-d70f3d08fb7d48c3b9c5b7d4e4e4b735.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-d70f3d08fb7d48c3b9c5b7d4e4e4b735"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-d70f3d08fb7d48c3b9c5b7d4e4e4b735") {
      outputDiv = document.getElementById("altair-viz-d70f3d08fb7d48c3b9c5b7d4e4e4b735");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.8.0?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.8.0"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "data": {"name": "data-a720be181ccb86f83b23a767dba558e0"}, "mark": {"type": "bar"}, "encoding": {"color": {"field": "amount_bucket", "sort": ["<10", "10-50", "50-100", "100-500", "500-1000", "1000-5000", "5000+"], "type": "nominal"}, "x": {"field": "election_type", "type": "ordinal"}, "y": {"field": "frac_n_donations_per_election_type", "type": "quantitative"}}, "$schema": "https://vega.github.io/schema/vega-lite/v5.8.0.json", "datasets": {"data-a720be181ccb86f83b23a767dba558e0": [{"election_type": "primary", "amount_bucket": "<10", "n_donations": 2423728, "total_amount": 10080721, "mean_amount": 4.159179990493983, "median_amount": 5, "frac_n_donations_per_election_type": 0.13315088589336582}, {"election_type": "primary", "amount_bucket": "10-50", "n_donations": 8115403, "total_amount": 187666251, "mean_amount": 23.12469892129818, "median_amount": 25, "frac_n_donations_per_election_type": 0.44583100860809405}, {"election_type": "primary", "amount_bucket": "50-100", "n_donations": 2663933, "total_amount": 155426540, "mean_amount": 58.34476317535013, "median_amount": 50, "frac_n_donations_per_election_type": 0.14634688335925966}, {"election_type": "primary", "amount_bucket": "100-500", "n_donations": 3636287, "total_amount": 637353634, "mean_amount": 175.27594329050484, "median_amount": 150, "frac_n_donations_per_election_type": 0.1997645096366133}, {"election_type": "primary", "amount_bucket": "500-1000", "n_donations": 634677, "total_amount": 334630687, "mean_amount": 527.2456493618014, "median_amount": 500, "frac_n_donations_per_election_type": 0.03486686823197312}, {"election_type": "primary", "amount_bucket": "1000-5000", "n_donations": 684755, "total_amount": 1231394874, "mean_amount": 1798.2999379340056, "median_amount": 1008, "frac_n_donations_per_election_type": 0.037617973167744775}, {"election_type": "primary", "amount_bucket": "5000+", "n_donations": 44085, "total_amount": 1558371116, "mean_amount": 35349.237064761255, "median_amount": 10000, "frac_n_donations_per_election_type": 0.0024218711029492714}, {"election_type": "general", "amount_bucket": "1000-5000", "n_donations": 246101, "total_amount": 460025242, "mean_amount": 1869.2538510611496, "median_amount": 1956, "frac_n_donations_per_election_type": 0.1115976768187944}, {"election_type": "general", "amount_bucket": "100-500", "n_donations": 700821, "total_amount": 123174568, "mean_amount": 175.75753009684357, "median_amount": 150, "frac_n_donations_per_election_type": 0.3177963334802553}, {"election_type": "general", "amount_bucket": "50-100", "n_donations": 304363, "total_amount": 16184312, "mean_amount": 53.174374020495264, "median_amount": 50, "frac_n_donations_per_election_type": 0.13801733316645898}, {"election_type": "general", "amount_bucket": "<10", "n_donations": 115873, "total_amount": 536742, "mean_amount": 4.632157620843509, "median_amount": 5, "frac_n_donations_per_election_type": 0.052544108337731925}, {"election_type": "general", "amount_bucket": "500-1000", "n_donations": 174182, "total_amount": 91015697, "mean_amount": 522.5321617618354, "median_amount": 500, "frac_n_donations_per_election_type": 0.0789850774423966}, {"election_type": "general", "amount_bucket": "10-50", "n_donations": 660787, "total_amount": 14411588, "mean_amount": 21.809732939661345, "median_amount": 25, "frac_n_donations_per_election_type": 0.2996423991453131}, {"election_type": "general", "amount_bucket": "5000+", "n_donations": 3125, "total_amount": 44496373, "mean_amount": 14238.83936, "median_amount": 7525, "frac_n_donations_per_election_type": 0.0014170716090496688}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
</section>
<section id="by-recipient" class="level3">
<h3 class="anchored" data-anchor-id="by-recipient">By recipient</h3>
<p>Let’s look at the top players. Who gets the most donations?</p>
<p>Far and away it is ActBlue, which acts as a conduit for donations to Democratic interests.</p>
<p>Beto O’Rourke is the top individual politician, hats off to him!</p>
<div id="e844f42e" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">by_recip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary_by(featured, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_NM"</span>)</span>
<span id="cb29-2">by_recip</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> CMTE_NM                                                                          </span>┃<span style="font-weight: bold"> n_donations </span>┃<span style="font-weight: bold"> total_amount </span>┃<span style="font-weight: bold"> mean_amount </span>┃<span style="font-weight: bold"> median_amount </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │
├──────────────────────────────────────────────────────────────────────────────────┼─────────────┼──────────────┼─────────────┼───────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">EXELON CORPORATION POLITICAL ACTION COMMITTEE (EXELON PAC)                      </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">13250</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1939503</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">146.377585</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">118</span> │
│ <span style="color: #008000; text-decoration-color: #008000">ARCHER DANIELS MIDLAND COMPANY-ADM PAC                                          </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4460</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">275807</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">61.840135</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #008000; text-decoration-color: #008000">PFIZER INC. PAC                                                                 </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">46900</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1948689</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">41.549872</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20</span> │
│ <span style="color: #008000; text-decoration-color: #008000">SUEZ WATER INC. FEDERAL PAC                                                     </span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">108</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16873</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">156.231481</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">120</span> │
│ <span style="color: #008000; text-decoration-color: #008000">INTERNATIONAL WAREHOUSE LOGISTICS ASSOCIATION PAC                               </span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">90</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">132200</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1468.888889</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1000</span> │
│ <span style="color: #008000; text-decoration-color: #008000">BAKERY, CONFECTIONERY, TOBACCO WORKERS AND GRAIN MILLERS INTERNATIONAL UNION PAC</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">387</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19091</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">49.330749</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">30</span> │
│ <span style="color: #008000; text-decoration-color: #008000">UNION PACIFIC CORP. FUND FOR EFFECTIVE GOVERNMENT                               </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16118</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2436963</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">151.195123</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">114</span> │
│ <span style="color: #008000; text-decoration-color: #008000">NATIONAL ASSOCIATION OF REALTORS POLITICAL ACTION COMMITTEE                     </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">24277</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5492063</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">226.224945</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">154</span> │
│ <span style="color: #008000; text-decoration-color: #008000">AMERICAN FINANCIAL SERVICES ASSOCIATION PAC                                     </span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">690</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">685839</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">993.969565</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">65</span> │
│ <span style="color: #008000; text-decoration-color: #008000">WEYERHAEUSER COMPANY POLITICAL ACTION COMMITTEE                                 </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5512</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">343244</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62.272134</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">30</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└──────────────────────────────────────────────────────────────────────────────────┴─────────────┴──────────────┴─────────────┴───────────────┘
</pre>
</div>
</div>
<div id="a0c1efd8" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">top_recip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> by_recip.order_by(ibis.desc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_donations"</span>)).head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb30-2">alt.Chart(top_recip.execute()).mark_bar().encode(</span>
<span id="cb30-3">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alt.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMTE_NM:O"</span>, sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-y"</span>),</span>
<span id="cb30-4">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_donations:Q"</span>,</span>
<span id="cb30-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">

<style>
  #altair-viz-59298bf7a2fb45ba8365f4fc9ef956b9.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-59298bf7a2fb45ba8365f4fc9ef956b9.vega-embed details,
  #altair-viz-59298bf7a2fb45ba8365f4fc9ef956b9.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-59298bf7a2fb45ba8365f4fc9ef956b9"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-59298bf7a2fb45ba8365f4fc9ef956b9") {
      outputDiv = document.getElementById("altair-viz-59298bf7a2fb45ba8365f4fc9ef956b9");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.8.0?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.8.0"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "data": {"name": "data-ce10b3f5b7c7e35451245a008d469163"}, "mark": {"type": "bar"}, "encoding": {"x": {"field": "CMTE_NM", "sort": "-y", "type": "ordinal"}, "y": {"field": "n_donations", "type": "quantitative"}}, "$schema": "https://vega.github.io/schema/vega-lite/v5.8.0.json", "datasets": {"data-ce10b3f5b7c7e35451245a008d469163": [{"CMTE_NM": "ACTBLUE", "n_donations": 5820888, "total_amount": 693057213, "mean_amount": 119.06382892094814, "median_amount": 25}, {"CMTE_NM": "DCCC", "n_donations": 1315476, "total_amount": 124802082, "mean_amount": 94.87218466927561, "median_amount": 25}, {"CMTE_NM": "REPUBLICAN NATIONAL COMMITTEE", "n_donations": 570561, "total_amount": 131525422, "mean_amount": 230.5194746924518, "median_amount": 50}, {"CMTE_NM": "END CITIZENS UNITED", "n_donations": 489710, "total_amount": 13654987, "mean_amount": 27.8838230789651, "median_amount": 15}, {"CMTE_NM": "DSCC", "n_donations": 347493, "total_amount": 67844824, "mean_amount": 195.2408365060591, "median_amount": 35}, {"CMTE_NM": "PROGRESSIVE TURNOUT PROJECT", "n_donations": 313433, "total_amount": 9251647, "mean_amount": 29.517144014829327, "median_amount": 15}, {"CMTE_NM": "DNC SERVICES CORP./DEM. NAT'L COMMITTEE", "n_donations": 280264, "total_amount": 70156788, "mean_amount": 250.32393743042275, "median_amount": 50}, {"CMTE_NM": "BETO FOR TEXAS", "n_donations": 280027, "total_amount": 44914966, "mean_amount": 160.39512618426082, "median_amount": 50}, {"CMTE_NM": "NRSC", "n_donations": 203124, "total_amount": 55384644, "mean_amount": 272.66420511608675, "median_amount": 50}, {"CMTE_NM": "NRCC", "n_donations": 178176, "total_amount": 38646560, "mean_amount": 216.90104166666666, "median_amount": 50}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
</section>
<section id="by-location" class="level3">
<h3 class="anchored" data-anchor-id="by-location">By Location</h3>
<p>Where are the largest donations coming from?</p>
<div id="3348eca1" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">f2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> featured.mutate(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.CITY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> _.STATE).drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CITY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATE"</span>)</span>
<span id="cb31-2">by_loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary_by(f2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"loc"</span>)</span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop the places with a small number of donations so we're</span></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># resistant to outliers for the mean</span></span>
<span id="cb31-5">by_loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> by_loc[_.n_donations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]</span>
<span id="cb31-6">by_loc</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> loc              </span>┃<span style="font-weight: bold"> n_donations </span>┃<span style="font-weight: bold"> total_amount </span>┃<span style="font-weight: bold"> mean_amount </span>┃<span style="font-weight: bold"> median_amount </span>┃
┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │
├──────────────────┼─────────────┼──────────────┼─────────────┼───────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">DALLAS, TX      </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">154038</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">66558403</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">432.090802</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58</span> │
│ <span style="color: #008000; text-decoration-color: #008000">PHILADELPHIA, PA</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">222938</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36054977</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">161.726476</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">62</span> │
│ <span style="color: #008000; text-decoration-color: #008000">MALIBU, CA      </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11699</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4934763</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">421.810668</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │
│ <span style="color: #008000; text-decoration-color: #008000">SANTEE, CA      </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2454</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">201274</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">82.018745</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">26</span> │
│ <span style="color: #008000; text-decoration-color: #008000">WINNETKA, IL    </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8589</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5621809</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">654.535918</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">172</span> │
│ <span style="color: #008000; text-decoration-color: #008000">OREM, UT        </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2110</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">837475</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">396.907583</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │
│ <span style="color: #008000; text-decoration-color: #008000">MESA, AZ        </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">22128</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1856636</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">83.904375</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20</span> │
│ <span style="color: #008000; text-decoration-color: #008000">WAYZATA, MN     </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6488</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3326275</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">512.681104</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">117</span> │
│ <span style="color: #008000; text-decoration-color: #008000">MINNETONKA, MN  </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5709</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1187881</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">208.071641</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │
│ <span style="color: #008000; text-decoration-color: #008000">OJAI, CA        </span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4496</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">926422</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">206.054715</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└──────────────────┴─────────────┴──────────────┴─────────────┴───────────────┘
</pre>
</div>
</div>
<div id="95c93760" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> top_by(col):</span>
<span id="cb32-2">    top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> by_loc.order_by(ibis.desc(col)).head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb32-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (</span>
<span id="cb32-4">        alt.Chart(top.execute())</span>
<span id="cb32-5">        .mark_bar()</span>
<span id="cb32-6">        .encode(</span>
<span id="cb32-7">            x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alt.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loc:O'</span>, sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-y"</span>),</span>
<span id="cb32-8">            y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col,</span>
<span id="cb32-9">        )</span>
<span id="cb32-10">    )</span>
<span id="cb32-11"></span>
<span id="cb32-12"></span>
<span id="cb32-13">top_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_donations"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> top_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_amount"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> top_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean_amount"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> top_by(</span>
<span id="cb32-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median_amount"</span></span>
<span id="cb32-15">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="29">

<style>
  #altair-viz-0d2671a035be4c5e8b9b39040d382bd3.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-0d2671a035be4c5e8b9b39040d382bd3.vega-embed details,
  #altair-viz-0d2671a035be4c5e8b9b39040d382bd3.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-0d2671a035be4c5e8b9b39040d382bd3"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-0d2671a035be4c5e8b9b39040d382bd3") {
      outputDiv = document.getElementById("altair-viz-0d2671a035be4c5e8b9b39040d382bd3");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.8.0?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.8.0"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "hconcat": [{"data": {"name": "data-88a0fd8958c48a49df7689732aa79f72"}, "mark": {"type": "bar"}, "encoding": {"x": {"field": "loc", "sort": "-y", "type": "ordinal"}, "y": {"field": "n_donations", "type": "quantitative"}}}, {"data": {"name": "data-3702e7b9b7a3360d0314740591d3849d"}, "mark": {"type": "bar"}, "encoding": {"x": {"field": "loc", "sort": "-y", "type": "ordinal"}, "y": {"field": "total_amount", "type": "quantitative"}}}, {"data": {"name": "data-290a9847dd1ffd50031c2439e64328e3"}, "mark": {"type": "bar"}, "encoding": {"x": {"field": "loc", "sort": "-y", "type": "ordinal"}, "y": {"field": "mean_amount", "type": "quantitative"}}}, {"data": {"name": "data-5b715f99a3cfcd002ab9d2ec64e81179"}, "mark": {"type": "bar"}, "encoding": {"x": {"field": "loc", "sort": "-y", "type": "ordinal"}, "y": {"field": "median_amount", "type": "quantitative"}}}], "$schema": "https://vega.github.io/schema/vega-lite/v5.8.0.json", "datasets": {"data-88a0fd8958c48a49df7689732aa79f72": [{"loc": "NEW YORK, NY", "n_donations": 695091, "total_amount": 444600108, "mean_amount": 639.6286356750411, "median_amount": 50}, {"loc": "WASHINGTON, DC", "n_donations": 401498, "total_amount": 124456508, "mean_amount": 309.9803934266173, "median_amount": 57}, {"loc": "HOUSTON, TX", "n_donations": 251960, "total_amount": 83026989, "mean_amount": 329.5244840450865, "median_amount": 50}, {"loc": "LOS ANGELES, CA", "n_donations": 245263, "total_amount": 89881980, "mean_amount": 366.4718282007478, "median_amount": 50}, {"loc": "SAN FRANCISCO, CA", "n_donations": 238117, "total_amount": 189799961, "mean_amount": 797.086982449804, "median_amount": 50}, {"loc": "PHILADELPHIA, PA", "n_donations": 222938, "total_amount": 36054977, "mean_amount": 161.72647552234253, "median_amount": 62}, {"loc": "CHICAGO, IL", "n_donations": 212527, "total_amount": 108119674, "mean_amount": 508.7338267608351, "median_amount": 40}, {"loc": "SEATTLE, WA", "n_donations": 197671, "total_amount": 52867387, "mean_amount": 267.4514066302088, "median_amount": 36}, {"loc": "AUSTIN, TX", "n_donations": 189865, "total_amount": 33315922, "mean_amount": 175.4716351091565, "median_amount": 38}, {"loc": "ARLINGTON, VA", "n_donations": 163168, "total_amount": 23382868, "mean_amount": 143.30547656403218, "median_amount": 50}], "data-3702e7b9b7a3360d0314740591d3849d": [{"loc": "NEW YORK, NY", "n_donations": 695091, "total_amount": 444600108, "mean_amount": 639.6286356750411, "median_amount": 50}, {"loc": "SAN FRANCISCO, CA", "n_donations": 238117, "total_amount": 189799961, "mean_amount": 797.086982449804, "median_amount": 50}, {"loc": "LAS VEGAS, NV", "n_donations": 65940, "total_amount": 153467387, "mean_amount": 2327.37923870185, "median_amount": 46}, {"loc": "WASHINGTON, DC", "n_donations": 401498, "total_amount": 124456508, "mean_amount": 309.9803934266173, "median_amount": 57}, {"loc": "CHICAGO, IL", "n_donations": 212527, "total_amount": 108119674, "mean_amount": 508.7338267608351, "median_amount": 40}, {"loc": "LOS ANGELES, CA", "n_donations": 245263, "total_amount": 89881980, "mean_amount": 366.4718282007478, "median_amount": 50}, {"loc": "HOUSTON, TX", "n_donations": 251960, "total_amount": 83026989, "mean_amount": 329.5244840450865, "median_amount": 50}, {"loc": "DALLAS, TX", "n_donations": 154038, "total_amount": 66558403, "mean_amount": 432.09080226956985, "median_amount": 57}, {"loc": "SEATTLE, WA", "n_donations": 197671, "total_amount": 52867387, "mean_amount": 267.4514066302088, "median_amount": 36}, {"loc": "BOSTON, MA", "n_donations": 82925, "total_amount": 47592049, "mean_amount": 573.9167802230932, "median_amount": 57}], "data-290a9847dd1ffd50031c2439e64328e3": [{"loc": "LAKE FOREST, IL", "n_donations": 5636, "total_amount": 37486362, "mean_amount": 6651.235273243435, "median_amount": 100}, {"loc": "MOUNT VERNON, OH", "n_donations": 1431, "total_amount": 5605857, "mean_amount": 3917.4402515723273, "median_amount": 47}, {"loc": "LOS ALTOS HILLS, CA", "n_donations": 4098, "total_amount": 10367629, "mean_amount": 2529.92410932162, "median_amount": 318}, {"loc": "PALM BEACH, FL", "n_donations": 7140, "total_amount": 17212425, "mean_amount": 2410.703781512605, "median_amount": 260}, {"loc": "LAS VEGAS, NV", "n_donations": 65940, "total_amount": 153467387, "mean_amount": 2327.37923870185, "median_amount": 45}, {"loc": "RHINEBECK, NY", "n_donations": 3014, "total_amount": 5942571, "mean_amount": 1971.6559389515594, "median_amount": 47}, {"loc": "JOPLIN, MO", "n_donations": 1839, "total_amount": 3617186, "mean_amount": 1966.9309407286569, "median_amount": 50}, {"loc": "BALA CYNWYD, PA", "n_donations": 3668, "total_amount": 6949933, "mean_amount": 1894.7472737186479, "median_amount": 100}, {"loc": "CARMEL, IN", "n_donations": 10932, "total_amount": 20383688, "mean_amount": 1864.5890962312478, "median_amount": 53}, {"loc": "WAYLAND, MA", "n_donations": 5283, "total_amount": 9704279, "mean_amount": 1836.8879424569373, "median_amount": 50}], "data-5b715f99a3cfcd002ab9d2ec64e81179": [{"loc": "GLADWYNE, PA", "n_donations": 1727, "total_amount": 1333243, "mean_amount": 771.9994209612044, "median_amount": 335}, {"loc": "LOS ALTOS HILLS, CA", "n_donations": 4098, "total_amount": 10367629, "mean_amount": 2529.92410932162, "median_amount": 326}, {"loc": "MC LEAN, VA", "n_donations": 4692, "total_amount": 3656109, "mean_amount": 779.2218670076726, "median_amount": 305}, {"loc": "PALM BEACH, FL", "n_donations": 7140, "total_amount": 17212425, "mean_amount": 2410.703781512605, "median_amount": 262}, {"loc": "PARADISE VALLEY, AZ", "n_donations": 8197, "total_amount": 7035291, "mean_amount": 858.2763206050994, "median_amount": 250}, {"loc": "MISSION HILLS, KS", "n_donations": 2258, "total_amount": 1642339, "mean_amount": 727.3423383525244, "median_amount": 250}, {"loc": "DOVER, MA", "n_donations": 1040, "total_amount": 976757, "mean_amount": 939.189423076923, "median_amount": 250}, {"loc": "ATHERTON, CA", "n_donations": 8780, "total_amount": 11595391, "mean_amount": 1320.6595671981777, "median_amount": 250}, {"loc": "KENILWORTH, IL", "n_donations": 1500, "total_amount": 855723, "mean_amount": 570.482, "median_amount": 250}, {"loc": "WOODSIDE, CA", "n_donations": 5626, "total_amount": 6110007, "mean_amount": 1086.030394596516, "median_amount": 249}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
</section>
<section id="by-month" class="level3">
<h3 class="anchored" data-anchor-id="by-month">By month</h3>
<p>When do the donations come in?</p>
<div id="6d0776d2" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">by_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary_by(featured, _.date.month().name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month_int"</span>))</span>
<span id="cb33-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sorta hacky, .substritute doesn't work to change dtypes (yet?)</span></span>
<span id="cb33-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># so we cast to string and then do our mapping</span></span>
<span id="cb33-4">month_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb33-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jan"</span>,</span>
<span id="cb33-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Feb"</span>,</span>
<span id="cb33-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mar"</span>,</span>
<span id="cb33-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apr"</span>,</span>
<span id="cb33-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>,</span>
<span id="cb33-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jun"</span>,</span>
<span id="cb33-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jul"</span>,</span>
<span id="cb33-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Aug"</span>,</span>
<span id="cb33-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sep"</span>,</span>
<span id="cb33-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oct"</span>,</span>
<span id="cb33-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nov"</span>,</span>
<span id="cb33-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dec"</span>,</span>
<span id="cb33-17">}</span>
<span id="cb33-18">by_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> by_month.mutate(month_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.month_int.cast(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>).substitute(month_map))</span>
<span id="cb33-19">by_month</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃<span style="font-weight: bold"> month_int </span>┃<span style="font-weight: bold"> n_donations </span>┃<span style="font-weight: bold"> total_amount </span>┃<span style="font-weight: bold"> mean_amount </span>┃<span style="font-weight: bold"> median_amount </span>┃<span style="font-weight: bold"> month_str </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int32</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │
├───────────┼─────────────┼──────────────┼─────────────┼───────────────┼───────────┤
│      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1514</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">250297</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">165.321664</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">99</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>      │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">348979</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">174837854</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">500.998209</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">122</span> │ <span style="color: #008000; text-decoration-color: #008000">Jan      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">581646</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">255997655</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">440.126219</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">100</span> │ <span style="color: #008000; text-decoration-color: #008000">Feb      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1042577</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">430906797</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">413.309326</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">81</span> │ <span style="color: #008000; text-decoration-color: #008000">Mar      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1088244</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">299252692</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">274.986760</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">50</span> │ <span style="color: #008000; text-decoration-color: #008000">Apr      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1374247</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">387317192</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">281.839576</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">48</span> │ <span style="color: #008000; text-decoration-color: #008000">May      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1667285</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">465305247</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">279.079610</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span> │ <span style="color: #008000; text-decoration-color: #008000">Jun      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1607053</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">320528605</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">199.451172</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │ <span style="color: #008000; text-decoration-color: #008000">Jul      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2023466</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">473544182</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">234.026261</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span> │ <span style="color: #008000; text-decoration-color: #008000">Aug      </span> │
│         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2583847</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">697888624</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">270.096729</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38</span> │ <span style="color: #008000; text-decoration-color: #008000">Sep      </span> │
│         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │
└───────────┴─────────────┴──────────────┴─────────────┴───────────────┴───────────┘
</pre>
</div>
</div>
<div id="a2b27c61" class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">months_in_order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(month_map.values())</span>
<span id="cb34-2">alt.Chart(by_month.execute()).mark_bar().encode(</span>
<span id="cb34-3">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alt.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month_str:O"</span>, sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>months_in_order),</span>
<span id="cb34-4">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_donations:Q"</span>,</span>
<span id="cb34-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">

<style>
  #altair-viz-8f3242609f02454fa698b7480db40ce3.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-8f3242609f02454fa698b7480db40ce3.vega-embed details,
  #altair-viz-8f3242609f02454fa698b7480db40ce3.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-8f3242609f02454fa698b7480db40ce3"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-8f3242609f02454fa698b7480db40ce3") {
      outputDiv = document.getElementById("altair-viz-8f3242609f02454fa698b7480db40ce3");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.8.0?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.8.0"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300}}, "data": {"name": "data-60ff3524db1ce5308db1f55005eff874"}, "mark": {"type": "bar"}, "encoding": {"x": {"field": "month_str", "sort": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], "type": "ordinal"}, "y": {"field": "n_donations", "type": "quantitative"}}, "$schema": "https://vega.github.io/schema/vega-lite/v5.8.0.json", "datasets": {"data-60ff3524db1ce5308db1f55005eff874": [{"month_int": null, "n_donations": 1514, "total_amount": 250297, "mean_amount": 165.3216644649934, "median_amount": 100, "month_str": null}, {"month_int": 1.0, "n_donations": 348979, "total_amount": 174837854, "mean_amount": 500.9982090612902, "median_amount": 120, "month_str": "Jan"}, {"month_int": 2.0, "n_donations": 581646, "total_amount": 255997655, "mean_amount": 440.126219384299, "median_amount": 100, "month_str": "Feb"}, {"month_int": 3.0, "n_donations": 1042577, "total_amount": 430906797, "mean_amount": 413.3093258339672, "median_amount": 81, "month_str": "Mar"}, {"month_int": 4.0, "n_donations": 1088244, "total_amount": 299252692, "mean_amount": 274.98676032213365, "median_amount": 50, "month_str": "Apr"}, {"month_int": 5.0, "n_donations": 1374247, "total_amount": 387317192, "mean_amount": 281.83957614606396, "median_amount": 48, "month_str": "May"}, {"month_int": 6.0, "n_donations": 1667285, "total_amount": 465305247, "mean_amount": 279.07960966481437, "median_amount": 44, "month_str": "Jun"}, {"month_int": 7.0, "n_donations": 1607053, "total_amount": 320528605, "mean_amount": 199.45117242555162, "median_amount": 35, "month_str": "Jul"}, {"month_int": 8.0, "n_donations": 2023466, "total_amount": 473544182, "mean_amount": 234.02626088108227, "median_amount": 35, "month_str": "Aug"}, {"month_int": 9.0, "n_donations": 2583847, "total_amount": 697888624, "mean_amount": 270.0967294116099, "median_amount": 38, "month_str": "Sep"}, {"month_int": 10.0, "n_donations": 3686024, "total_amount": 850820707, "mean_amount": 230.82343115508743, "median_amount": 29, "month_str": "Oct"}, {"month_int": 11.0, "n_donations": 2545616, "total_amount": 285143995, "mean_amount": 112.01375030640914, "median_amount": 25, "month_str": "Nov"}, {"month_int": 12.0, "n_donations": 2119311, "total_amount": 283081648, "mean_amount": 133.57249030463203, "median_amount": 25, "month_str": "Dec"}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Thanks for following along! I hope you’ve learned something about Ibis, and maybe even about campaign finance.</p>
<p>Ibis is a great tool for exploring data. I now find myself reaching for it when in the past I would have reached for pandas.</p>
<p>Some of the highlights for me:</p>
<ul>
<li>Fast, lazy execution, a great display format, and good type hinting/editor support for a great REPL experience.</li>
<li>Very well thought-out API and semantics (e.g.&nbsp;<code>isinstance(val, NumericValue)</code>?? That’s beautiful!)</li>
<li>Fast and fairly complete string support, since I work with a lot of text data.</li>
<li>Extremely responsive maintainers. Sometimes I’ve submitted multiple feature requests and bug reports in a single day, and a PR has been merged by the next day.</li>
<li>Escape hatch to SQL. I didn’t have to use that here, but if something isn’t supported, you can always fall back to SQL.</li>
</ul>
<p>Check out <a href="https://ibis-project.org/">The Ibis Website</a> for more information.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>data engineering</category>
  <category>case study</category>
  <category>duckdb</category>
  <category>performance</category>
  <guid>https://ibis-project.org/posts/campaign-finance/index.html</guid>
  <pubDate>Fri, 24 Mar 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis sneak peek: writing to files</title>
  <dc:creator>Kae Suarez</dc:creator>
  <link>https://ibis-project.org/posts/ibis-to-file/index.html</link>
  <description><![CDATA[ 




<p>Ibis 5.0 is coming soon and will offer new functionality and fixes to users. To enhance clarity around this process, we’re sharing a sneak peek into what we’re working on.</p>
<p>In Ibis 4.0, we added the ability to read CSVs and Parquet via the Ibis interface. We felt this was important because, well, the ability to read files is simply necessary, be it on a local scale, legacy data, data not yet in a database, and so on. However, for a user, the natural next question was “can I go ahead and write when I’m done?” The answer was no. We didn’t like that, especially since we do care about file-based use cases.</p>
<p>So, we’ve gone ahead and fixed that for Ibis 5.0.</p>
<section id="files-in-files-out" class="level2">
<h2 class="anchored" data-anchor-id="files-in-files-out">Files in, Files out</h2>
<p>Before we can write a file, we need data — so let’s read in a file, to start this off:</p>
<div id="1c631a25" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-2"></span>
<span id="cb1-3">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.read_csv(</span>
<span id="cb1-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://storage.googleapis.com/ibis-examples/data/penguins.csv.gz"</span></span>
<span id="cb1-7">)</span>
<span id="cb1-8">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p>Of course, we could just write out, but let’s do an operation first — how about using selectors, which you can read more about <a href="https://ibis-project.org/blog/selectors/">here</a>? Self-promotion aside, here’s an operation:</p>
<div id="4988920a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> s</span>
<span id="cb2-3"></span>
<span id="cb2-4">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb2-5">    t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb2-6">     .mutate(s.across(s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>), (_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std()))</span>
<span id="cb2-7">)</span>
<span id="cb2-8">expr</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.423513</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.366874</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.312925</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.053074</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.979426</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.126283</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.842104</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.380180</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.542615</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.613453</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.924596</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.179266</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.641513</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.366874</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.451665</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.091799</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.222043</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.359177</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.007089</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.434698</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.392432</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.934527</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.077514</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.743124</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.129610</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.866019</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.230432</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.634089</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.747686</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.126283</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.465843</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.437586</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.860324</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.284681</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.216254</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.200835</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.754151</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.044090</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.771678</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.434698</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p>Now, finally, time to do the exciting part:</p>
<div id="717f6f14" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">expr.to_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalized.parquet"</span>)</span></code></pre></div>
</div>
<p>Like many things in Ibis, this is as simple and plain-looking as it is important. Being able to create files from Ibis instead of redirecting into other libraries first enables operation at larger scales and fewer steps. Where desired, you can address a backend directly to use its native export functionality — we want to make sure you have the flexibility to use Ibis or the backend as you see fit.</p>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping Up</h2>
<p>Ibis is an interface tool for analytical engines that can reach scales far beyond a laptop. Files are important to Ibis because:</p>
<ul>
<li>Ibis also supports local execution, where files are the standard unit of data — we want to support all our users.</li>
<li>Files are useful for moving between platforms, and long-term storage that isn’t tied to a particular backend.</li>
<li>Files can move more easily between our backends than database files, so we think this adds some convenience for the multi-backend use case.</li>
</ul>
<p>We’re excited to release this functionality in Ibis 5.0.</p>
<p>Interested in Ibis? Docs are available on this very website, at:</p>
<ul>
<li><a href="https://ibis-project.org/">Ibis Docs</a></li>
</ul>
<p>and the repo is always at:</p>
<ul>
<li><a href="https://github.com/ibis-project/ibis">Ibis GitHub</a></li>
</ul>
<p>Please feel free to reach out on GitHub!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>io</category>
  <category>new feature</category>
  <category>sneak peek</category>
  <guid>https://ibis-project.org/posts/ibis-to-file/index.html</guid>
  <pubDate>Thu, 09 Mar 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis sneak peek: examples</title>
  <dc:creator>Kae Suarez</dc:creator>
  <link>https://ibis-project.org/posts/ibis-examples/index.html</link>
  <description><![CDATA[ 




<p>Ibis has been moving quickly to provide a powerful but easy-to-use interface for interacting with analytical engines. However, as we’re approaching the 5.0 release of Ibis, we’ve realized that moving from not knowing Ibis to writing a first expression is not trivial.</p>
<p>As is, in our tutorial structure, work must be done on the user’s part — though we do provide the commands — to download a SQLite database onto disk, which can only be used with said backend. We feel that this put too much emphasis on a single backend, and added too much effort into picking the right backend for the first tutorial. We want minimal steps between users and learning the Ibis API.</p>
<p>This is why we’ve added the <code>ibis.examples</code> module.</p>
<section id="getting-started-with-examples" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-examples">Getting Started with Examples</h2>
<p>This module offers in-Ibis access to multiple small tables (the largest is around only 30k rows), which are downloaded when requested and immediately read into the backend upon completion. We worked to keep pulling in examples simple, so it looks like this:</p>
<div id="d32ab650" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis.examples <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ex</span>
<span id="cb1-3"></span>
<span id="cb1-4">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-5"></span>
<span id="cb1-6">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ex.penguins.fetch()</span>
<span id="cb1-7">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p>Another advantage of this new method is that we were able to register all of them so you can tab-complete, as you can see here:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ibis-project.org/posts/ibis-examples/tab_complete.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Tab Complete</figcaption>
</figure>
</div>
<p>Once you’ve retrieved an example table, you can get straight to learning and experimenting, instead of struggling with just getting the data itself.</p>
<p>In the future, our tutorials will use the <em>examples</em> module to to help speed up learning of the Ibis framework.</p>
<p>Interested in Ibis? Docs are available on this very website, at:</p>
<ul>
<li><a href="https://ibis-project.org/">Ibis Docs</a></li>
</ul>
<p>and the repo is always at:</p>
<ul>
<li><a href="https://github.com/ibis-project/ibis">Ibis GitHub</a></li>
</ul>
<p>Please feel free to reach out on GitHub!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>new feature</category>
  <category>sneak peek</category>
  <guid>https://ibis-project.org/posts/ibis-examples/index.html</guid>
  <pubDate>Wed, 08 Mar 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Maximizing productivity with selectors</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/selectors/index.html</link>
  <description><![CDATA[ 




<p>Before Ibis 5.0 it’s been challenging to concisely express whole-table operations with ibis. Happily this is no longer the case in ibis 5.0.</p>
<p>Let’s jump right in!</p>
<p>We’ll look at selectors examples using the <a href="https://allisonhorst.github.io/palmerpenguins/"><code>palmerpenguins</code> data set</a> with the <a href="../../backends/duckdb.html">DuckDB backend</a>.</p>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<div id="ba6b57fd" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis.interactive <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ex.penguins.fetch()</span>
<span id="cb1-4">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
</section>
<section id="examples" class="level2">
<h2 class="anchored" data-anchor-id="examples">Examples</h2>
<section id="normalization" class="level3">
<h3 class="anchored" data-anchor-id="normalization">Normalization</h3>
<p>Let’s say you want to compute the <a href="https://en.wikipedia.org/wiki/Standard_score">z-score</a> of every numeric column and replace the existing data with that normalized value. Here’s how you’d do that with selectors:</p>
<div id="c36a2829" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">t.mutate(s.across(s.numeric(), (_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year      </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>   │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.883205</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.784300</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.416272</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.563317</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.809939</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.126003</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.060696</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.500969</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.663408</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.429833</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.420660</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.186793</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.322799</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.088129</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.562890</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.937403</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.846572</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.746426</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.776236</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.688012</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.919837</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.328556</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.416272</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.719186</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.864888</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.240044</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.420660</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.590115</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.799025</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.480471</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.562890</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.906229</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.352029</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.543873</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.776236</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.060160</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.257484</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────────┘
</pre>
</div>
</div>
</section>
<section id="whats-up-with-the-year-column" class="level3">
<h3 class="anchored" data-anchor-id="whats-up-with-the-year-column">What’s Up With the <code>year</code> Column?</h3>
<p>Whoops, looks like we included <code>year</code> in our normalization because it’s an <code>int64</code> column (and therefore numeric) but normalizing the year doesn’t make sense.</p>
<p>We can exclude <code>year</code> from the normalization using another selector:</p>
<div id="7c987863" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">t.mutate(s.across(s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>), (_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.883205</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.784300</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.416272</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.563317</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.809939</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.126003</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.060696</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.500969</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.663408</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.429833</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.420660</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.186793</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.322799</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.088129</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.562890</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.937403</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.846572</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.746426</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.776236</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.688012</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.919837</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.328556</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.416272</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.719186</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.864888</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.240044</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.420660</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.590115</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.799025</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.480471</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.562890</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.906229</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.352029</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.543873</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.776236</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.060160</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p><code>c</code> is short for “column” and the <code>~</code> means “negate”. Combining those we get “not the year column”!</p>
<p>Pretty neat right?</p>
</section>
<section id="composable-group-by" class="level3">
<h3 class="anchored" data-anchor-id="composable-group-by">Composable Group By</h3>
<p>The power of this approach comes in when you want the grouped version. Perhaps we think some of these columns vary by species.</p>
<p>With selectors, all you need to do is slap a <code>.group_by("species")</code> onto <code>t</code>:</p>
<div id="fe399083" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>).mutate(</span>
<span id="cb4-2">    s.across(s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>), (_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std())</span>
<span id="cb4-3">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.791697</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.270997</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.160007</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.001444</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.467524</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.038103</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.924596</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.816322</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.378692</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.619441</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.910418</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.070231</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.860324</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.284681</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.216254</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.200835</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.785232</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.783827</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.465843</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.546622</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.190962</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.852335</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.007089</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.110480</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.040778</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.449067</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.369172</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.164997</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.153416</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.030405</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.771678</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.124749</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.761426</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.202489</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.465843</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.492104</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.204702</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.523563</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.007089</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.197947</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p>Since ibis translates this into a run-of-the-mill selection as if you had called <code>select</code> or <code>mutate</code> without selectors, nothing special is needed for a backend to work with these new constructs.</p>
<p>Let’s look at some more examples.</p>
</section>
<section id="min-max-normalization" class="level3">
<h3 class="anchored" data-anchor-id="min-max-normalization">Min-max Normalization</h3>
<p>Grouped min/max normalization? Easy:</p>
<div id="f95a9fbf" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>).mutate(</span>
<span id="cb5-2">    s.across(s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>), (_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()))</span>
<span id="cb5-3">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.633094</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.216667</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.500000</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.441558</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.762590</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.466667</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.631579</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.636364</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.553957</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.600000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.315789</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.935065</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.316547</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.416667</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.263158</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.155844</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.330935</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.633333</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.552632</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.311688</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.517986</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.850000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.473684</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.415584</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.489209</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.383333</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.236842</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.402597</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.510791</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.683333</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.605263</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.948052</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.143885</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.433333</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.552632</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.324675</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.712230</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.783333</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.473684</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.727273</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
</section>
<section id="casting-and-munging" class="level3">
<h3 class="anchored" data-anchor-id="casting-and-munging">Casting and Munging</h3>
<p>How about casting every column whose name ends with any of the strings <code>"mm"</code> or <code>"g"</code> to a <code>float32</code>? No problem!</p>
<div id="c1d8dafb" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">t.mutate(s.across(s.endswith((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>)), _.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float32"</span>)))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float32</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.099998</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.700001</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750.0</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.500000</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.400000</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800.0</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.299999</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.000000</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250.0</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.700001</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.299999</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450.0</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.299999</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.600000</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650.0</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.900002</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.799999</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625.0</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.200001</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.600000</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675.0</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.099998</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.100000</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475.0</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.000000</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.200001</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190.0</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250.0</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
<p>We can make all string columns have the same case too!</p>
<div id="bb938f39" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">t.mutate(s.across(s.of_type(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>), _.lower()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> year  </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3750</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">186</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3800</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3250</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3450</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3650</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">181</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3625</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4675</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">193</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3475</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #008000; text-decoration-color: #008000">adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">190</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4250</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>   │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘
</pre>
</div>
</div>
</section>
<section id="multiple-computations-per-column" class="level3">
<h3 class="anchored" data-anchor-id="multiple-computations-per-column">Multiple Computations per Column</h3>
<p>What if I want to compute multiple things? Heck yeah!</p>
<div id="d4c94ff9" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>).mutate(</span>
<span id="cb8-2">    s.across(</span>
<span id="cb8-3">        s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>),</span>
<span id="cb8-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(centered<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean(), zscore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std()),</span>
<span id="cb8-5">    )</span>
<span id="cb8-6">).select(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>, s.endswith((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_centered"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_zscore"</span>)))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> bill_length_mm_centered </span>┃<span style="font-weight: bold"> bill_depth_mm_centered </span>┃<span style="font-weight: bold"> flipper_length_mm_centered </span>┃<span style="font-weight: bold"> body_mass_g_centered </span>┃<span style="font-weight: bold"> bill_length_mm_zscore </span>┃<span style="font-weight: bold"> bill_depth_mm_zscore </span>┃<span style="font-weight: bold"> flipper_length_mm_zscore </span>┃<span style="font-weight: bold"> body_mass_g_zscore </span>┃
┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>            │
├────────┼─────────────────────────┼────────────────────────┼────────────────────────────┼──────────────────────┼───────────────────────┼──────────────────────┼──────────────────────────┼────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.10303</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.925455</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.636364</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">937.727273</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.836760</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.072270</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.930851</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.407635</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.20303</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.425455</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10.636364</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">712.727273</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.245342</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.350716</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.850856</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.069885</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.09697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.674545</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-12.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-462.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.651271</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.375649</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.989030</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.693924</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-5.89697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.874545</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-10.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-562.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.202610</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.487027</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.829039</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.844035</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.99697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.174545</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-15.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-662.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.203319</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.654095</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.229015</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.994147</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-5.49697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.374545</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-12.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-162.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.121035</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.765473</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.989030</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.243590</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.39697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.574545</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-412.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.692768</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.433743</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.189079</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.618868</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-7.69697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.974545</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-13.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-537.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.569697</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.099608</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.069025</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.806507</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.29697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.874545</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-23.363636</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-462.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.876311</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.043919</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.868975</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.693924</span> │
│ <span style="color: #008000; text-decoration-color: #008000">female</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-6.19697</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.774545</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.363636</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-62.272727</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.263791</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.545122</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.669049</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.093478</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │                       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                          <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                  <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└────────┴─────────────────────────┴────────────────────────┴────────────────────────────┴──────────────────────┴───────────────────────┴──────────────────────┴──────────────────────────┴────────────────────┘
</pre>
</div>
</div>
<p>Don’t like the naming convention?</p>
<p>Pass a function to make your own name!</p>
<div id="aeb79ffa" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">t.select(s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill"</span>)).mutate(</span>
<span id="cb9-2">    s.across(</span>
<span id="cb9-3">        s.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(),</span>
<span id="cb9-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean(), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()),</span>
<span id="cb9-5">        names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> col, fn: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>col<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_improved"</span>,</span>
<span id="cb9-6">    )</span>
<span id="cb9-7">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> bill_length_mm_x_improved </span>┃<span style="font-weight: bold"> bill_depth_mm_x_improved </span>┃<span style="font-weight: bold"> bill_length_mm_y_improved </span>┃<span style="font-weight: bold"> bill_depth_mm_y_improved </span>┃
┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │
├────────────────┼───────────────┼───────────────────────────┼──────────────────────────┼───────────────────────────┼──────────────────────────┤
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.82193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.54883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.42193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">40.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.0</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.62193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.84883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">nan</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36.7</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.3</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-7.22193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.14883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.3</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.6</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.62193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.44883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">38.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.8</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-5.02193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.64883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.2</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19.6</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.72193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.44883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">34.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.1</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-9.82193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.94883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">42.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20.2</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.92193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.04883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                        <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└────────────────┴───────────────┴───────────────────────────┴──────────────────────────┴───────────────────────────┴──────────────────────────┘
</pre>
</div>
</div>
<p>Don’t like lambda functions? We support a format string too!</p>
<div id="5f3dd2c1" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">t.select(s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill"</span>)).mutate(</span>
<span id="cb10-2">    s.across(</span>
<span id="cb10-3">        s.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(),</span>
<span id="cb10-4">        func<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean(), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()),</span>
<span id="cb10-5">        names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{col}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{fn}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_improved"</span>,</span>
<span id="cb10-6">    )</span>
<span id="cb10-7">).head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> bill_length_mm_x_improved </span>┃<span style="font-weight: bold"> bill_depth_mm_x_improved </span>┃<span style="font-weight: bold"> bill_length_mm_y_improved </span>┃<span style="font-weight: bold"> bill_depth_mm_y_improved </span>┃
┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │
├────────────────┼───────────────┼───────────────────────────┼──────────────────────────┼───────────────────────────┼──────────────────────────┤
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.7</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.82193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.54883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
│           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39.5</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.4</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-4.42193</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.24883</span> │                      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │                     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │
└────────────────┴───────────────┴───────────────────────────┴──────────────────────────┴───────────────────────────┴──────────────────────────┘
</pre>
</div>
</div>
</section>
<section id="working-with-other-ibis-apis" class="level3">
<h3 class="anchored" data-anchor-id="working-with-other-ibis-apis">Working with other Ibis APIs</h3>
<p>We’ve seen lots of mutate use, but selectors also work with <code>.agg</code>:</p>
<div id="6b61a552" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">t.group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>).agg(s.across(s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>), _.mean())).order_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> year  </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃
┡━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>     │
├───────┼────────────────┼───────────────┼───────────────────┼─────────────┤
│  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2007</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">43.740367</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.427523</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196.880734</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4124.541284</span> │
│  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2008</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">43.541228</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16.914035</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">202.798246</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4266.666667</span> │
│  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2009</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44.452941</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.125210</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">202.806723</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4210.294118</span> │
└───────┴────────────────┴───────────────┴───────────────────┴─────────────┘
</pre>
</div>
</div>
<p>Naturally, selectors work in grouping keys too, for even more convenience:</p>
<div id="4d5a0118" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">t.group_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>)).mutate(</span>
<span id="cb12-2">    s.across(s.numeric() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>s.c(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(centered<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean(), std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.std()))</span>
<span id="cb12-3">).select(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, s.endswith((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_centered"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_std"</span>)))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> bill_length_mm_centered </span>┃<span style="font-weight: bold"> bill_depth_mm_centered </span>┃<span style="font-weight: bold"> flipper_length_mm_centered </span>┃<span style="font-weight: bold"> body_mass_g_centered </span>┃<span style="font-weight: bold"> bill_length_mm_std </span>┃<span style="font-weight: bold"> bill_depth_mm_std </span>┃<span style="font-weight: bold"> flipper_length_mm_std </span>┃<span style="font-weight: bold"> body_mass_g_std </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>         │
├─────────┼─────────────────────────┼────────────────────────┼────────────────────────────┼──────────────────────┼────────────────────┼───────────────────┼───────────────────────┼─────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.46</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.400000</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.600000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-170.000000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.327780</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.681909</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.302173</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">189.076704</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.96</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.200000</span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.400000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">180.000000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.327780</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.681909</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.302173</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">189.076704</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.36</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.100000</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.600000</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">30.000000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.327780</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.681909</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.302173</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">189.076704</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │                    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.44</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.300000</span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.400000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-220.000000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.327780</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.681909</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.302173</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">189.076704</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │                    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.34</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.600000</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.600000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">180.000000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.327780</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.681909</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.302173</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">189.076704</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │                    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.00</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.935294</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.117647</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">147.058824</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.056755</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.670766</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.973459</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">349.763576</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │                    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.00</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.164706</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.882353</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">147.058824</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.056755</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.670766</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.973459</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">349.763576</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.40</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.864706</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.882353</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-152.941176</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.056755</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.670766</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.973459</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">349.763576</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.30</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.064706</span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.117647</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-352.941176</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.056755</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.670766</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.973459</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">349.763576</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │                   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.20</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.035294</span> │                  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.882353</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-402.941176</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.056755</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.670766</span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.973459</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">349.763576</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>       │                       <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                          <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                    <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                  <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                     <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└─────────┴─────────────────────────┴────────────────────────┴────────────────────────────┴──────────────────────┴────────────────────┴───────────────────┴───────────────────────┴─────────────────┘
</pre>
</div>
</div>
</section>
<section id="filtering-selectors" class="level3">
<h3 class="anchored" data-anchor-id="filtering-selectors">Filtering Selectors</h3>
<p>You can also express complex filters more concisely.</p>
<p>Let’s say we only want to keep rows where all the bill size z-score related columns’ absolute values are greater than 2.</p>
<div id="c4a578ce" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">t.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>).group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>).mutate(</span>
<span id="cb13-2">    s.across(s.numeric(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(zscore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std()))</span>
<span id="cb13-3">).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(s.if_all(s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> s.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_zscore"</span>), _.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> species </span>┃<span style="font-weight: bold"> island    </span>┃<span style="font-weight: bold"> bill_length_mm </span>┃<span style="font-weight: bold"> bill_depth_mm </span>┃<span style="font-weight: bold"> flipper_length_mm </span>┃<span style="font-weight: bold"> body_mass_g </span>┃<span style="font-weight: bold"> sex    </span>┃<span style="font-weight: bold"> bill_length_mm_zscore </span>┃<span style="font-weight: bold"> bill_depth_mm_zscore </span>┃<span style="font-weight: bold"> flipper_length_mm_zscore </span>┃<span style="font-weight: bold"> body_mass_g_zscore </span>┃
┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>            │
├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────────────────────┼──────────────────────┼──────────────────────────┼────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Torgersen</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">46.0</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21.5</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">194</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4200</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.706539</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.592071</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.618760</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.088911</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Adelie </span> │ <span style="color: #008000; text-decoration-color: #008000">Dream    </span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">32.1</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15.5</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">188</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3050</span> │ <span style="color: #008000; text-decoration-color: #008000">female</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.512345</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.339505</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-0.298747</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.418906</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">55.9</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">228</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5600</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.724046</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.056508</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.667394</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.039411</span> │
│ <span style="color: #008000; text-decoration-color: #008000">Gentoo </span> │ <span style="color: #008000; text-decoration-color: #008000">Biscoe   </span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">59.6</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17.0</span> │               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">230</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6050</span> │ <span style="color: #008000; text-decoration-color: #008000">male  </span> │              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.924621</span> │             <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.056508</span> │                 <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.975799</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.932062</span> │
└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────────────────────┴──────────────────────┴──────────────────────────┴────────────────────┘
</pre>
</div>
</div>
</section>
<section id="bonus-generated-sql" class="level3">
<h3 class="anchored" data-anchor-id="bonus-generated-sql">Bonus: Generated SQL</h3>
<p>The SQL for that last expression is pretty gnarly:</p>
<div id="9890792a" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">ibis.to_sql(</span>
<span id="cb14-2">    t.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>)</span>
<span id="cb14-3">    .group_by(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb14-4">    .mutate(s.across(s.numeric(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(zscore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.std())))</span>
<span id="cb14-5">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(s.if_all(s.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> s.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_zscore"</span>), _.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb14-6">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WITH</span> t0 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb15-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb15-3">    t2.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> species,</span>
<span id="cb15-4">    t2.island <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> island,</span>
<span id="cb15-5">    t2.bill_length_mm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> bill_length_mm,</span>
<span id="cb15-6">    t2.bill_depth_mm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> bill_depth_mm,</span>
<span id="cb15-7">    t2.flipper_length_mm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> flipper_length_mm,</span>
<span id="cb15-8">    t2.body_mass_g <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> body_mass_g,</span>
<span id="cb15-9">    t2.sex <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> sex</span>
<span id="cb15-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> main._ibis_examples_penguins_mqqdnfaydfbevoowdsf7djbsom <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> t2</span>
<span id="cb15-11">), t1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb15-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb15-13">    t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> species,</span>
<span id="cb15-14">    t0.island <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> island,</span>
<span id="cb15-15">    t0.bill_length_mm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> bill_length_mm,</span>
<span id="cb15-16">    t0.bill_depth_mm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> bill_depth_mm,</span>
<span id="cb15-17">    t0.flipper_length_mm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> flipper_length_mm,</span>
<span id="cb15-18">    t0.body_mass_g <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> body_mass_g,</span>
<span id="cb15-19">    t0.sex <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> sex,</span>
<span id="cb15-20">    (</span>
<span id="cb15-21">      t0.bill_length_mm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AVG</span>(t0.bill_length_mm) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>)</span>
<span id="cb15-22">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">STDDEV_SAMP</span>(t0.bill_length_mm) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> bill_length_mm_zscore,</span>
<span id="cb15-23">    (</span>
<span id="cb15-24">      t0.bill_depth_mm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AVG</span>(t0.bill_depth_mm) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>)</span>
<span id="cb15-25">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">STDDEV_SAMP</span>(t0.bill_depth_mm) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> bill_depth_mm_zscore,</span>
<span id="cb15-26">    (</span>
<span id="cb15-27">      t0.flipper_length_mm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AVG</span>(t0.flipper_length_mm) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>)</span>
<span id="cb15-28">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">STDDEV_SAMP</span>(t0.flipper_length_mm) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> flipper_length_mm_zscore,</span>
<span id="cb15-29">    (</span>
<span id="cb15-30">      t0.body_mass_g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AVG</span>(t0.body_mass_g) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>)</span>
<span id="cb15-31">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">STDDEV_SAMP</span>(t0.body_mass_g) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.species <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ROWS</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BETWEEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PRECEDING</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">UNBOUNDED</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FOLLOWING</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> body_mass_g_zscore</span>
<span id="cb15-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> t0</span>
<span id="cb15-33">)</span>
<span id="cb15-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb15-35">  t1.species,</span>
<span id="cb15-36">  t1.island,</span>
<span id="cb15-37">  t1.bill_length_mm,</span>
<span id="cb15-38">  t1.bill_depth_mm,</span>
<span id="cb15-39">  t1.flipper_length_mm,</span>
<span id="cb15-40">  t1.body_mass_g,</span>
<span id="cb15-41">  t1.sex,</span>
<span id="cb15-42">  t1.bill_length_mm_zscore,</span>
<span id="cb15-43">  t1.bill_depth_mm_zscore,</span>
<span id="cb15-44">  t1.flipper_length_mm_zscore,</span>
<span id="cb15-45">  t1.body_mass_g_zscore</span>
<span id="cb15-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> t1</span>
<span id="cb15-47"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHERE</span></span>
<span id="cb15-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ABS</span>(t1.bill_length_mm_zscore) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CAST</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> TINYINT)</span>
<span id="cb15-49">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AND</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ABS</span>(t1.bill_depth_mm_zscore) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CAST</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> TINYINT)</span></code></pre></div>
</div>
</div>
<p>Good thing you didn’t have to write that by hand!</p>
</section>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This blog post illustrates the ability to apply computations to many columns at once and the power of ibis as a composable, expressive library for analytics.</p>
<ul>
<li><a href="../../contribute/index.html">Get involved!</a></li>
<li><a href="https://github.com/ibis-project/ibis/issues/new/choose">Report issues!</a></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>new feature</category>
  <category>productivity</category>
  <category>duckdb</category>
  <guid>https://ibis-project.org/posts/selectors/index.html</guid>
  <pubDate>Mon, 27 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis + Substrait + DuckDB</title>
  <dc:creator>Gil Forsyth</dc:creator>
  <link>https://ibis-project.org/posts/ibis_substrait_to_duckdb/index.html</link>
  <description><![CDATA[ 




<p>Ibis strives to provide a consistent interface for interacting with a multitude of different analytical execution engines, most of which (but not all) speak some dialect of SQL.</p>
<p>Today, Ibis accomplishes this with a lot of help from <code>sqlalchemy</code> and <code>sqlglot</code> to handle differences in dialect, or we interact directly with available Python bindings (for instance with the <code>pandas</code>, <code>datafusion</code>, and <code>polars</code> backends).</p>
<p>Ibis goes to <u>great</u> lengths to generate sane and consistent SQL for those backends that use it. We are also interested in exploring other means of communicating consistently with those backends.</p>
<p><a href="https://substrait.io/">Substrait</a> is a new cross-language serialization format for communicating (among other things) query plans. It’s still in its early days, but there is already nascent support for Substrait in <a href="https://arrow.apache.org/docs/dev/cpp/streaming_execution.html#substrait">Apache Arrow</a>, <a href="https://duckdb.org/docs/extensions/substrait">DuckDB</a>, and <a href="https://engineering.fb.com/2022/08/31/open-source/velox/">Velox</a>.</p>
<p>Ibis supports producing Substrait plans from Ibis table expressions, with the help of the <a href="https://github.com/ibis-project/ibis-substrait">ibis-substrait</a> library. Let’s take a quick peek at how we might use it for query execution.</p>
<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting started</h2>
<p>First, we can create a <code>conda</code> environment using the latest versions of <code>duckdb</code>, <code>ibis</code>, and <code>ibis_substrait</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> ibis_substrait_duckdb ibis-framework==4.1 ibis-substrait==2.19 ipython python-duckdb parsy==2</span></code></pre></div>
<p>Next, we’ll need to choose a dataset. For this example, we’ll use data from IMDB, available through their <a href="https://datasets.imdbws.com/">dataset portal</a>.</p>
<p>For convenience, I used <a href="https://github.com/saulpw/readysetdata">Ready, Set, Data!</a> to grab the data in <code>parquet</code> format and then insert it into a DuckDB database.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> duckdb</span>
<span id="cb2-2">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> duckdb.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/gil/imdb.ddb"</span>)</span>
<span id="cb2-3">con.execute(</span>
<span id="cb2-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CREATE TABLE ratings AS SELECT * FROM '/home/gil/data/imdb/imdb_ratings.parquet'"</span></span>
<span id="cb2-5">)</span>
<span id="cb2-6">con.execute(</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CREATE TABLE basics AS SELECT * FROM '/home/gil/data/imdb/imdb_basics.parquet'"</span></span>
<span id="cb2-8">)</span></code></pre></div>
</section>
<section id="query-creation" class="level2">
<h2 class="anchored" data-anchor-id="query-creation">Query Creation</h2>
<p>For our example, we’ll build up a query using Ibis but without connecting to our execution engine (DuckDB). Once we have an Ibis table expression, we’ll create a Substrait plan, then execute that plan directly on DuckDB to get results.</p>
<p>To do this, all we need is some knowledge of the schema of the tables we want to interact with. We might get these schema from a metadata store, or possibly a coworker, or a friendly mouse.</p>
<p>However we arrive at it, if we know the column names and the datatypes, we can build up a query in Ibis, so let’s do that.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb3-3"></span>
<span id="cb3-4">ratings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.table(</span>
<span id="cb3-5">    [</span>
<span id="cb3-6">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tconst"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"averageRating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numVotes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-9">    ],</span>
<span id="cb3-10">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ratings"</span>,</span>
<span id="cb3-11">)</span>
<span id="cb3-12"></span>
<span id="cb3-13">basics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.table(</span>
<span id="cb3-14">    [</span>
<span id="cb3-15">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tconst"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-16">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"titleType"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-17">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primaryTitle"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-18">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"originalTitle"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-19">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"isAdult"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-20">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"startYear"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-21">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endYear"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-22">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"runtimeMinutes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-23">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genres"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str"</span>),</span>
<span id="cb3-24">    ],</span>
<span id="cb3-25">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"basics"</span>,</span>
<span id="cb3-26">)</span></code></pre></div>
<p>Now that those tables are represented in Ibis, we can start creating our query. We’ll try to recreate the top-ten movies on the IMDB leaderboard. For that, we’ll need movie titles and their respective ratings.</p>
<p>We know that the data we have for <code>ratings</code> looks something like the following:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━┓</span>
<span id="cb4-2">┃ tconst    ┃ averageRating ┃ numVotes ┃</span>
<span id="cb4-3">┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━┩</span>
<span id="cb4-4">│ string    │ string        │ string   │</span>
<span id="cb4-5">├───────────┼───────────────┼──────────┤</span>
<span id="cb4-6">│ tt0000001 │ <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.7</span>           │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1919</span>\n   │</span>
<span id="cb4-7">│ tt0000002 │ <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.8</span>           │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">260</span>\n    │</span>
<span id="cb4-8">│ tt0000003 │ <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>           │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1726</span>\n   │</span>
<span id="cb4-9">│ tt0000004 │ <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.6</span>           │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>\n    │</span>
<span id="cb4-10">│ tt0000005 │ <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.2</span>           │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2541</span>\n   │</span>
<span id="cb4-11">└───────────┴───────────────┴──────────┘</span></code></pre></div>
<p>Based on the column names alone, <code>averageRating</code> is almost certainly supposed to be a <code>float</code>, and <code>numVotes</code> should be an <code>integer</code>. We can cast those so we can make useful comparisons between ratings and vote numbers.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">ratings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ratings.select(</span>
<span id="cb5-2">    ratings.tconst,</span>
<span id="cb5-3">    avg_rating<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ratings.averageRating.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float"</span>),</span>
<span id="cb5-4">    num_votes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ratings.numVotes.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"int"</span>),</span>
<span id="cb5-5">)</span></code></pre></div>
<p>The first few rows of <code>basics</code> looks like this:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━┓</span>
<span id="cb6-2">┃ tconst    ┃ titleType ┃ primaryTitle           ┃ originalTitle          ┃ isAdult ┃ startYear ┃ … ┃</span>
<span id="cb6-3">┡━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━┩</span>
<span id="cb6-4">│ string    │ string    │ string                 │ string                 │ string  │ string    │ … │</span>
<span id="cb6-5">├───────────┼───────────┼────────────────────────┼────────────────────────┼─────────┼───────────┼───┤</span>
<span id="cb6-6">│ tt0000001 │ short     │ Carmencita             │ Carmencita             │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>       │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1894</span>      │ … │</span>
<span id="cb6-7">│ tt0000002 │ short     │ Le clown et ses chiens │ Le clown et ses chiens │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>       │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1892</span>      │ … │</span>
<span id="cb6-8">│ tt0000003 │ short     │ Pauvre Pierrot         │ Pauvre Pierrot         │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>       │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1892</span>      │ … │</span>
<span id="cb6-9">│ tt0000004 │ short     │ Un bon bock            │ Un bon bock            │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>       │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1892</span>      │ … │</span>
<span id="cb6-10">│ tt0000005 │ short     │ Blacksmith Scene       │ Blacksmith Scene       │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>       │ <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1893</span>      │ … │</span>
<span id="cb6-11">└───────────┴───────────┴────────────────────────┴────────────────────────┴─────────┴───────────┴───┘</span></code></pre></div>
<p>In the interest of keeping things family-friendly, we can filter out any adult films. We can filter out any IMDB titles that aren’t movies, then select out the columns <code>tconst</code> and <code>primaryTitle</code>. And we’ll include <code>startYear</code> just in case it’s interesting.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">basics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basics.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>([basics.titleType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"movie"</span>, basics.isAdult <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>]).select(</span>
<span id="cb7-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tconst"</span>,</span>
<span id="cb7-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primaryTitle"</span>,</span>
<span id="cb7-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"startYear"</span>,</span>
<span id="cb7-5">)</span></code></pre></div>
<p>With the data (lightly) cleaned up, we can construct our query for top films. We want to join the two tables <code>ratings</code> and <code>basics</code>. Then we’ll order them by <code>avg_rating</code> and <code>num_votes</code>, and include an additional filter that the movie has to have at least 200,000 votes.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">topfilms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb8-2">    ratings.join(basics, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tconst"</span>)</span>
<span id="cb8-3">    .order_by([_.avg_rating.desc(), _.num_votes.desc()])</span>
<span id="cb8-4">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(_.num_votes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200_000</span>)</span>
<span id="cb8-5">    .limit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb8-6">)</span></code></pre></div>
<p>Now that we have an Ibis table expression, it’s time for Substrait to enter the scene.</p>
</section>
<section id="substrait-serialization" class="level2">
<h2 class="anchored" data-anchor-id="substrait-serialization">Substrait Serialization</h2>
<p>We’re going to import <code>ibis_substrait</code> and compile the <code>topfilms</code> table expression into a Substrait plan.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis_substrait.compiler.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SubstraitCompiler</span>
<span id="cb9-2"></span>
<span id="cb9-3">compiler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SubstraitCompiler()</span>
<span id="cb9-4"></span>
<span id="cb9-5">plan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compiler.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(topfilms)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type(plan) --&gt; &lt;class 'substrait.ibis.plan_pb2.Plan'&gt;</span></span></code></pre></div>
<p>Substrait is built using <code>protobuf</code>. If you look at the <code>repr</code> for <code>plan</code>, you’ll see a LOOOONG JSON-ish representation of the Substrait plan. This representation is not really meant for human eyes.</p>
<p>We’ll serialize the Substrait plan to disk and open it up in a separate session, or on another machine, entirely. That’s one of the notions of Substrait: plans can be serialized and shuttled around between various systems. It’s similar to Ibis in that it allows a separation of plan creation from plan execution.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topfilms.proto"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb10-2">    f.write(plan.SerializeToString())</span></code></pre></div>
</section>
<section id="substrait-plan-execution" class="level2">
<h2 class="anchored" data-anchor-id="substrait-plan-execution">Substrait Plan Execution</h2>
<p>Now we can open up the serialized Substrait plan in a new session where we execute it using DuckDB directly. One important point to note here is that our plan refers to two tables, named <code>basics</code> and <code>ratings</code>. If those tables don’t exist in our execution engine, then this isn’t going to work.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> duckdb</span>
<span id="cb11-2"></span>
<span id="cb11-3">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> duckdb.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/gil/imdb.ddb"</span>)</span>
<span id="cb11-4"></span>
<span id="cb11-5">con.execute(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PRAGMA show_tables;"</span>).fetchall()</span></code></pre></div>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<colgroup>
<col class="org-left">
</colgroup>
<tbody>
<tr>
<td class="org-left">
basics
</td>
</tr>
<tr>
<td class="org-left">
ratings
</td>
</tr>
</tbody>
</table>
<p>Luckily, they do exist! Let’s install and load the DuckDB Substrait extension, then execute the Substrait plan, and finally grab our results.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">con.install_extension(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"substrait"</span>)</span>
<span id="cb12-2">con.load_extension(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"substrait"</span>)</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topfilms.proto"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb12-5">    plan_blob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read()</span>
<span id="cb12-6"></span>
<span id="cb12-7">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.from_substrait(plan_blob)</span>
<span id="cb12-8"></span>
<span id="cb12-9">result.fetchall()</span></code></pre></div>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<colgroup>
<col class="org-left">
<col class="org-right">
<col class="org-right">
<col class="org-left">
<col class="org-right">
</colgroup>
<tbody>
<tr>
<td class="org-left">
tt0111161
</td>
<td class="org-right">
9.3
</td>
<td class="org-right">
2651547
</td>
<td class="org-left">
The Shawshank Redemption
</td>
<td class="org-right">
1994
</td>
</tr>
<tr>
<td class="org-left">
tt0068646
</td>
<td class="org-right">
9.2
</td>
<td class="org-right">
1838044
</td>
<td class="org-left">
The Godfather
</td>
<td class="org-right">
1972
</td>
</tr>
<tr>
<td class="org-left">
tt0468569
</td>
<td class="org-right">
9.0
</td>
<td class="org-right">
2623735
</td>
<td class="org-left">
The Dark Knight
</td>
<td class="org-right">
2008
</td>
</tr>
<tr>
<td class="org-left">
tt0167260
</td>
<td class="org-right">
9.0
</td>
<td class="org-right">
1827464
</td>
<td class="org-left">
The Lord of the Rings: The Return of the King
</td>
<td class="org-right">
2003
</td>
</tr>
<tr>
<td class="org-left">
tt0108052
</td>
<td class="org-right">
9.0
</td>
<td class="org-right">
1343647
</td>
<td class="org-left">
Schindler’s List
</td>
<td class="org-right">
1993
</td>
</tr>
<tr>
<td class="org-left">
tt0071562
</td>
<td class="org-right">
9.0
</td>
<td class="org-right">
1259465
</td>
<td class="org-left">
The Godfather Part II
</td>
<td class="org-right">
1974
</td>
</tr>
<tr>
<td class="org-left">
tt0050083
</td>
<td class="org-right">
9.0
</td>
<td class="org-right">
782903
</td>
<td class="org-left">
12 Angry Men
</td>
<td class="org-right">
1957
</td>
</tr>
<tr>
<td class="org-left">
tt0110912
</td>
<td class="org-right">
8.9
</td>
<td class="org-right">
2029684
</td>
<td class="org-left">
Pulp Fiction
</td>
<td class="org-right">
1994
</td>
</tr>
<tr>
<td class="org-left">
tt1375666
</td>
<td class="org-right">
8.8
</td>
<td class="org-right">
2325417
</td>
<td class="org-left">
Inception
</td>
<td class="org-right">
2010
</td>
</tr>
<tr>
<td class="org-left">
tt0137523
</td>
<td class="org-right">
8.8
</td>
<td class="org-right">
2096752
</td>
<td class="org-left">
Fight Club
</td>
<td class="org-right">
1999
</td>
</tr>
</tbody>
</table>
<p>That looks about right to me. There may be some small differences with the current Top 10 list on IMDB if our data are a little stale.</p>
<p>It’s early days still for Substrait, but it’s exciting to see how far it’s come in the last 18 months!</p>
</section>
<section id="why-wouldnt-i-just-use-sql-for-this" class="level2">
<h2 class="anchored" data-anchor-id="why-wouldnt-i-just-use-sql-for-this">Why wouldn’t I just use SQL for this?</h2>
<p>It’s a fair question. SQL <em>is</em> everywhere, after all.</p>
<p>There are a few reasons we think you shouldn’t ignore Substrait.</p>
<section id="standards" class="level3">
<h3 class="anchored" data-anchor-id="standards">Standards</h3>
<p>SQL has a standard, but how closely do engines follow the standard? In our experience, queries don’t translate well between engines (this is one reason Ibis exists!)</p>
</section>
<section id="extensibility" class="level3">
<h3 class="anchored" data-anchor-id="extensibility">Extensibility</h3>
<p>Substrait is more extensible than SQL. Some DBMS have added in some very cool features, but it usually involves diverging (sometimes widely) from the SQL standard. Substrait has an extension system that allows plan producers and plan consumers to agree on a well-typed and well-defined interaction that exists outside of the core Substrait specification.</p>
</section>
<section id="serialization-and-parsing" class="level3">
<h3 class="anchored" data-anchor-id="serialization-and-parsing">Serialization and parsing</h3>
<p>Parsing SQL can be a big pain (trust us). If you send a big string over the wire, you need the engine on the other side to have a SQL parser to understand what the message is. Now, obviously, SQL engines have those. But here, again, standards (or lack of adherence to standards) can bite you. Extensibility is also difficult here, because now the SQL parser needs to understand some new custom syntax.</p>
<p>Protobuf is hardly a dream to work with, but it’s a lot easier to consistently define behavior AND to validate that behavior is correct. It’s also smaller than raw text.</p>
</section>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping Up</h2>
<p>That’s all for now! To quickly summarize:</p>
<p>Substrait is a new standard for representing relational algebra queries with support in <a href="https://arrow.apache.org/docs/dev/cpp/streaming_execution.html#substrait">Apache Arrow</a>, <a href="https://duckdb.org/docs/extensions/substrait">DuckDB</a>, <a href="https://engineering.fb.com/2022/08/31/open-source/velox/">Velox</a>, and more (and more to come!).</p>
<p>Ibis can now generate substrait instead of string SQL, letting it take advantage of this new standard.</p>
<p>Interested in substrait or ibis? Docs are available at</p>
<ul>
<li><a href="https://substrait.io/">Substrait</a></li>
<li><a href="https://ibis-project.org">Ibis Docs</a></li>
</ul>
<p>and the relevant GitHub repos are</p>
<ul>
<li><a href="https://github.com/substrait-io/substrait">Substrait GitHub</a></li>
<li><a href="https://github.com/ibis-project/ibis-substrait">Ibis Substrait GitHub</a></li>
<li><a href="https://github.com/ibis-project/ibis">Ibis GitHub</a></li>
</ul>
<p>Please feel free to reach out on GitHub!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>substrait</category>
  <category>ecosystem</category>
  <category>duckdb</category>
  <guid>https://ibis-project.org/posts/ibis_substrait_to_duckdb/index.html</guid>
  <pubDate>Wed, 01 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Analysis of Ibis’s CI performance</title>
  <dc:creator>Phillip Cloud</dc:creator>
  <link>https://ibis-project.org/posts/ci-analysis/index.html</link>
  <description><![CDATA[ 




<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This notebook takes you through an analysis of Ibis’s CI data using ibis on top of <a href="https://cloud.google.com/bigquery">Google BigQuery</a>.</p>
<ul>
<li>First, we load some data and poke around at it to see what’s what.</li>
<li>Second, we figure out some useful things to calculate based on our poking.</li>
<li>Third, we’ll visualize the results of calculations to showcase what changed and how.</li>
</ul>
</section>
<section id="imports" class="level2">
<h2 class="anchored" data-anchor-id="imports">Imports</h2>
<p>Let’s start out by importing ibis and turning on interactive mode.</p>
<div id="02f86f58" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb1-3"></span>
<span id="cb1-4">ibis.options.interactive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
</section>
<section id="connect-to-bigquery" class="level2">
<h2 class="anchored" data-anchor-id="connect-to-bigquery">Connect to BigQuery</h2>
<p>We connect to BigQuery using the <code>ibis.connect</code> API, which accepts a URL string indicating the backend and various bit of information needed to connect to the backend. Here we’re using BigQuery, so we need the project id (<code>ibis-gbq</code>) and the dataset id (<code>workflows</code>).</p>
<p>Datasets are analogous to schemas in other systems.</p>
<div id="1cd51565" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bigquery://ibis-gbq/workflows"</span></span>
<span id="cb2-2">con <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(url)</span></code></pre></div>
</div>
<p>Let’s see what tables are available.</p>
<div id="c8e5249f" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">con.list_tables()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>['analysis', 'jobs', 'workflows']</code></pre>
</div>
</div>
</section>
<section id="analysis" class="level2">
<h2 class="anchored" data-anchor-id="analysis">Analysis</h2>
<p>Here we’ve got our first bit of interesting information: the <code>jobs</code> and <code>workflows</code> tables.</p>
<section id="terminology" class="level3">
<h3 class="anchored" data-anchor-id="terminology">Terminology</h3>
<p>Before we jump in, it helps to lay down some terminology.</p>
<ul>
<li>A <strong>workflow</strong> corresponds to an individual GitHub Actions YAML file in a GitHub repository under the <code>.github/workflows</code> directory.</li>
<li>A <strong>job</strong> is a named set of steps to run inside a <strong>workflow</strong> file.</li>
</ul>
</section>
<section id="whats-in-the-workflows-table" class="level3">
<h3 class="anchored" data-anchor-id="whats-in-the-workflows-table">What’s in the <code>workflows</code> table?</h3>
<p>Each row in the <code>workflows</code> table corresponds to a <strong>workflow run</strong>.</p>
<ul>
<li>A <strong>workflow run</strong> is an instance of a workflow that was triggered by some entity: a GitHub user, bot, or other entity. Each row of the <code>workflows</code> table is a <strong>workflow run</strong>.</li>
</ul>
</section>
<section id="whats-in-the-jobs-table" class="level3">
<h3 class="anchored" data-anchor-id="whats-in-the-jobs-table">What’s in the <code>jobs</code> table?</h3>
<p>Similarly, each row in the <code>jobs</code> table is a <strong>job run</strong>. That is, for a given <strong>workflow run</strong> there are a set of jobs run with it.</p>
<ul>
<li>A <strong>job run</strong> is an instance of a job <em>in a workflow</em>. It is associated with a single <strong>workflow run</strong>.</li>
</ul>
</section>
</section>
<section id="rationale" class="level2">
<h2 class="anchored" data-anchor-id="rationale">Rationale</h2>
<p>The goal of this analysis is to try to understand ibis’s CI performance, and whether the amount of time we spent waiting on CI has decreased, stayed the same or increased. Ideally, we can understand the pieces that contribute to the change or lack thereof.</p>
<section id="metrics" class="level3">
<h3 class="anchored" data-anchor-id="metrics">Metrics</h3>
<p>To that end there are a few interesting metrics to look at:</p>
<ul>
<li><strong>job run</strong> <em>duration</em>: this is the amount of time it takes for a given job to complete</li>
<li><strong>workflow run</strong> <em>duration</em>: the amount of time it takes for <em>all</em> job runs in a workflow run to complete.</li>
<li><strong>queueing</strong> <em>duration</em>: the amount time time spent waiting for the <em>first</em> job run to commence.</li>
</ul>
</section>
<section id="mitigating-factors" class="level3">
<h3 class="anchored" data-anchor-id="mitigating-factors">Mitigating Factors</h3>
<ul>
<li>Around October 2021, we changed our CI infrastructure to use <a href="https://python-poetry.org/">Poetry</a> instead of <a href="https://docs.conda.io/en/latest/">Conda</a>. The goal there was to see if we could cache dependencies using the lock file generated by poetry. We should see whether that had any effect.</li>
<li>At the end of November 2022, we switch to the Team Plan (a paid GitHub plan) for the Ibis organzation. This tripled the amount of <strong>job runs</strong> that could execute in parallel. We should see if that helped anything.</li>
</ul>
<p>Alright, let’s jump into some data!</p>
<div id="2a119bb7" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">jobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.tables.jobs[_.started_at <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-09"</span>]</span>
<span id="cb5-2">jobs</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> url                                                                   </span>┃<span style="font-weight: bold"> steps                                                                            </span>┃<span style="font-weight: bold"> status    </span>┃<span style="font-weight: bold"> started_at                </span>┃<span style="font-weight: bold"> runner_group_name </span>┃<span style="font-weight: bold"> run_attempt </span>┃<span style="font-weight: bold"> name                      </span>┃<span style="font-weight: bold"> labels        </span>┃<span style="font-weight: bold"> node_id                      </span>┃<span style="font-weight: bold"> id        </span>┃<span style="font-weight: bold"> runner_id </span>┃<span style="font-weight: bold"> run_url                                                               </span>┃<span style="font-weight: bold"> run_id    </span>┃<span style="font-weight: bold"> check_run_url                                                       </span>┃<span style="font-weight: bold"> html_url                                                                   </span>┃<span style="font-weight: bold"> runner_name </span>┃<span style="font-weight: bold"> runner_group_id </span>┃<span style="font-weight: bold"> head_sha                                 </span>┃<span style="font-weight: bold"> conclusion </span>┃<span style="font-weight: bold"> completed_at              </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;struct&lt;status: string, conclusion: string, started_at: timestamp('UTC'), …</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;string&gt;</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │
├───────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────┼───────────────────────────┼───────────────────┼─────────────┼───────────────────────────┼───────────────┼──────────────────────────────┼───────────┼───────────┼───────────────────────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────┼────────────────────────────────────────────────────────────────────────────┼─────────────┼─────────────────┼──────────────────────────────────────────┼────────────┼───────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947152589</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12</span><span style="font-weight: bold">]</span>                                                          │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:54:37+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test Conda               </span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxNTI1ODk=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947152589</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195478382</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195478382</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947152589</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947152589?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">29c148e9679a53c7bb99755347e336d6c1f4d8c8</span> │ <span style="color: #008000; text-decoration-color: #008000">success   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:56:50+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947152601</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:54:37+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test setup miniconda task</span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxNTI2MDE=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947152601</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195478382</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195478382</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947152601</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947152601?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">29c148e9679a53c7bb99755347e336d6c1f4d8c8</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:56:59+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947147571</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:51:54+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test setup miniconda task</span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxNDc1NzE=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947147571</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195476517</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195476517</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947147571</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947147571?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">501d9cc1f2f8d016b1e4fe44ebfc3e1facaa3c91</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:54:48+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947147586</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12</span><span style="font-weight: bold">]</span>                                                          │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:51:53+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test Conda               </span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxNDc1ODY=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947147586</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195476517</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195476517</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947147586</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947147586?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">501d9cc1f2f8d016b1e4fe44ebfc3e1facaa3c91</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:54:15+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947144553</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11</span><span style="font-weight: bold">]</span>                                                          │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:50:19+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test Conda               </span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxNDQ1NTM=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947144553</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195475525</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195475525</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947144553</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947144553?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">963821c370fb8f10f915e4b29e1c78f053c6e7b0</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:52:45+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947144585</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:50:20+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test setup miniconda task</span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxNDQ1ODU=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947144585</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195475525</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195475525</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947144585</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947144585?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">963821c370fb8f10f915e4b29e1c78f053c6e7b0</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:52:53+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947123154</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:39:58+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test setup miniconda task</span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxMjMxNTQ=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947123154</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195468677</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195468677</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947123154</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947123154?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">fcab3265e8afd70dddc518601b33661d15e19f62</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:42:36+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947123167</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:39:57+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test Conda               </span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxMjMxNjc=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947123167</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195468677</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195468677</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947123167</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947123167?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">fcab3265e8afd70dddc518601b33661d15e19f62</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:42:15+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947111435</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:34:19+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test Conda               </span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxMTE0MzU=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947111435</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195465343</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195465343</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947111435</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947111435?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">0b496d97d80f22c5a1a7db27cffd3f71a0d28941</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:36:26+00:00</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/jobs/947111464</span> │ <span style="font-weight: bold">[{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="font-weight: bold">{</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">}</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span><span style="font-weight: bold">]</span>                                                           │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:34:19+00:00</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>              │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Test setup miniconda task</span> │ <span style="font-weight: bold">[]</span>            │ <span style="color: #008000; text-decoration-color: #008000">MDg6Q2hlY2tSdW45NDcxMTE0NjQ=</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">947111464</span> │      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195465343</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195465343</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-runs/947111464</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/runs/947111464?check_suite_focus=true</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>        │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span> │ <span style="color: #008000; text-decoration-color: #008000">0b496d97d80f22c5a1a7db27cffd3f71a0d28941</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:36:28+00:00</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                 │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                            │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                     │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>           │               <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │
└───────────────────────────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────┴───────────┴───────────────────────────┴───────────────────┴─────────────┴───────────────────────────┴───────────────┴──────────────────────────────┴───────────┴───────────┴───────────────────────────────────────────────────────────────────────┴───────────┴─────────────────────────────────────────────────────────────────────┴────────────────────────────────────────────────────────────────────────────┴─────────────┴─────────────────┴──────────────────────────────────────────┴────────────┴───────────────────────────┘
</pre>
</div>
</div>
<p>These first few columns in the <code>jobs</code> table aren’t that interesting so we should look at what else is there</p>
<div id="2d796f1f" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">jobs.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>['url',
 'steps',
 'status',
 'started_at',
 'runner_group_name',
 'run_attempt',
 'name',
 'labels',
 'node_id',
 'id',
 'runner_id',
 'run_url',
 'run_id',
 'check_run_url',
 'html_url',
 'runner_name',
 'runner_group_id',
 'head_sha',
 'conclusion',
 'completed_at']</code></pre>
</div>
</div>
<p>A bunch of these aren’t that useful for our purposes. However, <code>run_id</code>, <code>started_at</code>, <code>completed_at</code> are useful for us. The <a href="https://docs.github.com/en/rest/actions/workflow-jobs?apiVersion=2022-11-28#get-a-job-for-a-workflow-run">GitHub documentation for job information</a> provides useful detail about the meaning of these fields.</p>
<ul>
<li><code>run_id</code>: the workflow run associated with this job run</li>
<li><code>started_at</code>: when the job started</li>
<li><code>completed_at</code>: when the job completed</li>
</ul>
<p>What we’re interested in to a first degree is the job duration, so let’s compute that.</p>
<p>We also need to compute when the last job for a given <code>run_id</code> started and when it completed. We’ll use the former to compute the queueing duration, and the latter to compute the total time it took for a given workflow run to complete.</p>
<div id="f989d187" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">run_id_win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.window(group_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.run_id)</span>
<span id="cb8-2">jobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jobs.select(</span>
<span id="cb8-3">    _.run_id,</span>
<span id="cb8-4">    job_duration<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.completed_at.delta(_.started_at, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"microsecond"</span>),</span>
<span id="cb8-5">    last_job_started_at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.started_at.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>().over(run_id_win),</span>
<span id="cb8-6">    last_job_completed_at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.completed_at.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>().over(run_id_win),</span>
<span id="cb8-7">)</span>
<span id="cb8-8">jobs</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> run_id    </span>┃<span style="font-weight: bold"> job_duration </span>┃<span style="font-weight: bold"> last_job_started_at       </span>┃<span style="font-weight: bold"> last_job_completed_at     </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │
├───────────┼──────────────┼───────────────────────────┼───────────────────────────┤
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1109000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">636000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">594000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">459000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">430000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │   <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3268000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">236503770</span> │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-02 19:06:50+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">243835537</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">565000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-08 02:45:31+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-08 02:45:31+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">243835537</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">581000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-08 02:45:31+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-08 02:45:31+00:00</span> │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">243835537</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">644000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-08 02:45:31+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-09-08 02:45:31+00:00</span> │
│         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │
└───────────┴──────────────┴───────────────────────────┴───────────────────────────┘
</pre>
</div>
</div>
<p>Let’s take a look at <code>workflows</code></p>
<div id="775b8356" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">workflows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> con.tables.workflows</span>
<span id="cb9-2">workflows</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> workflow_url                                                             </span>┃<span style="font-weight: bold"> workflow_id </span>┃<span style="font-weight: bold"> triggering_actor </span>┃<span style="font-weight: bold"> run_number </span>┃<span style="font-weight: bold"> run_attempt </span>┃<span style="font-weight: bold"> updated_at                </span>┃<span style="font-weight: bold"> cancel_url                                                                   </span>┃<span style="font-weight: bold"> rerun_url                                                                   </span>┃<span style="font-weight: bold"> check_suite_node_id              </span>┃<span style="font-weight: bold"> pull_requests                                                                    </span>┃<span style="font-weight: bold"> id        </span>┃<span style="font-weight: bold"> node_id                          </span>┃<span style="font-weight: bold"> status    </span>┃<span style="font-weight: bold"> repository                                                                                                                                                    </span>┃<span style="font-weight: bold"> jobs_url                                                                   </span>┃<span style="font-weight: bold"> previous_attempt_url </span>┃<span style="font-weight: bold"> artifacts_url                                                                   </span>┃<span style="font-weight: bold"> html_url                                                    </span>┃<span style="font-weight: bold"> head_sha                                 </span>┃<span style="font-weight: bold"> head_repository                                                                                                                                                   </span>┃<span style="font-weight: bold"> run_started_at            </span>┃<span style="font-weight: bold"> head_branch   </span>┃<span style="font-weight: bold"> url                                                                   </span>┃<span style="font-weight: bold"> event        </span>┃<span style="font-weight: bold"> name   </span>┃<span style="font-weight: bold"> actor </span>┃<span style="font-weight: bold"> created_at                </span>┃<span style="font-weight: bold"> check_suite_url                                                        </span>┃<span style="font-weight: bold"> check_suite_id </span>┃<span style="font-weight: bold"> conclusion </span>┃<span style="font-weight: bold"> head_commit                                                                                                                           </span>┃<span style="font-weight: bold"> logs_url                                                                   </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">struct&lt;subscrip…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">array&lt;struct&lt;number: int64, url: string, id: int64, head: struct&lt;sha: string, r…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">struct&lt;trees_url: string, teams_url: string, statuses_url: string, subscribers_…</span>                                                                              │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">struct&lt;trees_url: string, teams_url: string, statuses_url: string, subscribers_…</span>                                                                                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">stru…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">struct&lt;tree_id: string, timestamp: timestamp('UTC'), message: string, id: strin…</span>                                                      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>                                                                     │
├──────────────────────────────────────────────────────────────────────────┼─────────────┼──────────────────┼────────────┼─────────────┼───────────────────────────┼──────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────────────┼──────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────┼──────────────────────────────────┼───────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼────────────────────────────────────────────────────────────────────────────┼──────────────────────┼─────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────────────────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────────────────┼───────────────┼───────────────────────────────────────────────────────────────────────┼──────────────┼────────┼───────┼───────────────────────────┼────────────────────────────────────────────────────────────────────────┼────────────────┼────────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼────────────────────────────────────────────────────────────────────────────┤
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">28</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 20:01:17+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196667191/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196667191/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEzMDI5NDkw</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196667191</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NjY3MTkx</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196667191/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196667191/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196667191</span> │ <span style="color: #008000; text-decoration-color: #008000">08855609f1e9ebdeb6197887cf64ecda015d99a8</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 19:01:08+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196667191</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 19:01:08+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1013029490</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1013029490</span> │ <span style="color: #008000; text-decoration-color: #008000">success   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'c4277198178ae73c3d9611af464ee75eadbceedc'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">57</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span>  │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196667191/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 18:59:37+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196617109/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196617109/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEyODM0OTQ3</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196617109</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NjE3MTA5</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196617109/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196617109/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196617109</span> │ <span style="color: #008000; text-decoration-color: #008000">7472797f3e4da39d18e53c09566dba5e373094b0</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 18:12:34+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196617109</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 18:12:34+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1012834947</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1012834947</span> │ <span style="color: #008000; text-decoration-color: #008000">success   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'451472455efc6f20b81f6e1762ac712ec75e77b3'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196617109/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">26</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 18:05:32+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196598751/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196598751/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEyNzc0OTQ4</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196598751</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NTk4NzUx</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196598751/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196598751/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196598751</span> │ <span style="color: #008000; text-decoration-color: #008000">7452ea048908149a672f681ffd94e3fd0953ab2c</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:58:48+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196598751</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:58:48+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1012774948</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1012774948</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'e753c3d693a15eeb99a0d2bd074414ab90dbc85d'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">58</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">39</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196598751/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 18:23:52+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196596932/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196596932/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEyNzY2NTk2</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196596932</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NTk2OTMy</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196596932/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196596932/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196596932</span> │ <span style="color: #008000; text-decoration-color: #008000">59daccd16de041b14fa48b9ba53e8aac6495a578</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:56:34+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196596932</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:56:34+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1012766596</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1012766596</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'342312b7ce508d4d7c91259dd7919cee06508f19'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">56</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196596932/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">24</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:54:55+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196595357/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196595357/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEyNzU5MjQ1</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196595357</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NTk1MzU3</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196595357/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196595357/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196595357</span> │ <span style="color: #008000; text-decoration-color: #008000">1d4f2db372834da7fb33b53c60b59d3f3e40cf7c</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:54:35+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196595357</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:54:35+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1012759245</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1012759245</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'82f0fdad2916ec10d33f5b6c589dbfe8e4decccd'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">17</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">54</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">26</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196595357/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">23</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 17:17:46+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196505866/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196505866/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEyNDExMDA0</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196505866</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NTA1ODY2</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196505866/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196505866/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196505866</span> │ <span style="color: #008000; text-decoration-color: #008000">c36dd6504d86d1994fb36d6a84fb3f302a57642c</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 16:28:57+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196505866</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 16:28:57+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1012411004</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1012411004</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'c3bf70f2809e48fc5c1dd5b0e7e2321bae4879ea'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">28</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">48</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196505866/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">22</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 16:47:06+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196491206/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196491206/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDEyMzQ4MjUz</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196491206</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2NDkxMjA2</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196491206/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196491206/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196491206</span> │ <span style="color: #008000; text-decoration-color: #008000">5ffc4dcb3857eae64b5b36f46b378149c0bb2d74</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span>     │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 16:15:44+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">actions-lint </span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196491206</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 16:15:44+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1012348253</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1012348253</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'3781a799e538f99a2e05399fea4237e5d06d5df2'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span>  │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196491206/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">21</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 15:10:13+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196367166/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196367166/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDExODM5NTE5</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196367166</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2MzY3MTY2</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196367166/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196367166/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196367166</span> │ <span style="color: #008000; text-decoration-color: #008000">e88d621425c939857b3b9391794c5ddfd7615981</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/datapythonista/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/datapythonista/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 14:36:39+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">conda-windows</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196367166</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 14:36:39+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1011839519</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1011839519</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'e093ce6398be8a2fb5331d944d07ef0c5518cc84'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">36</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">30</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196367166/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">20</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 14:32:14+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196316939/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196316939/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDExNjUzNDY5</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">196316939</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk2MzE2OTM5</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196316939/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196316939/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/196316939</span> │ <span style="color: #008000; text-decoration-color: #008000">702446a96a1b9e6b463084f2f09f2f2106fef8d4</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/datapythonista/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/datapythonista/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 14:01:24+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">conda-windows</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196316939</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 14:01:24+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1011653469</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1011653469</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'cdac62bce1914add5faceafd210f32965aa00fe7'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">14</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span>  │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/196316939/logs</span> │
│ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/workflows/2100986</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2100986</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>             │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">19</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 01:20:00+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195537439/cancel</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195537439/rerun</span> │ <span style="color: #008000; text-decoration-color: #008000">MDEwOkNoZWNrU3VpdGUxMDA5MDQ3OTk5</span> │ <span style="font-weight: bold">[]</span>                                                                               │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195537439</span> │ <span style="color: #008000; text-decoration-color: #008000">MDExOldvcmtmbG93UnVuMTk1NTM3NDM5</span> │ <span style="color: #008000; text-decoration-color: #008000">completed</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/ibis-project/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195537439/jobs</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>                 │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195537439/artifacts</span> │ <span style="color: #008000; text-decoration-color: #008000">https://github.com/ibis-project/ibis/actions/runs/195537439</span> │ <span style="color: #008000; text-decoration-color: #008000">2ab26f385b87f39b66cf51783d7ab8904fdb4677</span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'trees_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/datapythonista/ibis/git/trees{/sha}'</span>, <span style="color: #008000; text-decoration-color: #008000">'teams_url'</span>: <span style="color: #008000; text-decoration-color: #008000">'https://api.github.com/repos/datapythonista/ibis/teams'</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">44</span><span style="font-weight: bold">}</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 00:48:17+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">conda-windows</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195537439</span> │ <span style="color: #008000; text-decoration-color: #008000">pull_request</span> │ <span style="color: #008000; text-decoration-color: #008000">Main  </span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">NULL</span>  │ <span style="color: #800080; text-decoration-color: #800080">2020-08-05 00:48:17+00:00</span> │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/check-suites/1009047999</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1009047999</span> │ <span style="color: #008000; text-decoration-color: #008000">failure   </span> │ <span style="font-weight: bold">{</span><span style="color: #008000; text-decoration-color: #008000">'tree_id'</span>: <span style="color: #008000; text-decoration-color: #008000">'33ca23ad93f84344f03894d952d7ffeaf8fb5990'</span>, <span style="color: #008000; text-decoration-color: #008000">'timestamp'</span>: <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">datetime.datetime</span><span style="font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2020</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">48</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8</span>, <span style="color: #808000; text-decoration-color: #808000">tzinfo</span>=<span style="font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">UTC</span><span style="font-weight: bold">&gt;)</span>, <span style="color: #808000; text-decoration-color: #808000">...</span> +<span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4</span><span style="font-weight: bold">}</span>   │ <span style="color: #008000; text-decoration-color: #008000">https://api.github.com/repos/ibis-project/ibis/actions/runs/195537439/logs</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                        │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                │          <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │           <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                                                                                             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                               │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                           │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                                                                                                 │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>      │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                      │              <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                                                                                     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                                                                          │
└──────────────────────────────────────────────────────────────────────────┴─────────────┴──────────────────┴────────────┴─────────────┴───────────────────────────┴──────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────┴──────────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────┴───────────┴──────────────────────────────────┴───────────┴───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴────────────────────────────────────────────────────────────────────────────┴──────────────────────┴─────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────┴──────────────────────────────────────────┴───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────────────────┴───────────────┴───────────────────────────────────────────────────────────────────────┴──────────────┴────────┴───────┴───────────────────────────┴────────────────────────────────────────────────────────────────────────┴────────────────┴────────────┴───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴────────────────────────────────────────────────────────────────────────────┘
</pre>
</div>
</div>
<p>Again we have a bunch of columns that aren’t so useful to us, so let’s see what else is there.</p>
<div id="846952c9" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">workflows.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>['workflow_url',
 'workflow_id',
 'triggering_actor',
 'run_number',
 'run_attempt',
 'updated_at',
 'cancel_url',
 'rerun_url',
 'check_suite_node_id',
 'pull_requests',
 'id',
 'node_id',
 'status',
 'repository',
 'jobs_url',
 'previous_attempt_url',
 'artifacts_url',
 'html_url',
 'head_sha',
 'head_repository',
 'run_started_at',
 'head_branch',
 'url',
 'event',
 'name',
 'actor',
 'created_at',
 'check_suite_url',
 'check_suite_id',
 'conclusion',
 'head_commit',
 'logs_url']</code></pre>
</div>
</div>
<p>We don’t care about many of these for the purposes of this analysis, however we need the <code>id</code> and a few values derived from the <code>run_started_at</code> column.</p>
<ul>
<li><code>id</code>: the unique identifier of the <strong>workflow run</strong></li>
<li><code>run_started_at</code>: the time the workflow run started</li>
</ul>
<p>We compute the date the run started at so we can later compare it to the dates where we added poetry and switched to the team plan.</p>
<div id="d1f82209" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">workflows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> workflows.select(</span>
<span id="cb12-2">    _.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, _.run_started_at, started_date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.run_started_at.date()</span>
<span id="cb12-3">)</span>
<span id="cb12-4">workflows</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> id        </span>┃<span style="font-weight: bold"> run_started_at            </span>┃<span style="font-weight: bold"> started_date </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>         │
├───────────┼───────────────────────────┼──────────────┤
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195478382</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:54:29+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195476517</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:51:44+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195475525</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:50:11+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195468677</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:39:51+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195465343</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:34:11+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195460611</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:29:07+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195452505</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:17:29+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195447886</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:11:35+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195435521</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:02:34+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">195433385</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04 23:01:00+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2020-08-04</span>   │
│         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │
└───────────┴───────────────────────────┴──────────────┘
</pre>
</div>
</div>
<p>We need to associate jobs and workflows somehow, so let’s join them on the relevant key fields.</p>
<div id="0d322a2d" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">joined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jobs.join(workflows, jobs.run_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> workflows.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb13-2">joined</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> run_id    </span>┃<span style="font-weight: bold"> job_duration </span>┃<span style="font-weight: bold"> last_job_started_at       </span>┃<span style="font-weight: bold"> last_job_completed_at     </span>┃<span style="font-weight: bold"> id        </span>┃<span style="font-weight: bold"> run_started_at            </span>┃<span style="font-weight: bold"> started_date </span>┃
┡━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>     │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">timestamp('UTC')</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>         │
├───────────┼──────────────┼───────────────────────────┼───────────────────────────┼───────────┼───────────────────────────┼──────────────┤
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647137270</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:59:42+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:59:43+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647137270</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:59:31+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">801000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">832000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">380000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">371000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">748000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">775000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">384000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">395000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">863000000</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:40+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 19:06:13+00:00</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">647113324</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12 18:51:26+00:00</span> │ <span style="color: #800080; text-decoration-color: #800080">2021-03-12</span>   │
│         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │
└───────────┴──────────────┴───────────────────────────┴───────────────────────────┴───────────┴───────────────────────────┴──────────────┘
</pre>
</div>
</div>
<p>Sweet! Now we have workflow runs and job runs together in the same table, let’s start exploring summarization.</p>
<p>Let’s encode our knowledge about when the poetry move happened and also when we moved to the team plan.</p>
<div id="8cad3b01" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb14-2"></span>
<span id="cb14-3">POETRY_MERGED_DATE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> date(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb14-4">TEAMIZATION_DATE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> date(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)</span></code></pre></div>
</div>
<p>Let’s compute some indicator variables indicating whether a given row contains data after poetry changes occurred, and do the same for the team plan.</p>
<p>Let’s also compute queueing time and workflow duration.</p>
<div id="1c5210e6" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joined.select(</span>
<span id="cb15-2">    _.started_date,</span>
<span id="cb15-3">    _.job_duration,</span>
<span id="cb15-4">    has_poetry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.started_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> POETRY_MERGED_DATE,</span>
<span id="cb15-5">    has_team<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.started_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> TEAMIZATION_DATE,</span>
<span id="cb15-6">    queueing_time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.last_job_started_at.delta(_.run_started_at, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"microsecond"</span>),</span>
<span id="cb15-7">    workflow_duration<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.last_job_completed_at.delta(_.run_started_at, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"microsecond"</span>),</span>
<span id="cb15-8">)</span>
<span id="cb15-9">stats</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> started_date </span>┃<span style="font-weight: bold"> job_duration </span>┃<span style="font-weight: bold"> has_poetry </span>┃<span style="font-weight: bold"> has_team </span>┃<span style="font-weight: bold"> queueing_time </span>┃<span style="font-weight: bold"> workflow_duration </span>┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">boolean</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">boolean</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │
├──────────────┼──────────────┼────────────┼──────────┼───────────────┼───────────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1000000</span> │ False      │ False    │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">7000000</span> │           <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">389000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">482000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">451000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">519000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">733000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">758000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">388000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-25</span>   │    <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">403000000</span> │ False      │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11000000</span> │        <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1010000000</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>        │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└──────────────┴──────────────┴────────────┴──────────┴───────────────┴───────────────────┘
</pre>
</div>
</div>
<p>Let’s create a column ranging from 0 to 2 inclusive where:</p>
<ul>
<li>0: no improvements</li>
<li>1: just poetry</li>
<li>2: poetry and the team plan</li>
</ul>
<p>Let’s also give them some names that’ll look nice on our plots.</p>
<div id="8b6cf051" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.mutate(</span>
<span id="cb16-2">    raw_improvements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.has_poetry.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"int"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> _.has_team.cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"int"</span>)</span>
<span id="cb16-3">).mutate(</span>
<span id="cb16-4">    improvements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(</span>
<span id="cb16-5">        _.raw_improvements.case()</span>
<span id="cb16-6">        .when(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>)</span>
<span id="cb16-7">        .when(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry"</span>)</span>
<span id="cb16-8">        .when(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry + Team Plan"</span>)</span>
<span id="cb16-9">        .else_(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>)</span>
<span id="cb16-10">        .end()</span>
<span id="cb16-11">    ),</span>
<span id="cb16-12">    team_plan<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis.where(_.raw_improvements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry + Team Plan"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>),</span>
<span id="cb16-13">)</span>
<span id="cb16-14">stats</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃<span style="font-weight: bold"> started_date </span>┃<span style="font-weight: bold"> job_duration </span>┃<span style="font-weight: bold"> has_poetry </span>┃<span style="font-weight: bold"> has_team </span>┃<span style="font-weight: bold"> queueing_time </span>┃<span style="font-weight: bold"> workflow_duration </span>┃<span style="font-weight: bold"> raw_improvements </span>┃<span style="font-weight: bold"> improvements </span>┃<span style="font-weight: bold"> team_plan </span>┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>        │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">boolean</span>    │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">boolean</span>  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">int64</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>       │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>    │
├──────────────┼──────────────┼────────────┼──────────┼───────────────┼───────────────────┼──────────────────┼──────────────┼───────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">43000000</span> │ True       │ False    │       <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">51000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15000000</span> │ True       │ False    │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">458000000</span> │         <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">473000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8000000</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">24000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">16000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1000000</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │            <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1000000</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-08</span>   │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2000000</span> │ True       │ False    │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │          <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">25000000</span> │                <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry      </span> │ <span style="color: #008000; text-decoration-color: #008000">None     </span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │            <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>          │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>        │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │                <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>         │
└──────────────┴──────────────┴────────────┴──────────┴───────────────┴───────────────────┴──────────────────┴──────────────┴───────────┘
</pre>
</div>
</div>
<p>Finally, we can summarize by averaging the different durations, grouping on the variables of interest.</p>
<div id="427e669d" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">USECS_PER_MIN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60_000_000</span></span>
<span id="cb17-2"></span>
<span id="cb17-3">agged <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.group_by([_.started_date, _.improvements, _.team_plan]).agg(</span>
<span id="cb17-4">    job<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.job_duration.div(USECS_PER_MIN).mean(),</span>
<span id="cb17-5">    workflow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.workflow_duration.div(USECS_PER_MIN).mean(),</span>
<span id="cb17-6">    queueing_time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.queueing_time.div(USECS_PER_MIN).mean(),</span>
<span id="cb17-7">)</span>
<span id="cb17-8">agged</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> started_date </span>┃<span style="font-weight: bold"> improvements       </span>┃<span style="font-weight: bold"> team_plan          </span>┃<span style="font-weight: bold"> job       </span>┃<span style="font-weight: bold"> workflow  </span>┃<span style="font-weight: bold"> queueing_time </span>┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">date</span>         │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">string</span>             │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>   │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">float64</span>       │
├──────────────┼────────────────────┼────────────────────┼───────────┼───────────┼───────────────┤
│ <span style="color: #800080; text-decoration-color: #800080">2022-08-10</span>   │ <span style="color: #008000; text-decoration-color: #008000">Poetry            </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5.358063</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">27.103921</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">22.845206</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2020-10-02</span>   │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">11.536410</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29.325641</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">28.941538</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-12-29</span>   │ <span style="color: #008000; text-decoration-color: #008000">Poetry + Team Plan</span> │ <span style="color: #008000; text-decoration-color: #008000">Poetry + Team Plan</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.612843</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.538934</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">5.663799</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-05-25</span>   │ <span style="color: #008000; text-decoration-color: #008000">Poetry            </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.171620</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.641242</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.223480</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-03-23</span>   │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.908273</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">18.121004</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.824016</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-10-21</span>   │ <span style="color: #008000; text-decoration-color: #008000">Poetry            </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.347873</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">12.195076</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.156614</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-01-31</span>   │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.000000</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.266667</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.266667</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-07-27</span>   │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.016667</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.183333</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.166667</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2022-03-15</span>   │ <span style="color: #008000; text-decoration-color: #008000">Poetry            </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">2.275418</span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.091200</span> │      <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.498640</span> │
│ <span style="color: #800080; text-decoration-color: #800080">2021-12-12</span>   │ <span style="color: #008000; text-decoration-color: #008000">Poetry            </span> │ <span style="color: #008000; text-decoration-color: #008000">None              </span> │  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.245767</span> │ <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">15.027579</span> │     <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">10.329464</span> │
│ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>            │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │ <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span>                  │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │         <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │             <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">…</span> │
└──────────────┴────────────────────┴────────────────────┴───────────┴───────────┴───────────────┘
</pre>
</div>
</div>
<p>If at any point you want to inspect the SQL you’ll be running, ibis has you covered with <code>ibis.to_sql</code>.</p>
<div id="59c65db6" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">ibis.to_sql(agged)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WITH</span> t0 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb19-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-3">    t6.<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb19-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> `ibis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>gbq`.workflows.jobs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> t6</span>
<span id="cb19-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHERE</span></span>
<span id="cb19-6">    t6.`started_at` <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-01-09'</span></span>
<span id="cb19-7">), t1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb19-8">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-9">    t6.`id`,</span>
<span id="cb19-10">    t6.`run_started_at`,</span>
<span id="cb19-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">DATE</span>(t6.`run_started_at`) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `started_date`</span>
<span id="cb19-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> `ibis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>gbq`.workflows.workflows <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> t6</span>
<span id="cb19-13">), t2 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb19-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-15">    t0.`run_id`,</span>
<span id="cb19-16">    TIMESTAMP_DIFF(t0.`completed_at`, t0.`started_at`, MICROSECOND) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `job_duration`,</span>
<span id="cb19-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MAX</span>(t0.`started_at`) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.`run_id`) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `last_job_started_at`,</span>
<span id="cb19-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MAX</span>(t0.`completed_at`) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OVER</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">PARTITION</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> t0.`run_id`) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `last_job_completed_at`</span>
<span id="cb19-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> t0</span>
<span id="cb19-20">), t3 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb19-21">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-22">    `started_date`,</span>
<span id="cb19-23">    `job_duration`,</span>
<span id="cb19-24">    `started_date` <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CAST</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021-10-15'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">DATE</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `has_poetry`,</span>
<span id="cb19-25">    `started_date` <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CAST</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022-11-28'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">DATE</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `has_team`,</span>
<span id="cb19-26">    TIMESTAMP_DIFF(`last_job_started_at`, `run_started_at`, MICROSECOND) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `queueing_time`,</span>
<span id="cb19-27">    TIMESTAMP_DIFF(`last_job_completed_at`, `run_started_at`, MICROSECOND) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `workflow_duration`</span>
<span id="cb19-28">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> t2</span>
<span id="cb19-29">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INNER</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">JOIN</span> t1</span>
<span id="cb19-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ON</span> t2.`run_id` <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t1.`id`</span>
<span id="cb19-31">), t4 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> (</span>
<span id="cb19-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-33">    t3.<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>,</span>
<span id="cb19-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CAST</span>(t3.`has_poetry` <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> INT64) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CAST</span>(t3.`has_team` <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> INT64) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `raw_improvements`</span>
<span id="cb19-35">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> t3</span>
<span id="cb19-36">)</span>
<span id="cb19-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-38">  t5.`started_date`,</span>
<span id="cb19-39">  t5.`improvements`,</span>
<span id="cb19-40">  t5.`team_plan`,</span>
<span id="cb19-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg</span>(IEEE_DIVIDE(t5.`job_duration`, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000000</span>)) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `job`,</span>
<span id="cb19-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg</span>(IEEE_DIVIDE(t5.`workflow_duration`, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000000</span>)) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `workflow`,</span>
<span id="cb19-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg</span>(IEEE_DIVIDE(t5.`queueing_time`, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000000</span>)) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `queueing_time`</span>
<span id="cb19-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> (</span>
<span id="cb19-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span></span>
<span id="cb19-46">    t4.<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>,</span>
<span id="cb19-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">CASE</span> t4.`raw_improvements`</span>
<span id="cb19-48">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHEN</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb19-49">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">THEN</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'None'</span></span>
<span id="cb19-50">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHEN</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb19-51">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">THEN</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Poetry'</span></span>
<span id="cb19-52">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">WHEN</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb19-53">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">THEN</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Poetry + Team Plan'</span></span>
<span id="cb19-54">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">ELSE</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span></span>
<span id="cb19-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">END</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `improvements`,</span>
<span id="cb19-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">IF</span>(t4.`raw_improvements` <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Poetry + Team Plan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'None'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> `team_plan`</span>
<span id="cb19-57">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> t4</span>
<span id="cb19-58">) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">AS</span> t5</span>
<span id="cb19-59"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">GROUP</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span></span>
<span id="cb19-60">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb19-61">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb19-62">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
</div>
</div>
</section>
</section>
<section id="plot-the-results" class="level1">
<h1>Plot the Results</h1>
<p>Ibis doesn’t have builtin plotting support, so we need to pull our results into pandas.</p>
<p>Here I’m using <code>plotnine</code> (a Python port of <code>ggplot2</code>), which has great integration with pandas DataFrames.</p>
<div id="4ea62468" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">raw_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> agged.execute()</span>
<span id="cb20-2">raw_df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">started_date</th>
<th data-quarto-table-cell-role="th">improvements</th>
<th data-quarto-table-cell-role="th">team_plan</th>
<th data-quarto-table-cell-role="th">job</th>
<th data-quarto-table-cell-role="th">workflow</th>
<th data-quarto-table-cell-role="th">queueing_time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2021-11-03</td>
<td>Poetry</td>
<td>None</td>
<td>3.948251</td>
<td>18.438061</td>
<td>17.952411</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-10-01</td>
<td>None</td>
<td>None</td>
<td>9.915315</td>
<td>26.179842</td>
<td>26.083483</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2022-08-23</td>
<td>Poetry</td>
<td>None</td>
<td>2.744350</td>
<td>12.839580</td>
<td>12.064237</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2021-06-09</td>
<td>None</td>
<td>None</td>
<td>8.044477</td>
<td>15.938178</td>
<td>1.141473</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2022-06-13</td>
<td>Poetry</td>
<td>None</td>
<td>3.117226</td>
<td>15.782421</td>
<td>14.715766</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">779</td>
<td>2020-12-03</td>
<td>None</td>
<td>None</td>
<td>10.913713</td>
<td>39.732489</td>
<td>39.495992</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">780</td>
<td>2021-10-21</td>
<td>Poetry</td>
<td>None</td>
<td>3.781108</td>
<td>31.423465</td>
<td>28.041193</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">781</td>
<td>2021-12-14</td>
<td>Poetry</td>
<td>None</td>
<td>3.240217</td>
<td>13.778852</td>
<td>10.919449</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">782</td>
<td>2023-01-02</td>
<td>Poetry + Team Plan</td>
<td>Poetry + Team Plan</td>
<td>3.144575</td>
<td>10.116722</td>
<td>7.886025</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">783</td>
<td>2022-02-02</td>
<td>Poetry</td>
<td>None</td>
<td>3.119334</td>
<td>25.054407</td>
<td>23.989267</td>
</tr>
</tbody>
</table>

<p>784 rows × 6 columns</p>
</div>
</div>
</div>
<p>Generally, <code>plotnine</code> works with long, tidy data so let’s use <code>pandas.melt</code> to get there.</p>
<div id="5b55980e" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb21-2"></span>
<span id="cb21-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.melt(</span>
<span id="cb21-4">    raw_df,</span>
<span id="cb21-5">    id_vars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"started_date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"improvements"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"team_plan"</span>],</span>
<span id="cb21-6">    var_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"entity"</span>,</span>
<span id="cb21-7">    value_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>,</span>
<span id="cb21-8">)</span>
<span id="cb21-9">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">started_date</th>
<th data-quarto-table-cell-role="th">improvements</th>
<th data-quarto-table-cell-role="th">team_plan</th>
<th data-quarto-table-cell-role="th">entity</th>
<th data-quarto-table-cell-role="th">duration</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2021-11-03</td>
<td>Poetry</td>
<td>None</td>
<td>job</td>
<td>3.948251</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-10-01</td>
<td>None</td>
<td>None</td>
<td>job</td>
<td>9.915315</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2022-08-23</td>
<td>Poetry</td>
<td>None</td>
<td>job</td>
<td>2.744350</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2021-06-09</td>
<td>None</td>
<td>None</td>
<td>job</td>
<td>8.044477</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2022-06-13</td>
<td>Poetry</td>
<td>None</td>
<td>job</td>
<td>3.117226</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Let’s make our theme lighthearted by using <code>xkcd</code>-style plots.</p>
<div id="d149c514" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> plotnine <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb22-2"></span>
<span id="cb22-3">theme_set(theme_xkcd())</span></code></pre></div>
</div>
<p>Create a few labels for our plot.</p>
<div id="ee3add6c" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">poetry_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Poetry</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>POETRY_MERGED_DATE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb23-2">team_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Team Plan</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>TEAMIZATION_DATE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
</div>
<p>Without the following line you may see large amount of inconsequential warnings that make the notebook unusable.</p>
<div id="1bc4c94f" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb24-2"></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># without this, findfont logging spams the notebook making it unusable</span></span>
<span id="cb24-4">logging.getLogger(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matplotlib.font_manager'</span>).disabled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
<p>Here we show job durations, coloring the points differently depending on whether they have no improvements, poetry, or poetry + team plan.</p>
<div id="3b549c85" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">(</span>
<span id="cb25-2">    ggplot(</span>
<span id="cb25-3">        df.loc[df.entity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"job"</span>].reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-4">        aes(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"started_date"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"factor(improvements)"</span>),</span>
<span id="cb25-5">    )</span>
<span id="cb25-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_point()</span>
<span id="cb25-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_vline(</span>
<span id="cb25-8">        xintercept<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[TEAMIZATION_DATE, POETRY_MERGED_DATE],</span>
<span id="cb25-9">        colour<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>],</span>
<span id="cb25-10">        linetype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb25-11">    )</span>
<span id="cb25-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_color_brewer(</span>
<span id="cb25-13">        palette<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb25-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qual'</span>,</span>
<span id="cb25-15">        limits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry + Team Plan"</span>],</span>
<span id="cb25-16">    )</span>
<span id="cb25-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_text(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>POETRY_MERGED_DATE, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>poetry_label, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb25-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_text(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TEAMIZATION_DATE, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>team_label, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb25-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stat_smooth(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>)</span>
<span id="cb25-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> labs(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Duration (minutes)"</span>)</span>
<span id="cb25-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ggtitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job Duration"</span>)</span>
<span id="cb25-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> theme(</span>
<span id="cb25-23">        figure_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>),</span>
<span id="cb25-24">        legend_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.67</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>),</span>
<span id="cb25-25">        legend_direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vertical"</span>,</span>
<span id="cb25-26">    )</span>
<span id="cb25-27">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://ibis-project.org/posts/ci-analysis/index_files/figure-html/cell-22-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>&lt;Figure Size: (2200 x 600)&gt;</code></pre>
</div>
</div>
<section id="result-1-job-duration" class="level2">
<h2 class="anchored" data-anchor-id="result-1-job-duration">Result #1: Job Duration</h2>
<p>This result is pretty interesting.</p>
<p>A few things pop out to me right away:</p>
<ul>
<li>The move to poetry decreased the average job run duration by quite a bit. No, I’m not going to do any statistical tests.</li>
<li>The variability of job run durations also decreased by quite a bit after introducing poetry.</li>
<li>Moving to the team plan had little to no effect on job run duration.</li>
</ul>
<div id="bdc51c16" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">(</span>
<span id="cb27-2">    ggplot(</span>
<span id="cb27-3">        df.loc[df.entity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"job"</span>].reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb27-4">        aes(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"started_date"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"factor(improvements)"</span>),</span>
<span id="cb27-5">    )</span>
<span id="cb27-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> facet_wrap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"entity"</span>, ncol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb27-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_point()</span>
<span id="cb27-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_vline(</span>
<span id="cb27-9">        xintercept<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[TEAMIZATION_DATE, POETRY_MERGED_DATE],</span>
<span id="cb27-10">        linetype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb27-11">    )</span>
<span id="cb27-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_color_brewer(</span>
<span id="cb27-13">        palette<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb27-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qual'</span>,</span>
<span id="cb27-15">        limits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poetry + Team Plan"</span>],</span>
<span id="cb27-16">    )</span>
<span id="cb27-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_text(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>POETRY_MERGED_DATE, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>poetry_label, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb27-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_text(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TEAMIZATION_DATE, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>team_label, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb27-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stat_smooth(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>)</span>
<span id="cb27-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> labs(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Duration (minutes)"</span>)</span>
<span id="cb27-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ggtitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Workflow Duration"</span>)</span>
<span id="cb27-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> theme(</span>
<span id="cb27-23">        figure_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>),</span>
<span id="cb27-24">        legend_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.68</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>),</span>
<span id="cb27-25">        legend_direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vertical"</span>,</span>
<span id="cb27-26">    )</span>
<span id="cb27-27">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://ibis-project.org/posts/ci-analysis/index_files/figure-html/cell-23-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>&lt;Figure Size: (2200 x 1300)&gt;</code></pre>
</div>
</div>
</section>
<section id="result-2-workflow-duration-and-queueing-time" class="level2">
<h2 class="anchored" data-anchor-id="result-2-workflow-duration-and-queueing-time">Result #2: Workflow Duration and Queueing Time</h2>
<p>Another interesting result.</p>
<section id="queueing-time" class="level3">
<h3 class="anchored" data-anchor-id="queueing-time">Queueing Time</h3>
<ul>
<li>It almost looks like moving to poetry made average queueing time worse. This is probably due to our perception that faster jobs means faster ci. As we see here that isn’t the case</li>
<li>Moving to the team plan cut down the queueing time by quite a bit</li>
</ul>
</section>
<section id="workflow-duration" class="level3">
<h3 class="anchored" data-anchor-id="workflow-duration">Workflow Duration</h3>
<ul>
<li>Overall workflow duration appears to be strongly influenced by moving to the team plan, which is almost certainly due to the drop in queueing time since we are no longer limited by slow job durations.</li>
<li>Perhaps it’s obvious, but queueing time and workflow duration appear to be highly correlated.</li>
</ul>
<p>In the next plot we’ll look at that correlation.</p>
<div id="a411cf31" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">(</span>
<span id="cb29-2">    ggplot(raw_df, aes(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workflow"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queueing_time"</span>))</span>
<span id="cb29-3">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_point()</span>
<span id="cb29-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> geom_rug()</span>
<span id="cb29-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> facet_grid(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">". ~ team_plan"</span>)</span>
<span id="cb29-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> labs(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Workflow Duration (minutes)"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queueing Time (minutes)"</span>)</span>
<span id="cb29-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ggtitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Workflow Duration vs. Queueing Time"</span>)</span>
<span id="cb29-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> theme(figure_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb29-9">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://ibis-project.org/posts/ci-analysis/index_files/figure-html/cell-24-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>&lt;Figure Size: (2200 x 600)&gt;</code></pre>
</div>
</div>
</section>
</section>
<section id="result-3-workflow-duration-and-queueing-duration-are-correlated" class="level2">
<h2 class="anchored" data-anchor-id="result-3-workflow-duration-and-queueing-duration-are-correlated">Result #3: Workflow Duration and Queueing Duration are correlated</h2>
<p>It also seems that moving to the team plan (though also the move to poetry might be related here) reduced the variability of both metrics.</p>
<p>We’re lacking data compared to the past so we should wait for more to come in.</p>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>It appears that you need both a short queue time <strong>and</strong> fast individual jobs to minimize time spent in CI.</p>
<p>If you have a short queue time, but long job runs then you’ll be bottlenecked on individual jobs, and if you have more jobs than queue slots then you’ll be blocked on queueing time.</p>
<p>I think we can sum this up nicely:</p>
<ul>
<li>slow jobs, slow queue: 🤷 blocked by jobs or queue</li>
<li>slow jobs, fast queue: ❓ blocked by jobs, if jobs are slow enough</li>
<li>fast jobs, slow queue: ❗ blocked by queue, with enough jobs</li>
<li>fast jobs, fast queue: ✅</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>bigquery</category>
  <category>continuous integration</category>
  <category>data engineering</category>
  <category>dogfood</category>
  <guid>https://ibis-project.org/posts/ci-analysis/index.html</guid>
  <pubDate>Mon, 09 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis v4.0.0</title>
  <dc:creator>Patrick Clarke</dc:creator>
  <link>https://ibis-project.org/posts/ibis-version-4.0.0-release/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Ibis 4.0 has officially been released as the latest version of the package. This release includes several new backends, improved functionality, and some major internal refactors. A full list of the changes can be found in the <a href="../../release_notes.html">project release notes</a>. Let’s talk about some of the new changes 4.0 brings for Ibis users.</p>
</section>
<section id="backends" class="level2">
<h2 class="anchored" data-anchor-id="backends">Backends</h2>
<p>Ibis 4.0 brings <a href="../../backends/polars.html">Polars</a>, <a href="../../backends/snowflake.html">Snowflake</a>, and <a href="../../backends/trino.html">Trino</a> into an already-impressive stock of supported backends. The <a href="https://www.pola.rs/">Polars</a> backend adds another way for users to work locally with DataFrames. The <a href="https://www.snowflake.com/en/">Snowflake</a> and <a href="https://trino.io/">Trino</a> backends add a free and familiar python API to popular data warehouses.</p>
<p>Alongside these new backends, Google BigQuery and Microsoft SQL have been moved to the main repo, so their release cycle will follow the Ibis core.</p>
</section>
<section id="functionality" class="level2">
<h2 class="anchored" data-anchor-id="functionality">Functionality</h2>
<p>There are a lot of improvements incoming, but some notable changes include:</p>
<ul>
<li><a href="https://github.com/ibis-project/ibis/pull/5005">read API</a>: allows users to read various file formats directly into their <a href="https://ibis-project.org/api/config/?h=default#ibis.config.Options">configured <code>default_backend</code></a> (default DuckDB) through <code>read_*</code> functions, which makes working with local files easier than ever.</li>
<li><a href="https://github.com/ibis-project/ibis/pull/4454#issuecomment-1262640204">to_pyarrow and to_pyarrow_batches</a>: users can now return PyArrow objects (Tables, Arrays, Scalars, RecordBatchReader) and therefore grants all of the functionality that PyArrow provides</li>
<li><a href="https://github.com/ibis-project/ibis/pull/4525">JSON getitem</a>: users can now run getitem on a JSON field using Ibis expressions with some backends</li>
<li><a href="https://github.com/ibis-project/ibis/pull/4547">Plotting support through <code>__array__</code></a>: allows users to plot Ibis expressions out of the box</li>
</ul>
</section>
<section id="refactors" class="level2">
<h2 class="anchored" data-anchor-id="refactors">Refactors</h2>
<p>This won’t be visible to most users, but the project underwent a series of refactors that spans <a href="https://github.com/ibis-project/ibis/pulls?q=is%3Apr+is%3Amerged+%22refactor%3A%22+milestone%3A4.0.0">multiple PRs</a>. Notable changes include removing intermediate expressions, improving the testing framework, and UX updates.</p>
</section>
<section id="additional-changes" class="level2">
<h2 class="anchored" data-anchor-id="additional-changes">Additional Changes</h2>
<p>As mentioned previously, additional functionality, bugfixes, and more have been included in the latest 4.0 release. To stay up to date and learn more about recent changes: check out the project’s homepage at <a href="https://ibis-project.org">ibis-project.org</a>, follow <a href="https://twitter.com/IbisData"><span class="citation" data-cites="IbisData">@IbisData</span></a> on Twitter, find the source code and community on <a href="https://github.com/ibis-project/ibis">GitHub</a>, and join the discussion on <a href="https://ibis-project.zulipchat.com/join/ldd2gyoqkbsqli3dzlb463u4">Zulip</a>.</p>
<p>As always, try Ibis by <a href="../../install.html">installing</a> it today.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>release</category>
  <category>blog</category>
  <guid>https://ibis-project.org/posts/ibis-version-4.0.0-release/index.html</guid>
  <pubDate>Mon, 09 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>ffill and bfill using Ibis</title>
  <dc:creator>Patrick Clarke</dc:creator>
  <link>https://ibis-project.org/posts/ffill-and-bfill-using-ibis/index.html</link>
  <description><![CDATA[ 




<p>Suppose you have a table of data mapping events and dates to values, and that this data contains gaps in values.</p>
<p>Suppose you want to forward fill these gaps such that, one-by-one, if a value is null, it is replaced by the non-null value preceding.</p>
<p>For example, you might be measuring the total value of an account over time. Saving the same value until that value changes is an inefficient use of space, so you might only measure the value during certain events, like a change in ownership or value.</p>
<p>In that case, to view the value of the account by day, you might want to interpolate dates and then ffill or bfill value to show the account value over time by date.</p>
<p>Date interpolation will be covered in a different guide, but if you already have the dates then you can fill in some values.</p>
<p>This was heavily inspired by Gil Forsyth’s writeup on ffill and bfill on the <a href="https://github.com/ibis-project/ibis/wiki/ffill-and-bfill-using-window-functions">Ibis GitHub Wiki</a>.</p>
<section id="setup" class="level3">
<h3 class="anchored" data-anchor-id="setup">Setup</h3>
<p>First, we want to make some mock data. To demonstrate this technique in a non-pandas backend, we will use the DuckDB backend.</p>
<p>Our data will have measurements by date, and these measurements will be grouped by an event id. We will then save this data to <code>data.parquet</code> so we can register that parquet file as a table in our DuckDB connector.</p>
<div id="5331b1af" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb1-7"></span>
<span id="cb1-8"></span>
<span id="cb1-9">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb1-10">    {</span>
<span id="cb1-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"event_id"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measured_on"</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(</span>
<span id="cb1-13">            date,</span>
<span id="cb1-14">            [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-15">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>),</span>
<span id="cb1-16">        ),</span>
<span id="cb1-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measurement"</span>: np.nan,</span>
<span id="cb1-18">    }</span>
<span id="cb1-19">)</span>
<span id="cb1-20"></span>
<span id="cb1-21">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>2021-05-05</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="7640d42d" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df.loc[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measurement"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11.0</span>]</span>
<span id="cb2-2">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2021-05-07</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>2021-05-09</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2</td>
<td>2021-05-10</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>3</td>
<td>2021-07-11</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3</td>
<td>2021-07-12</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Let’s write that to a parquet file:</p>
<div id="d880ddca" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.to_parquet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.parquet"</span>)</span></code></pre></div>
</div>
<p>To use the DuckDB backend with our data, we will spin up a DuckDB connection and then register <code>data.parquet</code> as <code>data</code>:</p>
<div id="99364917" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">conn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'duckdb://'</span>)</span>
<span id="cb4-2"></span>
<span id="cb4-3">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data.parquet'</span>, table_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> conn.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7">data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">DatabaseTable: data
  event_id    int64
  measured_on date
  measurement float64
</pre>
</div>
</div>
</section>
<section id="ffill-strategy" class="level3">
<h3 class="anchored" data-anchor-id="ffill-strategy"><code>ffill</code> Strategy</h3>
<p>To better understand how we can forward-fill our gaps, let’s take a minute to explain the strategy and then look at the manual result.</p>
<p>We will partition our data by event groups and then sort those groups by date.</p>
<p>Our logic for forward fill is then: let <code>j</code> be an event group sorted by date and let <code>i</code> be a date within <code>j</code>. If <code>i</code> is the first date in <code>j</code>, then continue. If <code>i</code> is not the first date in <code>j</code>, then if <code>measurement</code> in <code>i</code> is null then replace it with <code>measurement</code> for <code>i-1</code>. Otherwise, do nothing.</p>
<p>Let’s take a look at what this means for the first few rows of our data:</p>
<pre><code>    event_id measured_on  measurement
0          0  2021-06-01          NaN # Since this is the first row of the event group (group 0), do nothing
1          0  2021-06-02          5.0 # Since this is not the first row of the group and is not null: do nothing
4          1  2021-05-05         42.0 # This is the first row of the event group (group 1): do nothing
2          1  2021-06-03          NaN # This is not the first row and is null: replace it (NaN → 42.0)
3          1  2021-06-04          NaN # This is not the first row and is null: replace it (NaN → 42.0)
5          2  2021-05-06         42.0 # This is the first row of the event group (group 2): do nothing
6          2  2021-05-07          NaN # This is not the first row and is null: replace it (NaN → 42.0)
7          2  2021-05-08         11.0 # This is not the first row and is not null: do nothing
8          2  2021-05-09          NaN # This is not the first row and is null: replace it (NaN → 11.0)
9          2  2021-05-10          NaN # This is not the first row and is null: replace it (NaN → 11.0)
10         3  2021-07-11          NaN # This is the first row of the event group (group 3): do nothing
11         3  2021-07-12          NaN # This is not the first row and is null: replace it (NaN → NaN)</code></pre>
<p>Our result should for forward fill should look like this:</p>
<div id="d25676e9" class="cell" data-execution_count="5">
<div class="cell-output cell-output-display" data-execution_count="5">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-06-03</td>
<td>5.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-04</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2021-05-07</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>2021-05-09</td>
<td>11.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2</td>
<td>2021-05-10</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>3</td>
<td>2021-07-11</td>
<td>11.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3</td>
<td>2021-07-12</td>
<td>11.0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>To accomplish this, we will create a window over our <code>event_id</code> to partition our data into groups. We will take these groups and order them by <code>measured_on</code>:</p>
<div id="7d4448df" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.window(group_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.event_id, order_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.measured_on, following<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</div>
<p>Once we have our window defined, we can flag the first non-null value in an event group using <code>count</code>, as it will count non-null values row-by-row within our group:</p>
<div id="f8567f1c" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">grouped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.mutate(grouper<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.measurement.count().over(win))</span>
<span id="cb7-2"></span>
<span id="cb7-3">grouped.execute().sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'event_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'measured_on'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
<th data-quarto-table-cell-role="th">grouper</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">7</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3</td>
<td>2</td>
<td>2021-05-07</td>
<td>NaN</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-09</td>
<td>NaN</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2021-05-10</td>
<td>NaN</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>3</td>
<td>2021-07-11</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3</td>
<td>2021-07-12</td>
<td>NaN</td>
<td>0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>To see this a bit clearer: look at rows 0, 1, and 2. Row 0 is NaN and is the first row of the group (event_id = 0), so at row 0 we have 0 non-null values (grouper = 0). Row 1 is not null (5.0) and is the second row the group, so our count has increased by 1 (grouper = 1). Row 2 is the first row of its group (event_id = 1) and is not null, so our count is 1 (grouper = 1).</p>
<p>Skip down to rows 9, 10, and 11. Row 9 is the sixth row of group 2 and there are three non-null values in group 2 before row 9. Therefore the count at row 9 is 3.</p>
<p>Row 10 is the first row of group 3 and is null, therefore its count is 0. Finally: row 11 is the second row of group 3 and is null as well, therefore the count remains 0.</p>
<p>Under this design, we now have another partition.</p>
<p>Our first partition is by <code>event_id</code>. Within each set in that partition, we have a partition by <code>grouper</code>, where each set has up to one non-null value.</p>
<p>Since there less than or equal to one non-null value in each group of <code>['event_id', 'grouper']</code>, we can fill values by overwriting <em>all</em> values within the group by the max value in the group.</p>
<p>So:</p>
<ol type="1">
<li>Group by <code>event_id</code> and <code>grouper</code></li>
<li>Mutate the data along that grouping by populating a new column <code>ffill</code> with the <code>max</code> value of <code>measurement</code>.</li>
</ol>
<div id="a5c2237e" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb8-2">    grouped</span>
<span id="cb8-3">    .group_by([grouped.event_id, grouped.grouper])</span>
<span id="cb8-4">    .mutate(ffill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grouped.measurement.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb8-5">    .execute()</span>
<span id="cb8-6">).sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'event_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'measured_on'</span>]).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-7"></span>
<span id="cb8-8">result</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
<th data-quarto-table-cell-role="th">grouper</th>
<th data-quarto-table-cell-role="th">ffill</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
<td>1</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
<td>1</td>
<td>42.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
<td>1</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
<td>1</td>
<td>42.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2021-05-07</td>
<td>NaN</td>
<td>1</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
<td>2</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>2021-05-09</td>
<td>NaN</td>
<td>2</td>
<td>11.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2</td>
<td>2021-05-10</td>
<td>NaN</td>
<td>2</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>3</td>
<td>2021-07-11</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3</td>
<td>2021-07-12</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="bfill-strategy" class="level3">
<h3 class="anchored" data-anchor-id="bfill-strategy"><code>bfill</code> Strategy</h3>
<p>Instead of sorting the dates ascending, we will sort them descending. This is akin to starting at the last row in an event group and going backwards using the same logic outlined above.</p>
<p>Let’s take a look:</p>
<pre><code>    event_id measured_on  measurement  grouper
0          0  2021-06-01          NaN        1 # null, take the previous row value (NaN → 5.0)
1          0  2021-06-02          5.0        1 # last row, do nothing
2          1  2021-05-05         42.0        1 # not null, do nothing
3          1  2021-06-03          NaN        0 # null, take previous row value (NaN → NaN)
4          1  2021-06-04          NaN        0 # last row, do nothing
5          2  2021-05-06         42.0        2 # not null, do nothing
6          2  2021-05-07          NaN        1 # null, take previous row value (NaN → 11.0)
7          2  2021-05-08         11.0        1 # not null, do nothing
8          2  2021-05-09          NaN        0 # null, take previous row value (NaN → NaN)
9          2  2021-05-10          NaN        0 # not null, do nothing
10         3  2021-07-11          NaN        0 # null, take previous row value (NaN → NaN)
11         3  2021-07-12          NaN        0 # last row, do nothing</code></pre>
<p>Codewise, <code>bfill</code> follows the same strategy as <code>ffill</code>, we need to specify <code>order_by</code> to use <code>ibis.desc</code>. This will flip our dates and our counts (therefore our <code>grouper</code>s) will start backwards.</p>
<div id="d630f1e3" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.window(group_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.event_id, order_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis.desc(data.measured_on), following<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3">grouped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.mutate(grouper<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.measurement.count().over(win))</span>
<span id="cb10-4"></span>
<span id="cb10-5">grouped.execute().sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'event_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'measured_on'</span>]).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
<th data-quarto-table-cell-role="th">grouper</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2021-05-07</td>
<td>NaN</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>2021-05-09</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2</td>
<td>2021-05-10</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>3</td>
<td>2021-07-11</td>
<td>NaN</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3</td>
<td>2021-07-12</td>
<td>NaN</td>
<td>0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>And, again, if we take max of our <code>grouper</code> value, we will get the only non-null value if it exists:</p>
<div id="c94230f2" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb11-2">    grouped</span>
<span id="cb11-3">    .group_by([grouped.event_id, grouped.grouper])</span>
<span id="cb11-4">    .mutate(bfill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grouped.measurement.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb11-5">    .execute()</span>
<span id="cb11-6">).sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'event_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'measured_on'</span>]).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-7"></span>
<span id="cb11-8">result</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
<th data-quarto-table-cell-role="th">grouper</th>
<th data-quarto-table-cell-role="th">bfill</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
<td>1</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
<td>2</td>
<td>42.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2021-05-07</td>
<td>NaN</td>
<td>1</td>
<td>11.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
<td>1</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>2021-05-09</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2</td>
<td>2021-05-10</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>3</td>
<td>2021-07-11</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3</td>
<td>2021-07-12</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="bfill-and-ffill-without-event-groups" class="level3">
<h3 class="anchored" data-anchor-id="bfill-and-ffill-without-event-groups"><code>bfill</code> and <code>ffill</code> without Event Groups</h3>
<p>You can <code>bfill</code> and <code>ffill</code> without event groups by ignoring that grouping. Remove all references of <code>event_id</code> and you can treat the entire dataset as one event.</p>
<p>Your window function will increment whenever a new non-null value is observed, creating that partition where each set has up to one non-null value.</p>
<p>For example, reasoning through <code>bfill</code>:</p>
<div id="401e3b62" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">data.execute().sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'measured_on'</span>])</span>
<span id="cb12-2"></span>
<span id="cb12-3">win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.window(order_by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ibis.desc(data.measured_on), following<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-4"></span>
<span id="cb12-5">grouped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.mutate(grouper<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.measurement.count().over(win))</span>
<span id="cb12-6"></span>
<span id="cb12-7">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb12-8">    grouped</span>
<span id="cb12-9">    .group_by([grouped.grouper])</span>
<span id="cb12-10">    .mutate(bfill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grouped.measurement.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb12-11">)</span>
<span id="cb12-12"></span>
<span id="cb12-13">result.execute().sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'measured_on'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">event_id</th>
<th data-quarto-table-cell-role="th">measured_on</th>
<th data-quarto-table-cell-role="th">measurement</th>
<th data-quarto-table-cell-role="th">grouper</th>
<th data-quarto-table-cell-role="th">bfill</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>1</td>
<td>2021-05-05</td>
<td>42.0</td>
<td>4</td>
<td>42.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>2</td>
<td>2021-05-06</td>
<td>42.0</td>
<td>3</td>
<td>42.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2021-05-07</td>
<td>NaN</td>
<td>2</td>
<td>11.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4</td>
<td>2</td>
<td>2021-05-08</td>
<td>11.0</td>
<td>2</td>
<td>11.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9</td>
<td>2</td>
<td>2021-05-09</td>
<td>NaN</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>2021-05-10</td>
<td>NaN</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">7</td>
<td>0</td>
<td>2021-06-01</td>
<td>NaN</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6</td>
<td>0</td>
<td>2021-06-02</td>
<td>5.0</td>
<td>1</td>
<td>5.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>2021-06-03</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>2021-06-04</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">1</td>
<td>3</td>
<td>2021-07-11</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">0</td>
<td>3</td>
<td>2021-07-12</td>
<td>NaN</td>
<td>0</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>As an exercise, try to take your time and reason your way through <code>ffill</code>.</p>
<p>Happy coding!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>blog</category>
  <category>window functions</category>
  <category>time series</category>
  <guid>https://ibis-project.org/posts/ffill-and-bfill-using-ibis/index.html</guid>
  <pubDate>Fri, 09 Sep 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis v3.1.0</title>
  <dc:creator>Marlene Mhangami</dc:creator>
  <link>https://ibis-project.org/posts/Ibis-version-3.1.0-release/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Ibis 3.1 has officially been released as the latest version of the package. With this release comes new convenience features, increased backend operation coverage and a plethora of bug fixes. As usual, a full list of the changes can be found in the project release notes <a href="../../release_notes.html">here</a> Let’s talk about some of the new changes 3.1 brings for Ibis users.</p>
</section>
<section id="ibis.connect" class="level2">
<h2 class="anchored" data-anchor-id="ibis.connect"><code>ibis.connect</code></h2>
<p>The first significant change to note is that, Ibis now provides a more convenient way to connect to a backend using the <code>ibis.connect</code> method. You can now use this function to connect to an appropriate backend using a connection string.</p>
<p>Here are some examples:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">DuckDB</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Postgres</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Initialize a DuckDB instance using <code>'duckdb://:memory:'</code></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">conn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'duckdb://:memory:'</span>)</span></code></pre></div>
<p>And begin registering your tables:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/dates.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dates'</span>)</span>
<span id="cb2-2">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/farmer_groups.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'farmer_groups'</span>)</span>
<span id="cb2-3">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/crops.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'crops'</span>)</span>
<span id="cb2-4">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/farms.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'farms'</span>)</span>
<span id="cb2-5">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/harvest.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'harvest'</span>)</span>
<span id="cb2-6">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/farmers.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'farmers'</span>)</span>
<span id="cb2-7">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/tracts.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tracts'</span>)</span>
<span id="cb2-8">conn.register(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://farm_data/fields.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fields'</span>)</span></code></pre></div>
<p>You can also do this programmatically:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'farm_data/*.csv'</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files:</span>
<span id="cb3-4">    fname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv://'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span></span>
<span id="cb3-5">    tname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'farm_data/'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>).replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.csv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb3-6">    conn.register(fname, tname)</span></code></pre></div>
<p>This method isn’t limited to <code>csv://</code>. It works with <code>parquet://</code> and <code>csv.gz://</code> as well. Give it a try!</p>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">conn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'postgres://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;database&gt;'</span>)</span></code></pre></div>
<p>Or, using a <a href="https://www.postgresql.org/docs/9.3/libpq-pgpass.html"><code>.pgpass</code> file</a>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">conn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'postgres://&lt;username&gt;@&lt;host&gt;:&lt;port&gt;/&lt;database&gt;'</span>)</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="unnest-support" class="level2">
<h2 class="anchored" data-anchor-id="unnest-support">Unnest Support</h2>
<p>One of the trickier parts about working with data is that it doesn’t usually come organized in neat, predictable rows and columns. Instead data often consists of rows that could contain a single bit of data or arrays of it. When data is organized in layers, as with arrays, it can sometimes be difficult to work with. Ibis 3.1 introduces the <code>unnest</code> function as a way to flatten arrays of data.</p>
<p>Unnest takes a column containing an array of values and separates the individual values into rows as shown:</p>
<p>Before Unnest:</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">col</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">[1, 2]</td>
</tr>
</tbody>
</table>
<p>After Unnest:</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">col</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">2</td>
</tr>
</tbody>
</table>
<p>Here is a self-contained example of creating a dataset with an array and then unnesting it:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">DuckDB</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Postgres</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parquet save path</span></span>
<span id="cb6-5">fname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_data.parquet'</span></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mock Data</span></span>
<span id="cb6-8">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-9">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>]</span>
<span id="cb6-10">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb6-11">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]</span>
<span id="cb6-12">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]]</span>
<span id="cb6-13">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]</span>
<span id="cb6-14">]</span>
<span id="cb6-15"></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save as parquet</span></span>
<span id="cb6-17">pd.DataFrame(data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).to_parquet(fname)</span>
<span id="cb6-18"></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connect to the file using a DuckDB backend</span></span>
<span id="cb6-20">conn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"duckdb://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a table expression for your loaded data</span></span>
<span id="cb6-23">array_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> conn.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"array_data"</span>)</span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optionally execute the array data to preview</span></span>
<span id="cb6-26">array_data.execute()</span>
<span id="cb6-27"></span>
<span id="cb6-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select the unnested values with their corresponding IDs</span></span>
<span id="cb6-29">array_data.select([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_id'</span>, array_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>].unnest()]).execute()</span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ibis</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Postgres connection string for user 'ibistutorials' with a valid .pgpass file in `/</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See https://www.postgresql.org/docs/9.3/libpq-pgpass.html for details on `/.pgpass</span></span>
<span id="cb7-6">cstring <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'postgres://ibistutorials@localhost:5432/pg-ibis'</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mock Data</span></span>
<span id="cb7-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb7-10">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>]</span>
<span id="cb7-11">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb7-12">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]</span>
<span id="cb7-13">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]]</span>
<span id="cb7-14">    ,[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]</span>
<span id="cb7-15">]</span>
<span id="cb7-16"></span>
<span id="cb7-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a dataframe for easy loading</span></span>
<span id="cb7-18">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb7-19"></span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Postgres backend connection</span></span>
<span id="cb7-21">conn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(cstring)</span>
<span id="cb7-22"></span>
<span id="cb7-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SQLAlchemy Types</span></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Integer type</span></span>
<span id="cb7-25">int_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.backends.postgres.sa.types.INT()</span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Array type function</span></span>
<span id="cb7-27">arr_f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ibis.backends.postgres.sa.types.ARRAY</span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data to table using pd.DataFrame.to_sql</span></span>
<span id="cb7-30">df.to_sql(</span>
<span id="cb7-31">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_data'</span></span>
<span id="cb7-32">    ,con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>conn.con.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>()</span>
<span id="cb7-33">    ,if_exists<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replace'</span></span>
<span id="cb7-34">    ,index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb7-35">    ,dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb7-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_id'</span>: int_type</span>
<span id="cb7-37">        ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>: arr_f(int_type)</span>
<span id="cb7-38">    }</span>
<span id="cb7-39">)</span>
<span id="cb7-40"></span>
<span id="cb7-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Array Data Table Expression</span></span>
<span id="cb7-42">array_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> conn.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"array_data"</span>)</span>
<span id="cb7-43"></span>
<span id="cb7-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optionally execute to preview entire table</span></span>
<span id="cb7-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># array_data.execute()</span></span>
<span id="cb7-46"></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unnest</span></span>
<span id="cb7-48">array_data.select([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_id'</span>, array_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>].unnest()]).execute()</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="api" class="level2">
<h2 class="anchored" data-anchor-id="api"><code>_</code> API</h2>
<p>There is now a shorthand for lambda functions using underscore (<code>_</code>). This is useful for chaining expressions to one another and helps reduce total line characters and appearances of lambdas.</p>
<p>For example, let’s use <code>array_data</code> from above. We will unnest <code>array_value</code>, find the weighted average, and then sum in one expression:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ibis <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _</span>
<span id="cb8-2"></span>
<span id="cb8-3">(</span>
<span id="cb8-4">    array_data</span>
<span id="cb8-5">    .select([</span>
<span id="cb8-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_id'</span></span>
<span id="cb8-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># array_data returns a TableExpr, `_` here is shorthand</span></span>
<span id="cb8-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for that returned expression</span></span>
<span id="cb8-9">        ,_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>].unnest().name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'arval'</span>)</span>
<span id="cb8-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we can use it instead of saying `array_data`</span></span>
<span id="cb8-11">        ,(_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>].length().cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float'</span>)</span>
<span id="cb8-12">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'array_value'</span>].length().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>().cast(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float'</span>)).name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'wgt'</span>)</span>
<span id="cb8-13">    ])</span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the above `select` statement returns a TableExpr, we can use</span></span>
<span id="cb8-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># `_` to reference that one as well:</span></span>
<span id="cb8-16">    .mutate(wgt_prod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.arval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _.wgt)</span>
<span id="cb8-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># And again:</span></span>
<span id="cb8-18">    .aggregate(vsum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.wgt_prod.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(), vcount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.wgt_prod.count())</span>
<span id="cb8-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># And again:</span></span>
<span id="cb8-20">    .mutate(wgt_mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>_.vsum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _.vcount)</span>
<span id="cb8-21">).execute()</span></code></pre></div>
<p>Note that if you import <code>_</code> directly from <code>ibis</code> (<code>from ibis import _</code>), the default <code>_</code> object will lose its functionality, so be mindful if you have a habit of using it outside of Ibis.</p>
</section>
<section id="additional-changes" class="level2">
<h2 class="anchored" data-anchor-id="additional-changes">Additional Changes</h2>
<p>Along with these changes, the operation matrix has had a few more holes filled. Contributors should note that backend test data is now loaded dynamically. Most users won’t be exposed to this update, but it should make contribution a bit more streamlined.</p>
<p>To see the full patch notes, go to the <a href="../../release_notes.html">patch notes page</a></p>
<p>As always, Ibis is free and open source. Contributions are welcome and encouraged–drop into the discussions, raise an issue, or put in a pull request.</p>
<p>Download ibis 3.1 today!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>release</category>
  <category>blog</category>
  <guid>https://ibis-project.org/posts/Ibis-version-3.1.0-release/index.html</guid>
  <pubDate>Mon, 25 Jul 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ibis v3.0.0</title>
  <dc:creator>Marlene Mhangami</dc:creator>
  <link>https://ibis-project.org/posts/Ibis-version-3.0.0-release/index.html</link>
  <description><![CDATA[ 




<section id="ibis-v3.0.0" class="level1">
<h1>Ibis v3.0.0</h1>
<p>The latest version of Ibis, version 3.0.0, has just been released! This post highlights some of the new features, breaking changes, and performance improvements that come with the new release. 3.0.0 is a major release and includes more changes than those listed in this post. A full list of the changes can be found in the project release notes <a href="https://ibis-project.org/docs/dev/release_notes/">here</a>.</p>
<section id="new-features" class="level2">
<h2 class="anchored" data-anchor-id="new-features">New Features</h2>
<p>Aligned to the roadmap and in response to the community’s requests, Ibis 3.0.0 introduces many new features and functionality.</p>
<ol type="1">
<li>Now query an Ibis table using inline SQL</li>
<li><em>NEW</em> DuckDB backend</li>
<li>Explore the <em>NEW</em> backend support matrix tool</li>
<li>Improved support for arrays and tuples in ClickHouse</li>
<li>Suffixes now supported in join API expressions</li>
<li>APIs for creating timestamps and dates from component fields</li>
<li>Pretty printing in ipython/ notebooks</li>
</ol>
<p>Refer to the sections below for more detail on each new feature.</p>
<section id="inline-sql" class="level3">
<h3 class="anchored" data-anchor-id="inline-sql">Inline SQL</h3>
<p>The most exciting feature of this release is inline SQL! Many data scientists or developers may be familiar with both Python and SQL. However there may be some queries, transformations that they feel comfortable doing in SQL instead of Python. In the updated version of Ibis users can query an Ibis table using SQL! The new .sql method allows users to mix SQL strings with ibis expressions as well as query ibis table expressions in SQL strings.</p>
<p>This functionality currently works for the following backends:</p>
<ol type="1">
<li>PostgreSQL</li>
<li>DuckDB</li>
<li>PySpark</li>
<li>MySQL</li>
</ol>
<p>If you’re interested in adding .sql support for other backends please <a href="https://github.com/ibis-project/ibis/issues?page=2&amp;q=is%3Aissue+is%3Aclosed+milestone%3A3.0.0">open an issue</a>.</p>
</section>
<section id="duckdb-backend" class="level3">
<h3 class="anchored" data-anchor-id="duckdb-backend">DuckDB Backend</h3>
<p>Ibis now supports DuckDB as a backend. DuckDB is a high-performance SQL OLAP database management system. It is designed to be fast, reliable and easy to use and can be embedded. Many Ibis use cases start from getting tables from a single-node backend so directly supporting DuckDB offers a lot of value. As mentioned earlier, the DuckDB backend allows for the new .sql method on tables for mixing sql and Ibis expressions.</p>
</section>
<section id="backend-support-matrix" class="level3">
<h3 class="anchored" data-anchor-id="backend-support-matrix">Backend Support Matrix</h3>
<p>As the number of backends Ibis supports grows, it can be challenging for users to decide which one best fits their needs. One way to make a more informed decision is for users to find the backend that supports the operations they intend to use. The 3.0.0 release comes with a backend support matrix that allows users to do just that. A screenshot of part of the matrix can be seen below and the full version can be found <a href="https://ibis-project.org/docs/dev/backends/support_matrix/">here</a>.</p>
<p>In addition to this users can now call <code>ibis.${backend}.has_operation</code> to find out if a specific operation is supported by a backend.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ibis-project.org/posts/Ibis-version-3.0.0-release/matrix.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">backend support matrix</figcaption>
</figure>
</div>
</section>
<section id="support-of-arrays-and-tuples-for-clickhouse" class="level3">
<h3 class="anchored" data-anchor-id="support-of-arrays-and-tuples-for-clickhouse">Support of arrays and tuples for ClickHouse</h3>
<p>The 3.0.0 release includes a slew of important improvements for the ClickHouse backend. Most prominently ibis now supports ClickHouse arrays and tuples. Some of the related operations that have been implemented are:</p>
<ul>
<li>ArrayIndex</li>
<li>ArrayConcat</li>
<li>ArrayRepeat</li>
<li>ArraySlice</li>
</ul>
<p>Other additional operations now supported for the clickhouse backend are string concat, string slicing, table union, trim, pad and string predicates (LIKE and ILIKE) and all remaining joins.</p>
</section>
<section id="suffixes-now-supported-in-join-api-expressions" class="level3">
<h3 class="anchored" data-anchor-id="suffixes-now-supported-in-join-api-expressions">Suffixes now supported in join API expressions</h3>
<p>In previous versions Ibis’ join API did not accept suffixes as a parameter, leaving backends to either use some default value or raise an error at execution time when column names overlapped. In 3.0.0 suffixes are now directly supported in the join API itself. Along with the removal of materialize, ibis now automatically adds a default suffix to any overlapping column names.</p>
</section>
<section id="creating-timestamp-from-component-fields" class="level3">
<h3 class="anchored" data-anchor-id="creating-timestamp-from-component-fields">Creating timestamp from component fields</h3>
<p>It is now possible to create timestamps directly from component fields. This is now possible using the new method <code>ibis.date(y,m,d)</code>. A user can pass in a year, month and day and the result is a datetime object. That is we can assert for example that <code>ibis.date (2022, 2, 4).type() == dt.date</code></p>
</section>
<section id="pretty-print-tables-in-ipython-notebooks" class="level3">
<h3 class="anchored" data-anchor-id="pretty-print-tables-in-ipython-notebooks">Pretty print tables in ipython notebooks</h3>
<p>For users that use jupyter notebooks, <code>repr_html</code> has been added for expressions to enable pretty printing tables in the notebook. This is currently only available for interactive mode (currently delegating to pandas implementation) and should help notebooks become more readable. An example of what this looks like can be seen below.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ibis-project.org/posts/Ibis-version-3.0.0-release/repr.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">pretty print repr</figcaption>
</figure>
</div>
</section>
</section>
<section id="other-changes" class="level2">
<h2 class="anchored" data-anchor-id="other-changes">Other Changes</h2>
<p>3.0.0 is a major release and according to the project’s use of semantic versioning, breaking changes are on the table. The full list of these changes can be found <a href="https://ibis-project.org/docs/dev/release_notes/">here</a>. Some of the important changes include:</p>
<ol type="1">
<li>Python 3.8 is now the minimum supported version</li>
<li>Deprecation of <code>.materialize()</code></li>
</ol>
<p>Refer to the sections below for more detail on these changes.</p>
<section id="the-minimum-supported-python-version-is-now-python-3.8" class="level3">
<h3 class="anchored" data-anchor-id="the-minimum-supported-python-version-is-now-python-3.8">The minimum supported Python version is now Python 3.8</h3>
<p>Ibis currently follows <a href="https://numpy.org/neps/nep-0029-deprecation_policy.html">NEP 29</a>, a community policy standard that recommends Python and Numpy versions to support. NEP 29 suggests that all projects across the Scientific Python ecosystem adopt a common “time window-based” policy for support of Python and NumPy versions. Standardizing a recommendation for project support of minimum Python and NumPy versions will improve downstream project planning. As part of the 3.0.0 release, support for Python 3.7 has been dropped and the project has now adopted support for version 3.8 and higher.</p>
</section>
<section id="deprecation-of-.materialize" class="level3">
<h3 class="anchored" data-anchor-id="deprecation-of-.materialize">Deprecation of .materialize()</h3>
<p>This release sees the deprecation of the <code>.materialize()</code> method from TableExpr. In the past, the materialize method has caused a lot of confusion. Doing simple things like <code>t.join(s, t.foo == s.foo).select(["unambiguous_column"])</code> raised an exception because of it. It turns out that .materialize() isn’t necessary. The materialize method still exists, but is now a no-op and doesn’t need to be used.</p>
</section>
</section>
<section id="performance-improvements" class="level2">
<h2 class="anchored" data-anchor-id="performance-improvements">Performance Improvements</h2>
<p>The following changes to the Ibis codebase have resulted in performance improvements.</p>
<ol type="1">
<li>Speeding up <code>__str__</code> and <code>__hash__</code> datatypes</li>
<li>Creating a fast path for simple column selection (pandas/dask backends)</li>
<li>Global equality cache</li>
<li>Removing full tree repr from rule validator error message</li>
<li>Speed up attribute access</li>
<li>Using assign instead of concat in projections when possible (pandas/dask backends)</li>
</ol>
<p>Additionally, all TPC-H suite queries can be represented in Ibis. All queries are ready-to-run, using the default substitution parameters as specified by the TPC-H spec. Queries have been added <a href="https://github.com/ibis-project/tpc-queries">here</a>.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In summary, the 3.0.0 release includes a number of new features including the ability to query an Ibis table using inline SQL, a DuckDB backend, a backend support matrix tool, support for arrays and tuples, suffixes in joins, timestamps from component fields and prettier tables in ipython. Some breaking changes to take note of are the removal of .materialize() and the switch to Python 3.8 as the minimum supported version. A wide range of changes to the code has also led to significant speed ups in 3.0.0 as well.</p>
<p>Ibis is a community led, open source project. If you’d like to contribute to the project check out the contribution guide <a href="https://ibis-project.org/docs/dev/contribute/01_environment/">here</a>. If you run into a problem and would like to submit an issue you can do so through Ibis’ <a href="https://github.com/ibis-project/ibis">Github repository</a>. Finally, Ibis relies on community support to grow and to become successful! You can help promote Ibis by following and sharing the project on <a href="https://twitter.com/IbisData">Twitter</a>, <a href="https://github.com/ibis-project/ibis">starring the repo</a> or <a href="https://ibis-project.org/docs/dev/">contributing</a> to the code. Ibis continues to improve with every release. Keep an eye on the blog for updates on the next one!</p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>release</category>
  <category>blog</category>
  <guid>https://ibis-project.org/posts/Ibis-version-3.0.0-release/index.html</guid>
  <pubDate>Mon, 25 Apr 2022 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
