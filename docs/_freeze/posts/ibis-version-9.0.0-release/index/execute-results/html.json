{
  "hash": "4dc6abb90a6543ba5c7435fa58a75e82",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Ibis 9.0: SQLGlot-ification\"\nauthor: \"Ibis team\"\ndate: \"2024-04-09\"\ncategories:\n    - release\n    - blog\n---\n\n\n## Overview\n\nIbis 9.0 completes [\"the big\nrefactor\"](../../posts/roadmap-2024-H1/index.qmd#the-big-refactor), completing\nthe transition from SQLAlchemy to [SQLGlot](https://github.com/tobymao/sqlglot)\nand drastically simplifying the codebase. This is a big step toward stabilized\ninternals and allows us to more easily add new features and backends going\nforward.\n\nIbis 9.0 also adds new functionality, fixes many bugs, and welcomes a new\ncommitter to the project!\n\n### New committer\n\nWe're excited to welcome [Nick Crews](https://github.com/NickCrews) as the\nnewest committer to the Ibis project! Nick has been a long-time contributor to\nIbis, one of the most active people on the issue tracker, and increasingly\ninvolved in the community. We're excited to have him on board!\n\n## Backends\n\nNo new backends were added in this release, [unless you count the April Fools'\nDay Unix backend](../unix-backend/index.qmd)! As always, there have been\nbackend-specific improvements and bug fixes. Some highlights are below.\n\nCheck the [full changelog](../../release_notes.md) for more details.\n\n### DuckDB\n\nWith [DuckDB's addition of MySQL as a database it can attach\nto](https://duckdb.org/2024/01/26/multi-database-support-in-duckdb.html), we've\nadded a `read_mysql` function to Ibis inline with `read_postgres` and\n`read_sqlite`.\n\n### PySpark\n\nPySpark 3.5 is now supported.\n\n### Apache Flink\n\nScalar user-defined functions (UDFs) are now supported in the Flink backend.\n\n### RisingWave\n\nStreaming data definition language (DDL) support has been added to the\nRisingWave backend.\n\n## Breaking changes\n\nYou can view the [full changelog](../../release_notes.md) for additional\nbreaking changes. There is [one we expect to affect many\nusers](#what-does-schema-mean).\n\nIf you're new to Ibis, see [how to install](../../../install.qmd) and [the\ngetting started tutorial](../../../tutorials/getting_started.qmd).\n\nTo follow along with this blog, ensure you're on `'ibis-framework>=9,<10'`.\nFirst, we’ll setup Ibis for interactive use:\n\n::: {#649dc1fb .cell execution_count=1}\n``` {.python .cell-code}\nimport ibis\nimport ibis.selectors as s\n\nibis.options.interactive = True\nibis.options.repr.interactive.max_rows = 3\n```\n:::\n\n\nAnd fetch the penguins dataset:\n\n::: {#ac1d0459 .cell execution_count=2}\n``` {.python .cell-code}\nt = ibis.examples.penguins.fetch()\nt\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓\n┃<span style=\"font-weight: bold\"> species </span>┃<span style=\"font-weight: bold\"> island    </span>┃<span style=\"font-weight: bold\"> bill_length_mm </span>┃<span style=\"font-weight: bold\"> bill_depth_mm </span>┃<span style=\"font-weight: bold\"> flipper_length_mm </span>┃<span style=\"font-weight: bold\"> body_mass_g </span>┃<span style=\"font-weight: bold\"> sex    </span>┃<span style=\"font-weight: bold\"> year  </span>┃\n┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>  │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>    │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>        │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>             │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span> │\n├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.1</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.7</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">181</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3750</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.5</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17.4</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">186</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3800</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">40.3</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.0</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">195</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3250</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>         │              <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │             <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │                 <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │           <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │     <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │\n└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘\n</pre>\n```\n:::\n:::\n\n\n### What does \"schema\" mean?\n\nIn Ibis, a \"schema\" is a mapping of column names to their types:\n\n::: {#2540c837 .cell execution_count=3}\n``` {.python .cell-code}\nt.schema()\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\nibis.Schema {\n  species            string\n  island             string\n  bill_length_mm     float64\n  bill_depth_mm      float64\n  flipper_length_mm  int64\n  body_mass_g        int64\n  sex                string\n  year               int64\n}\n```\n:::\n:::\n\n\nAnd as of Ibis 9.0, that is all \"schema\" means! In building a standard Python\ndataframe interface, we must standardize naming conventions and terminology\nacross data systems. Many systems use the words \"schema\", \"database\", \"catalog\",\nand \"namespace\" to mean different things.\n\nWe have standardizes on `table` as the container of data which has a `schema`. A\n`database` is a collection of tables, and a `catalog` is a collection of\ndatabases. Not all backends will support all levels of hierarchy.\n\nUsing other `schema` methods as of Ibis 9.0 will give a deprecation warning, and\nthe arguments throughout the API have been updated to reflect the\nstandardization.\n\nFor example, `list_schemas()` will give a deprecation warning:\n\n::: {#c5ff4c65 .cell execution_count=4}\n``` {.python .cell-code}\ncon = ibis.connect(\"duckdb://\")\ncon.list_schemas()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/hm/f6m13d5d4xg6v606d3mfndnh0000gn/T/ipykernel_20163/2769547408.py:2: FutureWarning:\n\n`CanListSchema.list_schemas` is deprecated as of v9.0, removed in v10.0; Use `list_databases` instead`\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=28}\n```\n['information_schema', 'main', 'pg_catalog']\n```\n:::\n:::\n\n\nUse `list_databases()` instead:\n\n::: {#005944ce .cell execution_count=5}\n``` {.python .cell-code}\ncon.list_databases()\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```\n['information_schema', 'main', 'pg_catalog']\n```\n:::\n:::\n\n\nYou can also `list_catalogs()`:\n\n::: {#a99af775 .cell execution_count=6}\n``` {.python .cell-code}\ncon.list_catalogs()\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\n['memory', 'system', 'temp']\n```\n:::\n:::\n\n\nAnd get the current database:\n\n::: {#33b06a80 .cell execution_count=7}\n``` {.python .cell-code}\ncon.current_database\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\n'main'\n```\n:::\n:::\n\n\nAnd the current catalog:\n\n::: {#10450e76 .cell execution_count=8}\n``` {.python .cell-code}\ncon.current_catalog\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```\n'memory'\n```\n:::\n:::\n\n\n### Other breaking changes\n\nThere were a few more minor breaking changes, see [the full\nchangelog](../../release_notes.md) for more details.\n\n## Functionality\n\nA lot of new functionality has been added in Ibis 9.0.\n\n### Python 3.12\n\n[Ibis now supports Python 3.12](https://github.com/ibis-project/ibis/pull/8529)!\n\n### GraphViz custom attributes\n\nThanks to [a couple](https://github.com/ibis-project/ibis/pull/8510) [community\ncontributions](https://github.com/ibis-project/ibis/pull/8527), you can now pass\ncustom attributes to the GraphViz visualization of an expression.\n\n:::{.callout-tip}\nYou can also call `expr.visualize()` and pass the same arguments.\n:::\n\n::: {#04fa9e13 .cell execution_count=9}\n``` {.python .cell-code}\nfrom ibis.expr.visualize import to_graph\n\nexpr = (\n    t.group_by(\"species\", \"island\")\n    .agg(count=t.count())\n    .order_by(ibis._[\"count\"].desc())\n)\n\nto_graph(\n    expr,\n    label_edges=True,\n    node_attr={\"shape\": \"hexagon\", \"color\": \"green\", \"fontname\": \"Roboto Mono\"},\n    edge_attr={\"fontsize\": \"12\", \"fontname\": \"Comic Sans MS\"},\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n![](index_files/figure-html/cell-10-output-1.svg){}\n:::\n:::\n\n\n### Polars input and output\n\nYou can now directly output a Polars dataframe from an Ibis table (instead of\ngoing through Apache Arrow as previously possible):\n\n::: {#9f36339b .cell execution_count=10}\n``` {.python .cell-code}\nt.to_polars()\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```{=html}\n<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (344, 8)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>species</th><th>island</th><th>bill_length_mm</th><th>bill_depth_mm</th><th>flipper_length_mm</th><th>body_mass_g</th><th>sex</th><th>year</th></tr><tr><td>str</td><td>str</td><td>f64</td><td>f64</td><td>i64</td><td>i64</td><td>str</td><td>i64</td></tr></thead><tbody><tr><td>&quot;Adelie&quot;</td><td>&quot;Torgersen&quot;</td><td>39.1</td><td>18.7</td><td>181</td><td>3750</td><td>&quot;male&quot;</td><td>2007</td></tr><tr><td>&quot;Adelie&quot;</td><td>&quot;Torgersen&quot;</td><td>39.5</td><td>17.4</td><td>186</td><td>3800</td><td>&quot;female&quot;</td><td>2007</td></tr><tr><td>&quot;Adelie&quot;</td><td>&quot;Torgersen&quot;</td><td>40.3</td><td>18.0</td><td>195</td><td>3250</td><td>&quot;female&quot;</td><td>2007</td></tr><tr><td>&quot;Adelie&quot;</td><td>&quot;Torgersen&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>2007</td></tr><tr><td>&quot;Adelie&quot;</td><td>&quot;Torgersen&quot;</td><td>36.7</td><td>19.3</td><td>193</td><td>3450</td><td>&quot;female&quot;</td><td>2007</td></tr><tr><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td></tr><tr><td>&quot;Chinstrap&quot;</td><td>&quot;Dream&quot;</td><td>55.8</td><td>19.8</td><td>207</td><td>4000</td><td>&quot;male&quot;</td><td>2009</td></tr><tr><td>&quot;Chinstrap&quot;</td><td>&quot;Dream&quot;</td><td>43.5</td><td>18.1</td><td>202</td><td>3400</td><td>&quot;female&quot;</td><td>2009</td></tr><tr><td>&quot;Chinstrap&quot;</td><td>&quot;Dream&quot;</td><td>49.6</td><td>18.2</td><td>193</td><td>3775</td><td>&quot;male&quot;</td><td>2009</td></tr><tr><td>&quot;Chinstrap&quot;</td><td>&quot;Dream&quot;</td><td>50.8</td><td>19.0</td><td>210</td><td>4100</td><td>&quot;male&quot;</td><td>2009</td></tr><tr><td>&quot;Chinstrap&quot;</td><td>&quot;Dream&quot;</td><td>50.2</td><td>18.7</td><td>198</td><td>3775</td><td>&quot;female&quot;</td><td>2009</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nAnd you can directly input a Polars dataframe into an Ibis memtable:\n\n::: {#71cba105 .cell execution_count=11}\n``` {.python .cell-code}\nibis.memtable(t.to_polars())\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓\n┃<span style=\"font-weight: bold\"> species </span>┃<span style=\"font-weight: bold\"> island    </span>┃<span style=\"font-weight: bold\"> bill_length_mm </span>┃<span style=\"font-weight: bold\"> bill_depth_mm </span>┃<span style=\"font-weight: bold\"> flipper_length_mm </span>┃<span style=\"font-weight: bold\"> body_mass_g </span>┃<span style=\"font-weight: bold\"> sex    </span>┃<span style=\"font-weight: bold\"> year  </span>┃\n┡━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>  │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>    │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>        │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>             │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span> │\n├─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.1</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.7</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">181</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3750</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.5</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17.4</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">186</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3800</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">40.3</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.0</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">195</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3250</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>         │              <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │             <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │                 <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │           <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │     <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │\n└─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘\n</pre>\n```\n:::\n:::\n\n\nThese conversions are efficient and improve usability of Ibis and Polars\ntogether.\n\n### Scalar subqueries from expressions\n\nYou can now create scalar subqueries from expressions:\n\n::: {#f1537045 .cell execution_count=12}\n``` {.python .cell-code}\nt.select(\"species\").limit(1).as_scalar()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=36}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-green-fg\">'Adelie'</span></pre>\n```\n:::\n\n:::\n:::\n\n\n### Disconnect\n\nYou can now explicitly disconnect from a backend. First, connect to a backend:\n\n::: {#95f3ee11 .cell execution_count=13}\n``` {.python .cell-code}\ncon = ibis.connect(\"duckdb://\")\ncon.list_tables()\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```\n[]\n```\n:::\n:::\n\n\nThen you can disconnect. Trying to use the connection after will raise an error:\n\n::: {#c840517c .cell execution_count=14}\n``` {.python .cell-code}\ncon.disconnect()\ncon.list_tables()\n```\n\n::: {.cell-output .cell-output-error}\n```\nConnectionException: Connection Error: Connection has already been closed\n```\n:::\n:::\n\n\n### Today\n\nYou can now get the current date more easily:\n\n::: {#cb63a8cc .cell execution_count=15}\n``` {.python .cell-code}\nibis.today()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=39}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-magenta-fg ansi-bold\">datetime.date</span><span class=\"ansi-bold\">(</span><span class=\"ansi-cyan-fg ansi-bold\">2024</span>, <span class=\"ansi-cyan-fg ansi-bold\">4</span>, <span class=\"ansi-cyan-fg ansi-bold\">9</span><span class=\"ansi-bold\">)</span></pre>\n```\n:::\n\n:::\n:::\n\n\nAnd use it in expressions:\n\n::: {#ebd1485b .cell execution_count=16}\n``` {.python .cell-code}\nt.mutate(ingested_at=ibis.today()).relocate(\"ingested_at\")\n```\n\n::: {.cell-output .cell-output-display execution_count=40}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓\n┃<span style=\"font-weight: bold\"> ingested_at </span>┃<span style=\"font-weight: bold\"> species </span>┃<span style=\"font-weight: bold\"> island    </span>┃<span style=\"font-weight: bold\"> bill_length_mm </span>┃<span style=\"font-weight: bold\"> bill_depth_mm </span>┃<span style=\"font-weight: bold\"> flipper_length_mm </span>┃<span style=\"font-weight: bold\"> body_mass_g </span>┃<span style=\"font-weight: bold\"> sex    </span>┃<span style=\"font-weight: bold\"> year  </span>┃\n┡━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">date</span>        │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>  │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>    │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>        │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>             │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span> │\n├─────────────┼─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤\n│ <span style=\"color: #800080; text-decoration-color: #800080\">2024-04-09</span>  │ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.1</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.7</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">181</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3750</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #800080; text-decoration-color: #800080\">2024-04-09</span>  │ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.5</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17.4</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">186</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3800</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #800080; text-decoration-color: #800080\">2024-04-09</span>  │ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">40.3</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.0</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">195</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3250</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>           │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>         │              <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │             <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │                 <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │           <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │     <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │\n└─────────────┴─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘\n</pre>\n```\n:::\n:::\n\n\n### UUIDs\n\nYou can now generate universally unique identifiers (UUIDs) in Ibis more easily:\n\n::: {#a37a805d .cell execution_count=17}\n``` {.python .cell-code}\nibis.uuid()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=41}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-magenta-fg ansi-bold\">UUID</span><span class=\"ansi-bold\">(</span><span class=\"ansi-green-fg\">'281061bb-71b2-4e0e-894c-1e050cc971bb'</span><span class=\"ansi-bold\">)</span></pre>\n```\n:::\n\n:::\n:::\n\n\nAnd use them in expressions:\n\n::: {#1d1353a6 .cell execution_count=18}\n``` {.python .cell-code}\nt.mutate(id=ibis.uuid()).relocate(\"id\")\n```\n\n::: {.cell-output .cell-output-display execution_count=42}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓\n┃<span style=\"font-weight: bold\"> id                                   </span>┃<span style=\"font-weight: bold\"> species </span>┃<span style=\"font-weight: bold\"> island    </span>┃<span style=\"font-weight: bold\"> bill_length_mm </span>┃<span style=\"font-weight: bold\"> bill_depth_mm </span>┃<span style=\"font-weight: bold\"> flipper_length_mm </span>┃<span style=\"font-weight: bold\"> body_mass_g </span>┃<span style=\"font-weight: bold\"> sex    </span>┃<span style=\"font-weight: bold\"> year  </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">uuid</span>                                 │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>  │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>    │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>        │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>             │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span> │\n├──────────────────────────────────────┼─────────┼───────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤\n│ bbfd80ac-e6d6-4511-a828-08ce7055eaf6 │ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.1</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.7</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">181</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3750</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ 6365e42d-dab7-4415-bba6-9a1ee933b27c │ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">39.5</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17.4</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">186</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3800</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ d22ab6bb-59d1-4b29-abba-b53d4a0914cc │ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Torgersen</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">40.3</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18.0</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">195</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3250</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>                                    │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>         │              <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │             <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │                 <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │           <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │     <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │\n└──────────────────────────────────────┴─────────┴───────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘\n</pre>\n```\n:::\n:::\n\n\n### TopK includes NULLs\n\nThis could technically be considered a breaking change or bug fix. Regardless,\n`topk` now includes NULLs by default:\n\n::: {#9ce979ab .cell execution_count=19}\n``` {.python .cell-code}\nt[\"sex\"].topk(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> sex    </span>┃<span style=\"font-weight: bold\"> CountStar(penguins) </span>┃\n┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>               │\n├────────┼─────────────────────┤\n│ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │                 <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">168</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">female</span> │                 <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">165</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">NULL</span>   │                  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">11</span> │\n└────────┴─────────────────────┘\n</pre>\n```\n:::\n:::\n\n\n### Order and group by variadic arguments\n\nFor consistency with other methods, `order_by` and `group_by` now accept\nvariadic arguments:\n\n::: {#7af8e4f5 .cell execution_count=20}\n``` {.python .cell-code}\nt.order_by(t[\"body_mass_g\"].desc(), \"island\", t[\"species\"])\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓\n┃<span style=\"font-weight: bold\"> species </span>┃<span style=\"font-weight: bold\"> island </span>┃<span style=\"font-weight: bold\"> bill_length_mm </span>┃<span style=\"font-weight: bold\"> bill_depth_mm </span>┃<span style=\"font-weight: bold\"> flipper_length_mm </span>┃<span style=\"font-weight: bold\"> body_mass_g </span>┃<span style=\"font-weight: bold\"> sex    </span>┃<span style=\"font-weight: bold\"> year  </span>┃\n┡━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>  │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>        │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">float64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>             │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span> │\n├─────────┼────────┼────────────────┼───────────────┼───────────────────┼─────────────┼────────┼───────┤\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Gentoo </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Biscoe</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">49.2</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">15.2</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">221</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6300</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Gentoo </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Biscoe</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">59.6</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17.0</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">230</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6050</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2007</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Gentoo </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Biscoe</span> │           <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">51.1</span> │          <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">16.3</span> │               <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">220</span> │        <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6000</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">male  </span> │  <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">2008</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>       │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │              <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │             <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │                 <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │           <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │     <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │\n└─────────┴────────┴────────────────┴───────────────┴───────────────────┴─────────────┴────────┴───────┘\n</pre>\n```\n:::\n:::\n\n\n::: {#692d97a5 .cell execution_count=21}\n``` {.python .cell-code}\ngrouped = (\n    t.group_by(\"species\", \"island\")\n    .agg(count=t.count())\n    .order_by(ibis._[\"count\"].desc())\n)\ngrouped\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓\n┃<span style=\"font-weight: bold\"> species   </span>┃<span style=\"font-weight: bold\"> island </span>┃<span style=\"font-weight: bold\"> count </span>┃\n┡━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span>    │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">string</span> │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int64</span> │\n├───────────┼────────┼───────┤\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Gentoo   </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Biscoe</span> │   <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">124</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Chinstrap</span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Dream </span> │    <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">68</span> │\n│ <span style=\"color: #008000; text-decoration-color: #008000\">Adelie   </span> │ <span style=\"color: #008000; text-decoration-color: #008000\">Dream </span> │    <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">56</span> │\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>         │ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span>      │     <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">…</span> │\n└───────────┴────────┴───────┘\n</pre>\n```\n:::\n:::\n\n\nYou can still pass in a list or tuple if you prefer.\n\n### Create more backends with empty URLs\n\nFor convenience, you can now create backends with an empty URL for Dask, pandas,\nPolars, and DataFusion:\n\n::: {#01ce6af4 .cell execution_count=22}\n``` {.python .cell-code}\ncon = ibis.connect(\"dask://\")\ncon = ibis.connect(\"pandas://\")\ncon = ibis.connect(\"polars://\")\ncon = ibis.connect(\"datafusion://\")\n```\n:::\n\n\nThis is in addition to the existing backend-specific connection methods:\n\n::: {#2e28332d .cell execution_count=23}\n``` {.python .cell-code}\ncon = ibis.dask.connect()\ncon = ibis.pandas.connect()\ncon = ibis.polars.connect()\ncon = ibis.datafusion.connect()\n```\n:::\n\n\nNote that URL parameters are not meaningful with these backends. The main use\ncase is more convenient connection swapping programmatically:\n\n::: {#26a64f1e .cell execution_count=24}\n``` {.python .cell-code}\nfor backend in [\n    \"duckdb\",\n    \"sqlite\",\n    \"pyspark\",\n    \"dask\",\n    \"pandas\",\n    \"polars\",\n    \"datafusion\",\n]:\n    con = ibis.connect(f\"{backend}://\")\n    print(con)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<ibis.backends.duckdb.Backend object at 0x106b84e90>\n<ibis.backends.sqlite.Backend object at 0x31dbb2690>\n<ibis.backends.pyspark.Backend object at 0x33ca4b910>\n<ibis.backends.dask.Backend object at 0x33ceabd50>\n<ibis.backends.pandas.Backend object at 0x33cef1a10>\n<ibis.backends.polars.Backend object at 0x33cef20d0>\n<ibis.backends.datafusion.Backend object at 0x33cef0250>\n```\n:::\n:::\n\n\n## Wrapping up\n\nIbis 9.0 is an exciting release that completes the transition to SQLGlot, adds a\nlot of new functionality, and welcomes a new committer to the project!\n\nAs always, try Ibis by [installing](../../install.qmd) and [getting\nstarted](../../tutorials/getting_started.qmd).\n\nIf you run into any issues or find support is lacking for your backend, [open an\nissue](https://github.com/ibis-project/issues/new/choose) or\n[discussion](https://github.com/ibis-project/discussions/new/choose) and let us\nknow!\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}