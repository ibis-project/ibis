{
  "hash": "1ad89b2df6b2be9ce80412975dbc1981",
  "result": {
    "markdown": "---\ntitle: Requirements and setup\n---\n\n\n\nIn this tutorial, we will connect to Starburst Galaxy and verify our connection. Following tutorials will go through the basics of Ibis on Starburst Galaxy's demo data.\n\n## Prerequisites\n\nYou need a Python environment with [Ibis installed](/install.qmd) and a [Starburst Galaxy account](https://www.starburst.io/platform/starburst-galaxy/start).\n\n## Connect to Starburst Galaxy\n\nFirst, connect to Starburst Galaxy. We'll use a `.env` in this  example for secrets that are loaded as environment variables. This requires installing the `python-dotenv` package -- alternatively, you can set the environment variables for your system.\n\n::: {.callout-tip}\nHover over (or click on mobile) the numbers in the code blocks to see tips and explanations.\n:::\n\n\n::: {#f3c56db1 .cell execution_count=1}\n``` {.python .cell-code}\nimport os # <1>\nimport ibis # <1>\nfrom dotenv import load_dotenv # <1>\n\nibis.options.interactive = True # <2>\n\nload_dotenv() # <3>\n\nuser = os.getenv(\"USERNAME\") # <4>\npassword = os.getenv(\"PASSWORD\") # <4>\nhost = os.getenv(\"HOSTNAME\") # <4>\nport = os.getenv(\"PORTNUMBER\") # <4>\ncatalog = \"sample\" # <5>\nschema = \"demo\" # <5>\n\ncon = ibis.trino.connect( # <6>\n    user=user, password=password, host=host, port=port, database=catalog, schema=schema # <6>\n) # <6>\ncon # <7>\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n<ibis.backends.trino.Backend at 0x13f48e850>\n```\n:::\n:::\n\n\n1. Import necessary libraries.\n2. Use Ibis in interactive mode.\n3. Load environment variables.\n4. Load secrets from environment variables.\n5. Use the sample demo data.\n6. Connect to Starburst Galaxy.\n7. Display the connection object.\n\n## Verify connection\n\nList the tables your connection has:\n\n::: {#a31b0db2 .cell execution_count=2}\n``` {.python .cell-code}\ncon.list_tables()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n['astronauts', 'missions']\n```\n:::\n:::\n\n\nRun a SQL query:\n\n::: {#0c478192 .cell execution_count=3}\n``` {.python .cell-code}\ncon.sql(\"select 1 as a\")\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━┓\n┃<span style=\"font-weight: bold\"> a     </span>┃\n┡━━━━━━━┩\n│ <span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">int32</span> │\n├───────┤\n│     <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1</span> │\n└───────┘\n</pre>\n```\n:::\n:::\n\n\nIf you have any issues, check your connection details above. If you are still having issues, [open an issue on Ibis](https://github.com/ibis/ibis-project/issues/new/choose) and we'll do our best to help you!\n\n## Next steps\n\nNow that you're connected to Starburst Galaxy, you can [continue this tutorial to learn the basics of Ibis](1_basics.qmd) or query your own data. See the rest of the Ibis documentation or [Starburst Galaxy documentation](https://docs.starburst.io/starburst-galaxy). You can [open an issue](https://github.com/ibis-project/ibis/issues/new/choose) if you run into one!\n\n",
    "supporting": [
      "0_setup_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}