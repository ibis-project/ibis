# Oracle

[https://docs.oracle.com/database/oracle/oracle-database](https://docs.oracle.com/database/oracle/oracle-database)

{{< include /_callouts/experimental_backend.qmd >}}

![](https://img.shields.io/badge/memtables-fallback-yellow?style=flat-square) ![](https://img.shields.io/badge/inputs-Oracle tables-blue?style=flat-square) ![](https://img.shields.io/badge/outputs-Oracle tables | CSV | pandas | Parquet | PyArrow-orange?style=flat-square)

## Install

Install Ibis and dependencies for the Oracle backend:

::: {.panel-tabset}

## `pip`

Install with the `oracle` extra:

```{.bash}
pip install 'ibis-framework[oracle]'
```

And connect:

```{.python}
import ibis

con = ibis.oracle.connect()  # <1>
```

1. Adjust connection parameters as needed.

## `conda`

Install for Oracle:

```{.bash}
conda install -c conda-forge ibis-oracle
```

And connect:

```{.python}
import ibis

con = ibis.oracle.connect()  # <1>
```

1. Adjust connection parameters as needed.

## `mamba`

Install for Oracle:

```{.bash}
mamba install -c conda-forge ibis-oracle
```

And connect:

```{.python}
import ibis

con = ibis.oracle.connect()  # <1>
```

1. Adjust connection parameters as needed.

:::

## Connect

### `ibis.oracle.connect`

```python
con = ibis.oracle.connect(
    user="username",
    password="password",
    host="hostname",
    port=1521,
    database="database",
)
```

::: {.callout-note}
`ibis.oracle.connect` is a thin wrapper around [`ibis.backends.oracle.Backend.do_connect`](#ibis.backends.oracle.Backend.do_connect).
:::

### Connection Parameters

```{python}
#| echo: false
#| output: asis
from _utils import render_do_connect

render_do_connect("oracle")
```

### `ibis.connect` URL format

In addition to `ibis.oracle.connect`, you can also connect to Oracle by
passing a properly formatted Oracle connection URL to `ibis.connect`

```python
con = ibis.connect(f"oracle://{user}:{password}@{host}:{port}/{database}")
```

## Connecting to older Oracle databases

`ibis` uses the `python-oracledb` "thin client" to connect to Oracle databases.
Because early versions of Oracle did not perform case-sensitive checks in
passwords, some DBAs disable case sensitivity to avoid requiring users to update
their passwords. If case-sensitive passwords are disabled, then Ibis will not be
able to connect to the database.

To check if case-sensitivity is enforced you can run

```sql
show parameter sec_case_sensitive_logon;
```

If the returned value is `FALSE` then Ibis will _not_ connect.

For more information, see this [issue](https://github.com/oracle/python-oracledb/issues/26).

```{python}
#| echo: false
BACKEND = "Oracle"
```

{{< include ./_templates/api.qmd >}}
