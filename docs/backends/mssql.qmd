# MSSQL

[https://www.microsoft.com/sql-server](https://www.microsoft.com/sql-server)

![](https://img.shields.io/badge/memtables-fallback-yellow?style=flat-square) ![](https://img.shields.io/badge/inputs-MSSQL tables-blue?style=flat-square) ![](https://img.shields.io/badge/outputs-MSSQL tables | CSV | pandas | Parquet | PyArrow-orange?style=flat-square)

## Install

Install Ibis and dependencies for the MSSQL backend:

::: {.panel-tabset}

## `pip`

Install with the `mssql` extra:

```{.bash}
pip install 'ibis-framework[mssql]'
```

And connect:

```{.python}
import ibis

con = ibis.mssql.connect()  # <1>
```

1. Adjust connection parameters as needed.

## `conda`

Install for MSSQL:

```{.bash}
conda install -c conda-forge ibis-mssql
```

And connect:

```{.python}
import ibis

con = ibis.mssql.connect()  # <1>
```

1. Adjust connection parameters as needed.

## `mamba`

Install for MSSQL:

```{.bash}
mamba install -c conda-forge ibis-mssql
```

And connect:

```{.python}
import ibis

con = ibis.mssql.connect()  # <1>
```

1. Adjust connection parameters as needed.

:::


## Connect

### `ibis.mssql.connect`

::: {.panel-tabset}

## Windows

```python
con = ibis.mssql.connect(
    user="username",
    password="password",
    host="hostname",
    driver="SQL Server",
)
```

## OSX / Linux

```python
con = ibis.mssql.connect(
    user="username",
    password="password",
    host="hostname",
    driver="FreeTDS",  # if you are using unixODBC
)
```

:::

::: {.callout-note}
`ibis.mssql.connect` is a thin wrapper around [`ibis.backends.mssql.Backend.do_connect`](#ibis.backends.mssql.Backend.do_connect).
:::

### Connection Parameters

```{python}
#| echo: false
#| output: asis
from _utils import render_do_connect

render_do_connect("mssql")
```

### `ibis.connect` URL format

In addition to `ibis.mssql.connect`, you can also connect to MSSQL by
passing a properly-formatted MSSQL connection URL to `ibis.connect`:

```python
con = ibis.connect(f"mssql://{user}:{password}@{host}:{port}")
```

### Using Integrated Authentication

Integrated Authentication allows users to log in via NTLM or Kerberos.
To make use of integrated authentication, use `ibis.mssql.connect` as documented
above, but do not specify values for `user` or `password`. The PyODBC driver
will then default to Integrated Authentication.

Some environments may require you to set additional keywords to connect.
Additional information is available at the following pages:

- https://learn.microsoft.com/en-us/aspnet/web-api/overview/security/integrated-windows-authentication
- https://learn.microsoft.com/en-us/sql/connect/odbc/linux-mac/using-integrated-authentication

```{python}
#| echo: false
BACKEND = "MSSQL"
```

{{< include ./_templates/api.qmd >}}
