{"version":3,"file":"768.9b20426af25615c8e95f.js?v=9b20426af25615c8e95f","mappings":"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","sources":["webpack://@jupyterlite/pyodide-kernel-extension/../../node_modules/comlink/dist/esm/comlink.mjs","webpack://@jupyterlite/pyodide-kernel-extension/../pyodide-kernel/lib/kernel.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { PromiseDelegate } from '@lumino/coreutils';\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { BaseKernel } from '@jupyterlite/kernel';\nimport { wrap } from 'comlink';\nimport { allJSONUrl, pipliteWheelUrl } from './_pypi';\n/**\n * A kernel that executes Python code with Pyodide.\n */\nexport class PyodideKernel extends BaseKernel {\n    /**\n     * Instantiate a new PyodideKernel\n     *\n     * @param options The instantiation options for a new PyodideKernel\n     */\n    constructor(options) {\n        super(options);\n        this._ready = new PromiseDelegate();\n        this._worker = this.initWorker(options);\n        this._worker.onmessage = (e) => this._processWorkerMessage(e.data);\n        this._remoteKernel = wrap(this._worker);\n        this.initRemote(options);\n    }\n    /**\n     * Load the worker.\n     *\n     * ### Note\n     *\n     * Subclasses must implement this typographically almost _exactly_ for\n     * webpack to find it.\n     */\n    initWorker(options) {\n        return new Worker(new URL('./comlink.worker.js', import.meta.url), {\n            type: 'module',\n        });\n    }\n    async initRemote(options) {\n        const remoteOptions = this.initRemoteOptions(options);\n        await this._remoteKernel.initialize(remoteOptions);\n        this._ready.resolve();\n    }\n    initRemoteOptions(options) {\n        const { pyodideUrl } = options;\n        const indexUrl = pyodideUrl.slice(0, pyodideUrl.lastIndexOf('/') + 1);\n        const baseUrl = PageConfig.getBaseUrl();\n        const pipliteUrls = [...(options.pipliteUrls || []), allJSONUrl.default];\n        const disablePyPIFallback = !!options.disablePyPIFallback;\n        return {\n            baseUrl,\n            pyodideUrl,\n            indexUrl,\n            pipliteWheelUrl: options.pipliteWheelUrl || pipliteWheelUrl.default,\n            pipliteUrls,\n            disablePyPIFallback,\n            location: this.location,\n            mountDrive: options.mountDrive,\n            loadPyodideOptions: options.loadPyodideOptions || {},\n        };\n    }\n    /**\n     * Dispose the kernel.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._worker.terminate();\n        this._worker = null;\n        super.dispose();\n    }\n    /**\n     * A promise that is fulfilled when the kernel is ready.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Process a message coming from the pyodide web worker.\n     *\n     * @param msg The worker message to process.\n     */\n    _processWorkerMessage(msg) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!msg.type) {\n            return;\n        }\n        switch (msg.type) {\n            case 'stream': {\n                const bundle = (_a = msg.bundle) !== null && _a !== void 0 ? _a : { name: 'stdout', text: '' };\n                this.stream(bundle, msg.parentHeader);\n                break;\n            }\n            case 'input_request': {\n                const bundle = (_b = msg.content) !== null && _b !== void 0 ? _b : { prompt: '', password: false };\n                this.inputRequest(bundle, msg.parentHeader);\n                break;\n            }\n            case 'display_data': {\n                const bundle = (_c = msg.bundle) !== null && _c !== void 0 ? _c : { data: {}, metadata: {}, transient: {} };\n                this.displayData(bundle, msg.parentHeader);\n                break;\n            }\n            case 'update_display_data': {\n                const bundle = (_d = msg.bundle) !== null && _d !== void 0 ? _d : { data: {}, metadata: {}, transient: {} };\n                this.updateDisplayData(bundle, msg.parentHeader);\n                break;\n            }\n            case 'clear_output': {\n                const bundle = (_e = msg.bundle) !== null && _e !== void 0 ? _e : { wait: false };\n                this.clearOutput(bundle, msg.parentHeader);\n                break;\n            }\n            case 'execute_result': {\n                const bundle = (_f = msg.bundle) !== null && _f !== void 0 ? _f : {\n                    execution_count: 0,\n                    data: {},\n                    metadata: {},\n                };\n                this.publishExecuteResult(bundle, msg.parentHeader);\n                break;\n            }\n            case 'execute_error': {\n                const bundle = (_g = msg.bundle) !== null && _g !== void 0 ? _g : { ename: '', evalue: '', traceback: [] };\n                this.publishExecuteError(bundle, msg.parentHeader);\n                break;\n            }\n            case 'comm_msg':\n            case 'comm_open':\n            case 'comm_close': {\n                this.handleComm(msg.type, msg.content, msg.metadata, msg.buffers, msg.parentHeader);\n                break;\n            }\n        }\n    }\n    /**\n     * Handle a kernel_info_request message\n     */\n    async kernelInfoRequest() {\n        const content = {\n            implementation: 'pyodide',\n            implementation_version: '0.1.0',\n            language_info: {\n                codemirror_mode: {\n                    name: 'python',\n                    version: 3,\n                },\n                file_extension: '.py',\n                mimetype: 'text/x-python',\n                name: 'python',\n                nbconvert_exporter: 'python',\n                pygments_lexer: 'ipython3',\n                version: '3.8',\n            },\n            protocol_version: '5.3',\n            status: 'ok',\n            banner: 'A WebAssembly-powered Python kernel backed by Pyodide',\n            help_links: [\n                {\n                    text: 'Python (WASM) Kernel',\n                    url: 'https://pyodide.org',\n                },\n            ],\n        };\n        return content;\n    }\n    /**\n     * Handle an `execute_request` message\n     *\n     * @param msg The parent message.\n     */\n    async executeRequest(content) {\n        await this.ready;\n        const result = await this._remoteKernel.execute(content, this.parent);\n        result.execution_count = this.executionCount;\n        return result;\n    }\n    /**\n     * Handle an complete_request message\n     *\n     * @param msg The parent message.\n     */\n    async completeRequest(content) {\n        return await this._remoteKernel.complete(content, this.parent);\n    }\n    /**\n     * Handle an `inspect_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async inspectRequest(content) {\n        return await this._remoteKernel.inspect(content, this.parent);\n    }\n    /**\n     * Handle an `is_complete_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async isCompleteRequest(content) {\n        return await this._remoteKernel.isComplete(content, this.parent);\n    }\n    /**\n     * Handle a `comm_info_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async commInfoRequest(content) {\n        return await this._remoteKernel.commInfo(content, this.parent);\n    }\n    /**\n     * Send an `comm_open` message.\n     *\n     * @param msg - The comm_open message.\n     */\n    async commOpen(msg) {\n        return await this._remoteKernel.commOpen(msg, this.parent);\n    }\n    /**\n     * Send an `comm_msg` message.\n     *\n     * @param msg - The comm_msg message.\n     */\n    async commMsg(msg) {\n        return await this._remoteKernel.commMsg(msg, this.parent);\n    }\n    /**\n     * Send an `comm_close` message.\n     *\n     * @param close - The comm_close message.\n     */\n    async commClose(msg) {\n        return await this._remoteKernel.commClose(msg, this.parent);\n    }\n    /**\n     * Send an `input_reply` message.\n     *\n     * @param content - The content of the reply.\n     */\n    async inputReply(content) {\n        return await this._remoteKernel.inputReply(content, this.parent);\n    }\n}\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","globalThis","allowedOrigins","addEventListener","callback","ev","data","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","isProxyReleased","Proxy","_target","unregister","unregisterProxy","length","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","v","arr","Array","prototype","concat","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","PyodideKernel","BaseKernel","options","super","this","_ready","PromiseDelegate","_worker","initWorker","onmessage","e","_processWorkerMessage","_remoteKernel","initRemote","Worker","URL","remoteOptions","initRemoteOptions","initialize","pyodideUrl","indexUrl","lastIndexOf","baseUrl","PageConfig","getBaseUrl","pipliteUrls","disablePyPIFallback","pipliteWheelUrl","location","mountDrive","loadPyodideOptions","dispose","isDisposed","terminate","ready","promise","_a","_b","_c","_d","_e","_f","_g","bundle","text","stream","parentHeader","content","prompt","password","inputRequest","metadata","transient","displayData","updateDisplayData","wait","clearOutput","execution_count","publishExecuteResult","ename","evalue","traceback","publishExecuteError","handleComm","buffers","kernelInfoRequest","implementation","implementation_version","language_info","codemirror_mode","version","file_extension","mimetype","nbconvert_exporter","pygments_lexer","protocol_version","status","banner","help_links","url","executeRequest","result","execute","executionCount","completeRequest","complete","inspectRequest","inspect","isCompleteRequest","isComplete","commInfoRequest","commInfo","commOpen","commMsg","commClose","inputReply"],"sourceRoot":""}