{"version":3,"file":"6553.a73f98d.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@microsoft/fast-react-wrapper/dist/esm/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/accordion/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/accordion-item/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/anchor/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/anchored-region/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/avatar/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/badge/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/breadcrumb/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/breadcrumb-item/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/button/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/card/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/checkbox/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/combobox/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/data-grid/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/date-field/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/design-system-provider/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/dialog/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/disclosure/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/divider/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/listbox/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/menu/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/menu-item/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/number-field/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/option/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/progress/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/progress-ring/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/radio/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/radio-group/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/search/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/select/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/skeleton/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/slider/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/slider-label/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/switch/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/tab-panel/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/tab/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/tabs/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/text-area/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/text-field/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/toolbar/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/tooltip/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/tree-item/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/tree-view/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter/react-components/lib/drafts/picker/index.js"],"sourcesContent":["import { FASTElementDefinition, Observable, } from \"@microsoft/fast-element\";\nimport { FoundationElementRegistry, } from \"@microsoft/fast-foundation\";\nconst reservedReactProperties = new Set([\n    \"children\",\n    \"localName\",\n    \"ref\",\n    \"style\",\n    \"className\",\n]);\nconst emptyProps = Object.freeze(Object.create(null));\nconst DEFAULT_CACHE_NAME = \"_default\";\n// This will be a two levels cache Map<type, Map<name, ReactWrapper>>\n// to distinguish components of same type but different tag name.\n// Default name: '_default'\nconst wrappersCache = new Map();\n// There are 2 kinds of refs and there's no built in React API to set one.\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    }\n    else {\n        ref.current = value;\n    }\n}\nfunction getTagName(type, config) {\n    if (!config.name) {\n        /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n        const definition = FASTElementDefinition.forType(type);\n        if (definition) {\n            config.name = definition.name;\n        }\n        else {\n            throw new Error(\"React wrappers must wrap a FASTElement or be configured with a name.\");\n        }\n    }\n    return config.name;\n}\nfunction getElementEvents(config) {\n    return config.events || (config.events = {});\n}\nfunction keyIsValid(type, config, name) {\n    if (reservedReactProperties.has(name)) {\n        console.warn(`${getTagName(type, config)} contains property ${name} which is a React ` +\n            `reserved property. It will be used by React and not set on ` +\n            `the element.`);\n        return false;\n    }\n    return true;\n}\nfunction getElementKeys(type, config) {\n    if (!config.keys) {\n        if (config.properties) {\n            config.keys = new Set(config.properties.concat(Object.keys(getElementEvents(config))));\n        }\n        else {\n            const keys = new Set(Object.keys(getElementEvents(config)));\n            const accessors = Observable.getAccessors(type.prototype);\n            if (accessors.length > 0) {\n                for (const a of accessors) {\n                    if (keyIsValid(type, config, a.name)) {\n                        keys.add(a.name);\n                    }\n                }\n            }\n            else {\n                for (const p in type.prototype) {\n                    if (!(p in HTMLElement.prototype) && keyIsValid(type, config, p)) {\n                        keys.add(p);\n                    }\n                }\n            }\n            config.keys = keys;\n        }\n    }\n    return config.keys;\n}\n/**\n * @param React - The React module, typically imported from the `react` npm\n * package\n * @param designSystem - A design system to register the components with.\n * @public\n */\nexport function provideReactWrapper(React, designSystem) {\n    let registrations = [];\n    const registry = {\n        register(container, ...rest) {\n            registrations.forEach(x => x.register(container, ...rest));\n            registrations = [];\n        },\n    };\n    function wrap(type, config = {}) {\n        var _a, _b;\n        if (type instanceof FoundationElementRegistry) {\n            if (designSystem) {\n                designSystem.register(type);\n            }\n            else {\n                registrations.push(type);\n            }\n            type = type.type;\n        }\n        const cachedCandidates = wrappersCache.get(type);\n        if (cachedCandidates) {\n            const cachedWrapper = cachedCandidates.get((_a = config.name) !== null && _a !== void 0 ? _a : DEFAULT_CACHE_NAME);\n            if (cachedWrapper) {\n                return cachedWrapper;\n            }\n        }\n        class ReactComponent extends React.Component {\n            constructor() {\n                super(...arguments);\n                this._element = null;\n            }\n            _updateElement(oldProps) {\n                const element = this._element;\n                if (element === null) {\n                    return;\n                }\n                const currentProps = this.props;\n                const previousProps = oldProps || emptyProps;\n                const events = getElementEvents(config);\n                for (const key in this._elementProps) {\n                    const newValue = currentProps[key];\n                    const event = events[key];\n                    if (event === undefined) {\n                        element[key] = newValue;\n                    }\n                    else {\n                        const oldValue = previousProps[key];\n                        if (newValue === oldValue) {\n                            continue;\n                        }\n                        if (oldValue !== undefined) {\n                            element.removeEventListener(event, oldValue);\n                        }\n                        if (newValue !== undefined) {\n                            element.addEventListener(event, newValue);\n                        }\n                    }\n                }\n            }\n            componentDidMount() {\n                this._updateElement();\n            }\n            componentDidUpdate(old) {\n                this._updateElement(old);\n            }\n            render() {\n                // Since refs only get fulfilled once, pass a new one if the user's\n                // ref changed. This allows refs to be fulfilled as expected, going from\n                // having a value to null.\n                const userRef = this.props.__forwardedRef;\n                if (this._ref === undefined || this._userRef !== userRef) {\n                    this._ref = (value) => {\n                        if (this._element === null) {\n                            this._element = value;\n                        }\n                        if (userRef !== null) {\n                            setRef(userRef, value);\n                        }\n                        this._userRef = userRef;\n                    };\n                }\n                // Filter class properties and pass the remaining attributes to React.\n                // This allows attributes to use framework rules\n                // for setting attributes and render correctly under SSR.\n                const newReactProps = { ref: this._ref };\n                const newElementProps = (this._elementProps = {});\n                const elementKeys = getElementKeys(type, config);\n                const currentProps = this.props;\n                for (const k in currentProps) {\n                    const v = currentProps[k];\n                    if (elementKeys.has(k)) {\n                        newElementProps[k] = v;\n                    }\n                    else {\n                        // React does *not* handle `className` for custom elements so\n                        // coerce it to `class` so it's handled correctly.\n                        newReactProps[k === \"className\" ? \"class\" : k] = v;\n                    }\n                }\n                return React.createElement(getTagName(type, config), newReactProps);\n            }\n        }\n        const reactComponent = React.forwardRef((props, ref) => React.createElement(ReactComponent, Object.assign(Object.assign({}, props), { __forwardedRef: ref }), props === null || props === void 0 ? void 0 : props.children));\n        if (!wrappersCache.has(type)) {\n            wrappersCache.set(type, new Map());\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        wrappersCache.get(type).set((_b = config.name) !== null && _b !== void 0 ? _b : DEFAULT_CACHE_NAME, reactComponent);\n        return reactComponent;\n    }\n    return { wrap, registry };\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpAccordion } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Accordion = wrap(jpAccordion(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nAccordion.displayName = 'Jupyter.Accordion';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpAccordionItem } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const AccordionItem = wrap(jpAccordionItem(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nAccordionItem.displayName = 'Jupyter.AccordionItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpAnchor } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Anchor = wrap(jpAnchor());\n// @ts-expect-error unknown property\nAnchor.displayName = 'Jupyter.Anchor';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpAnchoredRegion } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const AnchoredRegion = wrap(jpAnchoredRegion());\n// @ts-expect-error unknown property\nAnchoredRegion.displayName = 'Jupyter.AnchoredRegion';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpAvatar } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Avatar = wrap(jpAvatar());\n// @ts-expect-error unknown property\nAvatar.displayName = 'Jupyter.Avatar';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpBadge } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Badge = wrap(jpBadge());\n// @ts-expect-error unknown property\nBadge.displayName = 'Jupyter.Badge';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpBreadcrumb } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Breadcrumb = wrap(jpBreadcrumb());\n// @ts-expect-error unknown property\nBreadcrumb.displayName = 'Jupyter.Breadcrumb';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpBreadcrumbItem } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const BreadcrumbItem = wrap(jpBreadcrumbItem());\n// @ts-expect-error unknown property\nBreadcrumbItem.displayName = 'Jupyter.BreadcrumbItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpButton } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Button = wrap(jpButton());\n// @ts-expect-error unknown property\nButton.displayName = 'Jupyter.Button';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpCard } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Card = wrap(jpCard());\n// @ts-expect-error unknown property\nCard.displayName = 'Jupyter.Card';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpCheckbox } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Checkbox = wrap(jpCheckbox(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nCheckbox.displayName = 'Jupyter.Checkbox';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpCombobox } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Combobox = wrap(jpCombobox(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nCombobox.displayName = 'Jupyter.Combobox';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpDataGrid, jpDataGridCell, jpDataGridRow } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\n// WARNING The wrapping needs to be called in order (from bottom to top DOM elements)\n// Otherwise during the wrapping the tag for sub elements won't be resolved and this\n// will contaminate the standard web component.\nexport const DataGridCell = wrap(jpDataGridCell(), {\n    events: { onFocus: 'cell-focused' }\n});\n// @ts-expect-error unknown property\nDataGridCell.displayName = 'Jupyter.DataGridCell';\nexport const DataGridRow = wrap(jpDataGridRow(), { events: { onFocus: 'row-focused' } });\n// @ts-expect-error unknown property\nDataGridRow.displayName = 'Jupyter.DataGridRow';\nexport const DataGrid = wrap(jpDataGrid());\n// @ts-expect-error unknown property\nDataGrid.displayName = 'Jupyter.DataGrid';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpDateField } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const DateField = wrap(jpDateField(), {\n    events: { onChange: 'change' }\n});\n// @ts-expect-error unknown property\nDateField.displayName = 'Jupyter.DateField';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpDesignSystemProvider } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const DesignSystemProvider = wrap(jpDesignSystemProvider());\n// @ts-expect-error unknown property\nDesignSystemProvider.displayName = 'Jupyter.DesignSystemProvider';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpDialog } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Dialog = wrap(jpDialog());\n// @ts-expect-error unknown property\nDialog.displayName = 'Jupyter.Dialog';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpDisclosure } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Disclosure = wrap(jpDisclosure(), {\n    events: { onToggle: 'toggle' }\n});\n// @ts-expect-error unknown property\nDisclosure.displayName = 'Jupyter.Disclosure';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpDivider } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Divider = wrap(jpDivider());\n// @ts-expect-error unknown property\nDivider.displayName = 'Jupyter.Divider';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpListbox } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Listbox = wrap(jpListbox());\n// @ts-expect-error unknown property\nListbox.displayName = 'Jupyter.Listbox';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpMenu } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Menu = wrap(jpMenu());\n// @ts-expect-error unknown property\nMenu.displayName = 'Jupyter.Menu';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpMenuItem } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const MenuItem = wrap(jpMenuItem(), { events: { onExpand: 'expanded-change' } });\n// @ts-expect-error unknown property\nMenuItem.displayName = 'Jupyter.MenuItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpNumberField } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const NumberField = wrap(jpNumberField(), {\n    events: { onChange: 'change', onInput: 'input' }\n});\n// @ts-expect-error unknown property\nNumberField.displayName = 'Jupyter.NumberField';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpOption } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Option = wrap(jpOption());\n// @ts-expect-error unknown property\nOption.displayName = 'Juypter.Option';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpProgress } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Progress = wrap(jpProgress(), { name: 'jp-progress' });\n// @ts-expect-error unknown property\nProgress.displayName = 'Jupyter.Progress';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpProgressRing } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const ProgressRing = wrap(jpProgressRing(), \n// Name need to be exported otherwise a `jp-progress` element is instantiated\n{ name: 'jp-progress-ring' });\n// @ts-expect-error unknown property\nProgressRing.displayName = 'Jupyter.ProgressRing';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpRadio } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Radio = wrap(jpRadio(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nRadio.displayName = 'Jupyter.Radio';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpRadioGroup } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const RadioGroup = wrap(jpRadioGroup(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nRadioGroup.displayName = 'Jupyter.RadioGroup';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpSearch } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Search = wrap(jpSearch(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nSearch.displayName = 'Jupyter.Search';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpSelect } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Select = wrap(jpSelect(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nSelect.displayName = 'Jupyter.Select';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpSkeleton } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Skeleton = wrap(jpSkeleton());\n// @ts-expect-error unknown property\nSkeleton.displayName = 'Jupyter.Skeleton';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpSlider } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Slider = wrap(jpSlider(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nSlider.displayName = 'Jupyter.Slider';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpSliderLabel } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const SliderLabel = wrap(jpSliderLabel());\n// @ts-expect-error unknown property\nSliderLabel.displayName = 'Jupyter.SliderLabel';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpSwitch } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Switch = wrap(jpSwitch(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nSwitch.displayName = 'Jupyter.Switch';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTabPanel } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const TabPanel = wrap(jpTabPanel());\n// @ts-expect-error unknown property\nTabPanel.displayName = 'Jupyter.TabPanel';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTab } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Tab = wrap(jpTab());\n// @ts-expect-error unknown property\nTab.displayName = 'Jupyter.Tab';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTabs } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Tabs = wrap(jpTabs(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nTabs.displayName = 'Jupyter.Tabs';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTextArea } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const TextArea = wrap(jpTextArea(), {\n    events: { onChange: 'change' }\n});\n// @ts-expect-error unknown property\nTextArea.displayName = 'Jupyter.TextArea';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTextField } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const TextField = wrap(jpTextField(), {\n    events: { onChange: 'change', onInput: 'input' }\n});\n// @ts-expect-error unknown property\nTextField.displayName = 'Jupyter.TextField';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpToolbar } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Toolbar = wrap(jpToolbar());\n// @ts-expect-error unknown property\nToolbar.displayName = 'Jupyter.Toolbar';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTooltip } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const Tooltip = wrap(jpTooltip());\n// @ts-expect-error unknown property\nTooltip.displayName = 'Jupyter.Tooltip';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTreeItem } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const TreeItem = wrap(jpTreeItem(), {\n    events: { onExpand: 'expanded-change', onSelect: 'selected-change' }\n});\n// @ts-expect-error unknown property\nTreeItem.displayName = 'Jupyter.TreeItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpTreeView } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\nexport const TreeView = wrap(jpTreeView());\n// @ts-expect-error unknown property\nTreeView.displayName = 'Jupyter.TreeView';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem, jpPicker } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nconst { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\n/**\n * @alpha\n */\nexport const Picker = wrap(jpPicker(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nPicker.displayName = 'Jupyter.Picker';\n"],"names":["reservedReactProperties","Set","emptyProps","Object","freeze","create","DEFAULT_CACHE_NAME","wrappersCache","Map","getTagName","type","config","name","definition","FASTElementDefinition","forType","Error","getElementEvents","events","keyIsValid","has","console","warn","provideReactWrapper","React","designSystem","registrations","wrap","_a","_b","FoundationElementRegistry","register","push","cachedCandidates","get","cachedWrapper","ReactComponent","Component","constructor","super","arguments","this","_element","_updateElement","oldProps","element","currentProps","props","previousProps","key","_elementProps","newValue","event","undefined","oldValue","removeEventListener","addEventListener","componentDidMount","componentDidUpdate","old","render","userRef","__forwardedRef","_ref","_userRef","value","ref","current","setRef","newReactProps","newElementProps","elementKeys","keys","properties","concat","accessors","Observable","getAccessors","prototype","length","a","add","p","HTMLElement","getElementKeys","k","v","createElement","reactComponent","forwardRef","assign","children","set","registry","container","rest","forEach","x","provideJupyterDesignSystem","Accordion","jpAccordion","onChange","displayName","AccordionItem","jpAccordionItem","Anchor","jpAnchor","AnchoredRegion","jpAnchoredRegion","Avatar","jpAvatar","Badge","jpBadge","Breadcrumb","jpBreadcrumb","BreadcrumbItem","jpBreadcrumbItem","Button","jpButton","Card","jpCard","Checkbox","jpCheckbox","Combobox","jpCombobox","onInput","DataGridCell","jpDataGridCell","onFocus","DataGridRow","jpDataGridRow","DataGrid","jpDataGrid","DateField","jpDateField","DesignSystemProvider","jpDesignSystemProvider","Dialog","jpDialog","Disclosure","jpDisclosure","onToggle","Divider","jpDivider","Listbox","jpListbox","Menu","jpMenu","MenuItem","jpMenuItem","onExpand","NumberField","jpNumberField","Option","jpOption","Progress","jpProgress","ProgressRing","jpProgressRing","Radio","jpRadio","RadioGroup","jpRadioGroup","Search","jpSearch","Select","jpSelect","Skeleton","jpSkeleton","Slider","jpSlider","SliderLabel","jpSliderLabel","Switch","jpSwitch","TabPanel","jpTabPanel","Tab","jpTab","Tabs","jpTabs","TextArea","jpTextArea","TextField","jpTextField","Toolbar","jpToolbar","Tooltip","jpTooltip","TreeItem","jpTreeItem","onSelect","TreeView","jpTreeView","Picker","jpPicker"],"sourceRoot":""}