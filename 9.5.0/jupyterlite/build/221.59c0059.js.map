{"version":3,"file":"221.59c0059.js","mappings":"kIAAA,IAAIA,EACJ,SAASC,EAAIC,EAAOC,GAAgB,OAAXH,EAAOG,EAAWD,CAAM,CAEjD,SAASE,EAAUC,EAAQC,GACzB,IAwCmBC,EAxCfC,EAAKH,EAAOI,OAEhB,GAAU,KAAND,IAAaH,EAAOK,IAAI,KAKrB,IAAU,KAANF,GAAaH,EAAOK,IAAI,KAEjC,OADAJ,EAAMK,UAAmB,OAAQ,KA+C5B,SAASN,EAAQC,GACtB,MAAQD,EAAOO,OAAO,CACpB,GAAIP,EAAOQ,MAjDoB,MAiDD,CAC5BP,EAAMK,SAAWP,EACjB,KACF,CACAC,EAAOI,MACT,CACA,MAvDyB,MAwD3B,GAvDSR,EAAI,OAAQO,GACd,GAAU,KAANA,GAAaH,EAAOS,SAAS,QAAS,OAAOb,EAAI,OAAQ,OAC/D,GAAU,KAANO,EAAW,OAAOP,EAAI,UAAW,aACrC,GAAIO,EAAGK,MAAM,wBAAyB,OAAOZ,EAAI,KAAMO,GACvD,GAAIA,EAAGK,MAAM,UAAW,OAAOZ,EAAI,OAAQO,GAC3C,GAAU,KAANA,GAAoB,KAANA,EAErB,OADAF,EAAMK,UAyBWJ,EAzBYC,EA0BxB,SAASH,EAAQC,GAEtB,IADA,IAAqBE,EAAjBO,GAAU,EACiB,OAAvBP,EAAKH,EAAOI,SAAiB,CACnC,GAAID,GAAMD,IAAUQ,EAAS,CAC3BT,EAAMK,SAAWP,EACjB,KACF,CACAW,GAAWA,GAAiB,MAANP,CACxB,CACA,OAAOP,EAAI,SAAU,MACvB,GAnCSK,EAAMK,SAASN,EAAQC,GACzB,GAAID,EAAOS,SAAS,kBAAmB,CAC5C,IAAIE,EAAKX,EAAOY,UAEhB,OADwD,OAApDD,EAAGE,OAAOF,EAAGG,OAAO,EAAEH,EAAGG,QAAQN,MAAM,UAAmBR,EAAOe,OAAO,GACrEnB,EAAI,MAAO,MACpB,CAAO,MAAU,KAANO,GAAmB,KAANA,EAAmBP,EAAI,SAAU,WAEvDI,EAAOS,SAAS,iBACTb,EAAI,KAAM,MACnB,CAtBE,OAAII,EAAOS,SAAS,SAClBR,EAAMK,SAAWU,EACVA,EAAiBhB,EAAQC,IACvBD,EAAOS,SAAS,QAAgBb,EAAI,UAAW,iBAAnD,CAoBX,CAEA,SAASoB,EAAiBhB,EAAQC,GAEhC,IADA,IAAgBE,EAAZc,EAAS,EACkB,OAAvBd,EAAKH,EAAOI,SAAiB,CACnC,GAAIa,GAAU,GAAW,KAANd,EAAW,CAC5BF,EAAMK,SAAWP,EACjB,KACF,CACAkB,EAAgB,KAANd,EAAac,EAAS,EAAI,CACtC,CACA,OAAOrB,EAAI,UAAW,UACxB,C,0BA6BO,MAAMsB,EAAM,CACjBC,KAAM,MACNC,WAAY,WACV,MAAO,CAACd,SAAUP,EACVsB,WAAY,EACZC,MAAO,GACjB,EAEAC,MAAO,SAASvB,EAAQC,GACtB,GAAID,EAAOwB,WAAY,OAAO,KAC9B,IAAI3B,EAAQI,EAAMK,SAASN,EAAQC,GAE/BwB,EAAUxB,EAAMqB,MAAMrB,EAAMqB,MAAMR,OAAO,GAK7C,MAJwB,KAApBd,EAAOY,WAA6B,aAATjB,GAA+B,KAARA,EAAaM,EAAMqB,MAAMI,KAAK,QAClE,WAAT/B,EAAmBM,EAAMqB,MAAMrB,EAAMqB,MAAMR,OAAO,GAAK,SACnC,KAApBd,EAAOY,WAA4B,KAARjB,GAAwB,KAARA,GAA0B,QAAX8B,EAAoBxB,EAAMqB,MAAMK,MAClF,KAARhC,GAAaM,EAAMqB,MAAMI,KAAK,KAChC7B,CACT,EAEA+B,OAAQ,SAAS3B,EAAO4B,EAAWC,GACjC,IAAIC,EAAI9B,EAAMqB,MAAMR,OAoBpB,MAlB4B,MAAxBe,EAAUG,OAAO,GAAYD,IACkC,MAA3DF,EAAUhB,OAAOgB,EAAUf,OAAO,EAAGe,EAAUf,UACxB,MAA1Be,EAAUhB,OAAO,EAAE,IACL,YAARlB,GAAsBkC,EAAUf,OAAS,IACjC,YAARnB,EAAmBoC,IACX,KAARpC,GAAekC,EAAUf,OAAS,GAC1B,OAARnB,GAA+B,MAAdkC,IACT,OAARlC,GAAsD,QAArCM,EAAMqB,MAAMrB,EAAMqB,MAAMR,OAAO,GAAaiB,IACrD,OAARpC,EAAcoC,IACA,MAAdF,GAA0D,QAArC5B,EAAMqB,MAAMrB,EAAMqB,MAAMR,OAAO,IAAyB,MAATnB,EAAaoC,IACnE,MAAdF,GAA0D,QAArC5B,EAAMqB,MAAMrB,EAAMqB,MAAMR,OAAO,KAC1B,MAA1Be,EAAUhB,OAAO,EAAE,IAAwC,MAA1BgB,EAAUhB,OAAO,EAAE,GAAYkB,GAAI,EACtD,MAAdF,IACJE,GAAI,MAEE,MAARpC,GAAwB,KAARA,GAAYoC,KAG1B9B,EAAMoB,WAAaU,EAAID,EAAGG,IACnC,EAEAC,aAAc,CACZC,cAAe,c","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@codemirror/legacy-modes/mode/dtd.js"],"sourcesContent":["var type;\nfunction ret(style, tp) {type = tp; return style;}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == \"<\" && stream.eat(\"!\") ) {\n    if (stream.eatWhile(/[\\-]/)) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n  } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n    state.tokenize = inBlock(\"meta\", \"?>\");\n    return ret(\"meta\", ch);\n  } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n  else if (ch == \"|\") return ret(\"keyword\", \"separator\");\n  else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n  else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n    var sc = stream.current();\n    if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n    return ret(\"tag\", \"tag\");\n  } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n  else {\n    stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n    return ret(null, null);\n  }\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0, ch;\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return ret(\"string\", \"tag\");\n  };\n}\n\nfunction inBlock(style, terminator) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.next();\n    }\n    return style;\n  };\n}\n\nexport const dtd = {\n  name: \"dtd\",\n  startState: function() {\n    return {tokenize: tokenBase,\n            baseIndent: 0,\n            stack: []};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n\n    var context = state.stack[state.stack.length-1];\n    if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n    else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n    else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n    else if (type == \"[\") state.stack.push(\"[\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var n = state.stack.length;\n\n    if( textAfter.charAt(0) === ']' )n--;\n    else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n      if(textAfter.substr(0,1) === \"<\") {}\n      else if( type == \"doindent\" && textAfter.length > 1 ) {}\n      else if( type == \"doindent\")n--;\n      else if( type == \">\" && textAfter.length > 1) {}\n      else if( type == \"tag\" && textAfter !== \">\") {}\n      else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n      else if( type == \"tag\")n++;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n      else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n      else if( textAfter === \">\") {}\n      else n=n-1;\n      //over rule them all\n      if(type == null || type == \"]\")n--;\n    }\n\n    return state.baseIndent + n * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[\\]>]$/\n  }\n};\n\n"],"names":["type","ret","style","tp","tokenBase","stream","state","quote","ch","next","eat","tokenize","eol","match","eatWhile","escaped","sc","current","substr","length","backUp","tokenSGMLComment","dashes","dtd","name","startState","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","cx","n","charAt","unit","languageData","indentOnInput"],"sourceRoot":""}