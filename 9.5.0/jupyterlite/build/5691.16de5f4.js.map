{"version":3,"file":"5691.16de5f4.js","mappings":"4NAUA,MAAMA,EAAY,CACd,CACIC,KAAM,gBACNC,IAAK,uBAET,CACID,KAAM,qBACNC,IAAK,gCAET,CACID,KAAM,gBACNC,IAAK,uDAMb,IAAIC,GACJ,SAAWA,GACPA,EAAWC,KAAO,YAClBD,EAAWE,MAAQ,YACtB,CAHD,CAGGF,IAAeA,EAAa,CAAC,IAIhC,MA0EA,EADgB,CAzEH,CACTG,GAAI,wCACJC,WAAW,EACXC,YAAa,oDACbC,SAAWC,IACP,MAAM,SAAEC,GAAaD,EACrBC,EAASC,WAAWT,EAAWC,KAAM,CACjCS,MAAQC,GAASA,EAAW,KAC5BC,QAAUD,IACN,MAAMZ,EAAMY,EAAU,IACtBE,OAAOZ,KAAKF,EAAI,GAEtB,GAMI,CACVI,GAAI,yCACJC,WAAW,EACXU,SAAU,CAAC,EAAAC,aACXC,SAAU,CAAC,EAAAC,UAAW,EAAAC,iBACtBb,YAAa,mFACbC,SAAU,CAACC,EAAKY,EAAYC,EAAMC,KAC9B,MAAM,SAAEb,GAAaD,EACfe,EAAQH,EAAWI,KAAK,YACxBC,EAAWF,EAAMG,GAAG,QAC1BjB,EAASC,WAAWT,EAAWE,MAAO,CAClCQ,MAAOY,EAAMG,GAAG,WAAYlB,EAAImB,MAChCd,QAAS,KACL,MAAMe,EAAS,gBAAoB,WAAgB,KAC/C,gBAAoB,OAAQ,CAAEC,UAAW,2BACrC,gBAAoB,EAAAC,YAAYC,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAGnEC,EAAeX,EAAMG,GAAG,8BACxBS,EAAkBZ,EAAMG,GAAG,oBAC3BU,EAAiB,gBAAoB,OAAQ,KAC/C,gBAAoB,IAAK,CAAEC,KALX,sCAK8BC,OAAQ,SAAUC,IAAK,sBAAuBV,UAAW,uDAAyDK,GAChK,gBAAoB,IAAK,CAAEG,KALR,4CAK8BC,OAAQ,SAAUC,IAAK,sBAAuBV,UAAW,uDAAyDM,IACjKK,EAAUjB,EAAMG,GAAG,cAAelB,EAAIgC,SACtCC,EAAYlB,EAAMG,GAAG,6CACrBgB,EAAQ,gBAAoB,WAAgB,KAC9C,gBAAoB,OAAQ,CAAEb,UAAW,4BAA8BW,GACvE,gBAAoB,MAAO,KAAMJ,GACjC,gBAAoB,OAAQ,CAAEP,UAAW,oCAAsCY,IAC7EE,EAAS,IAAI,EAAAC,OAAO,CACtBhB,QACAc,OACAG,QAAS,CACL,EAAAD,OAAOE,aAAa,CAChBnC,MAAOY,EAAMG,GAAG,WAChBG,UAAW,iEAIvBc,EAAOI,SAAS,oBACXJ,EAAOK,QAAQ,IAGxB1B,GACAA,EAAQ2B,QAAQ,CAAEC,QAASjD,EAAWE,MAAOsB,aAEjD,MAAM0B,EAAiBrD,EAAUsD,KAAKxC,IAAS,CAC3CA,OACAsC,QAASjD,EAAWC,SAEpBmB,GACAA,EAAKgC,SAASC,SAASH,EAAgB,GAC3C,G","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/help-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Dialog, ICommandPalette } from '@jupyterlab/apputils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { jupyterIcon } from '@jupyter-notebook/ui-components';\nimport * as React from 'react';\n/**\n * A list of resources to show in the help menu.\n */\nconst RESOURCES = [\n    {\n        text: 'About Jupyter',\n        url: 'https://jupyter.org',\n    },\n    {\n        text: 'Markdown Reference',\n        url: 'https://commonmark.org/help/',\n    },\n    {\n        text: 'Documentation',\n        url: 'https://jupyter-notebook.readthedocs.io/en/stable/',\n    },\n];\n/**\n * The command IDs used by the help plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.open = 'help:open';\n    CommandIDs.about = 'help:about';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A plugin to open the about section with resources.\n */\nconst open = {\n    id: '@jupyter-notebook/help-extension:open',\n    autoStart: true,\n    description: 'A plugin to open the about section with resources',\n    activate: (app) => {\n        const { commands } = app;\n        commands.addCommand(CommandIDs.open, {\n            label: (args) => args['text'],\n            execute: (args) => {\n                const url = args['url'];\n                window.open(url);\n            },\n        });\n    },\n};\n/**\n * Plugin to add a command to show an About Jupyter Notebook and Markdown Reference.\n */\nconst about = {\n    id: '@jupyter-notebook/help-extension:about',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [IMainMenu, ICommandPalette],\n    description: 'Plugin to add a command to show an About Jupyter Notebook and Markdown Reference',\n    activate: (app, translator, menu, palette) => {\n        const { commands } = app;\n        const trans = translator.load('notebook');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.about, {\n            label: trans.__('About %1', app.name),\n            execute: () => {\n                const title = (React.createElement(React.Fragment, null,\n                    React.createElement(\"span\", { className: \"jp-AboutNotebook-header\" },\n                        React.createElement(jupyterIcon.react, { width: \"196px\", height: \"auto\" }))));\n                const notebookURL = 'https://github.com/jupyter/notebook';\n                const contributorURL = 'https://github.com/jupyter/notebook/pulse';\n                const aboutJupyter = trans.__('JUPYTER NOTEBOOK ON GITHUB');\n                const contributorList = trans.__('CONTRIBUTOR LIST');\n                const externalLinks = (React.createElement(\"span\", null,\n                    React.createElement(\"a\", { href: notebookURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat jp-AboutNotebook-about-externalLinks\" }, aboutJupyter),\n                    React.createElement(\"a\", { href: contributorURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat jp-AboutNotebook-about-externalLinks\" }, contributorList)));\n                const version = trans.__('Version: %1', app.version);\n                const copyright = trans.__('Â© 2021-2023 Jupyter Notebook Contributors');\n                const body = (React.createElement(React.Fragment, null,\n                    React.createElement(\"span\", { className: \"jp-AboutNotebook-version\" }, version),\n                    React.createElement(\"div\", null, externalLinks),\n                    React.createElement(\"span\", { className: \"jp-AboutNotebook-about-copyright\" }, copyright)));\n                const dialog = new Dialog({\n                    title,\n                    body,\n                    buttons: [\n                        Dialog.createButton({\n                            label: trans.__('Dismiss'),\n                            className: 'jp-AboutNotebook-about-button jp-mod-reject jp-mod-styled',\n                        }),\n                    ],\n                });\n                dialog.addClass('jp-AboutNotebook');\n                void dialog.launch();\n            },\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.about, category });\n        }\n        const resourcesGroup = RESOURCES.map((args) => ({\n            args,\n            command: CommandIDs.open,\n        }));\n        if (menu) {\n            menu.helpMenu.addGroup(resourcesGroup, 30);\n        }\n    },\n};\nconst plugins = [open, about];\nexport default plugins;\n"],"names":["RESOURCES","text","url","CommandIDs","open","about","id","autoStart","description","activate","app","commands","addCommand","label","args","execute","window","requires","ITranslator","optional","IMainMenu","ICommandPalette","translator","menu","palette","trans","load","category","__","name","title","className","jupyterIcon","react","width","height","aboutJupyter","contributorList","externalLinks","href","target","rel","version","copyright","body","dialog","Dialog","buttons","createButton","addClass","launch","addItem","command","resourcesGroup","map","helpMenu","addGroup"],"sourceRoot":""}