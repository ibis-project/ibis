{"version":3,"file":"6640.bf24711.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/mermaid/dist/stateDiagram-b8fc1844.js"],"sourcesContent":["import { d as db, p as parser, s as styles } from \"./styles-401768ef.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { c as getConfig, u as utils, e as common, l as log, i as configureSvgSize } from \"./mermaid-04fb0060.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst idCache = {};\nconst set = (key, val) => {\n  idCache[key] = val;\n};\nconst get = (k) => idCache[k];\nconst keys = () => Object.keys(idCache);\nconst size = () => keys().length;\nconst idCache$1 = {\n  get,\n  set,\n  keys,\n  size\n};\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\nconst drawSimpleState = (g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n};\nconst drawDescrState = (g, stateDef) => {\n  const addTspan = function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  };\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc)\n    ;\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst drawEndState = (g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n};\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\nconst drawNote = (text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n};\nconst drawState = function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  idCache$1.set(id, stateInfo);\n  return stateInfo;\n};\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case db.relationType.EXTENSION:\n        return \"extension\";\n      case db.relationType.COMPOSITION:\n        return \"composition\";\n      case db.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils.calcLabelPosition(path.points);\n    const rows = common.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n      log.info(boundstmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n};\nlet conf;\nconst transformationLog = {};\nconst setConf = function() {\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram2, stateDef);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n};\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["idCache","addTitleAndBox","g","stateDef","altBkg","pad","state","padding","dblPad","orgBox","node","getBBox","orgWidth","width","orgX","x","title","append","attr","titleShift","fontSize","text","id","titleWidth","startX","Math","max","graphBox","doc","abs","lineY","textHeight","insert","height","radius","drawState","elem","stateInfo","label","type","sizeUnit","drawStartState","miniPadding","drawEndState","forkWidth","forkHeight","parentId","tmp","style","drawForkJoinState","note","rectElem","textWidth","_text","y","textElem","replace","lines","split","lineBreakRegex","tHeight","noteMargin","line2","txt","trim","length","span","_drawLongText","drawNote","drawDivider","descriptions","classBox","drawSimpleState","titleBox","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","textEl","isFirst2","tSpan","addTspan","descrLine","descrBox","drawDescrState","stateBox","val","conf","edgeCount","transformationLog","renderDoc","diagram2","root","domDocument","diagObj","graph","compound","multigraph","i","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","db","extract","states","getStates","relations","getRelations","keys2","Object","keys","key","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","l","debug","nodeCount","cnt","relation","setEdge","id1","id2","fontSizeFactor","labelHeight","getRows","labelpos","nodes","svgElem","v","warn","JSON","stringify","select","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","Number","isNaN","setAttribute","edges","e","edge","w","path","points","filter","p","lineData","lineFunction","d","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","getRelationType","u","calcLabelPosition","rows","titleRows","maxWidth","minX","boundstmp","min","info","push","boxHeight","heightAdj","bounds","drawEdge","renderer","setConf","draw","_version","securityLevel","sandboxElement","contentDocument","body","document","rootDoc","getRootDoc","svgWidth","useMaxWidth","diagram","parser","styles","init","cnf","clear"],"sourceRoot":""}