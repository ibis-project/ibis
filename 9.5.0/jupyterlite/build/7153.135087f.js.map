{"version":3,"file":"7153.135087f.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/dagre-d3-es/src/dagre-js/util.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/mermaid/dist/flowDiagram-v2-d21afba7.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/khroma/dist/methods/channel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/mermaid/dist/styles-b39df0e1.js"],"sourcesContent":["import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import { p as parser, f as flowDb } from \"./flowDb-f4777d50.js\";\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-b39df0e1.js\";\nimport { p as setConfig } from \"./mermaid-04fb0060.js\";\nimport \"d3\";\nimport \"dagre-d3-es/src/graphlib/index.js\";\nimport \"./index-0980fb80.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-5ec2587c.js\";\nimport \"./createText-a48a4c90.js\";\nimport \"mdast-util-from-markdown\";\nimport \"ts-dedent\";\nimport \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport \"khroma\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst diagram = {\n  parser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    setConfig({ flowchart: { arrowMarkerAbsolute: cnf.arrowMarkerAbsolute } });\n    flowRendererV2.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen(\"gen-2\");\n  }\n};\nexport {\n  diagram\n};\n","/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\nconst channel = (color, channel) => {\n    return _.lang.round(Color.parse(color)[channel]);\n};\n/* EXPORT */\nexport default channel;\n","import * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { curveLinear, select, selectAll } from \"d3\";\nimport { k as getStylesFromArray, l as log, m as evaluate, c as getConfig, e as common, n as interpolateToCurve, u as utils, o as setupGraphViewbox } from \"./mermaid-04fb0060.js\";\nimport { r as render } from \"./index-0980fb80.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport * as khroma from \"khroma\";\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = function(vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n  keys.forEach(function(id) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    classStr = classStr + \" flowchart-label\";\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    log.info(\"vertex\", vertex, vertex.labelType);\n    if (vertex.labelType === \"markdown\") {\n      log.info(\"vertex\", vertex, vertex.labelType);\n    } else {\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        const node = {\n          label: vertexText.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          )\n        };\n        vertexNode = addHtmlLabel(svg, node).node();\n        vertexNode.parentNode.removeChild(vertexNode);\n      } else {\n        const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n        const rows = vertexText.split(common.lineBreakRegex);\n        for (const row of rows) {\n          const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n          tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n          tspan.setAttribute(\"dy\", \"1em\");\n          tspan.setAttribute(\"x\", \"1\");\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        vertexNode = svgLabel;\n      }\n    }\n    let radious = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radious = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      case \"doublecircle\":\n        _shape = \"doublecircle\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      labelType: vertex.labelType,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n    log.info(\"setNode\", {\n      labelStyle: styles.labelStyle,\n      labelType: vertex.labelType,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n  });\n};\nconst addEdges = function(edges, g, diagObj) {\n  log.info(\"abc78 edges = \", edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  edges.forEach(function(edge) {\n    cnt++;\n    const linkIdBase = \"L-\" + edge.start + \"-\" + edge.end;\n    if (linkIdCnt[linkIdBase] === void 0) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + \"-\" + linkIdCnt[linkIdBase];\n    log.info(\"abc78 new link id to be used is\", linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = { style: \"\", labelStyle: \"\" };\n    edgeData.minlen = edge.length || 1;\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    edgeData.arrowTypeStart = \"arrow_open\";\n    edgeData.arrowTypeEnd = \"arrow_open\";\n    switch (edge.type) {\n      case \"double_arrow_cross\":\n        edgeData.arrowTypeStart = \"arrow_cross\";\n      case \"arrow_cross\":\n        edgeData.arrowTypeEnd = \"arrow_cross\";\n        break;\n      case \"double_arrow_point\":\n        edgeData.arrowTypeStart = \"arrow_point\";\n      case \"arrow_point\":\n        edgeData.arrowTypeEnd = \"arrow_point\";\n        break;\n      case \"double_arrow_circle\":\n        edgeData.arrowTypeStart = \"arrow_circle\";\n      case \"arrow_circle\":\n        edgeData.arrowTypeEnd = \"arrow_circle\";\n        break;\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    switch (edge.stroke) {\n      case \"normal\":\n        style = \"fill:none;\";\n        if (defaultStyle !== void 0) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== void 0) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"solid\";\n        break;\n      case \"dotted\":\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"dotted\";\n        edgeData.style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n        break;\n      case \"thick\":\n        edgeData.thickness = \"thick\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 3.5px;fill:none;\";\n        break;\n      case \"invisible\":\n        edgeData.thickness = \"invisible\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 0;fill:none;\";\n        break;\n    }\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n    }\n    edgeData.labelType = edge.labelType;\n    edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n    if (edge.style === void 0) {\n      edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none;\";\n    }\n    edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n    edgeData.id = linkId;\n    edgeData.classes = \"flowchart-link \" + linkNameStart + \" \" + linkNameEnd;\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  });\n};\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 0,\n    marginy: 0\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info(\"Subgraphs - \", subGraphs);\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    log.info(\"Subgraph - \", subG);\n    diagObj.db.addVertex(\n      subG.id,\n      { text: subG.title, type: subG.labelType },\n      \"group\",\n      void 0,\n      subG.classes,\n      subG.dir\n    );\n  }\n  const vert = diagObj.db.getVertices();\n  const edges = diagObj.db.getEdges();\n  log.info(\"Edges\", edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info(\"Setting up subgraphs\", subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  addVertices(vert, g, id, root, doc, diagObj);\n  addEdges(edges, g);\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"point\", \"circle\", \"cross\"], \"flowchart\", id);\n  utils.insertTitle(svg, \"flowchartTitleText\", conf2.titleTopMargin, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = select(\"#\" + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRendererV2 = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nexport {\n  flowStyles as a,\n  flowRendererV2 as f\n};\n"],"names":["addHtmlLabel","root","node","fo","append","attr","div","label","insert","html","labelStyle","style","client","getBoundingClientRect","width","height","isSubgraph","g","v","children","length","edgeToId","e","escapeId","w","name","ID_DELIM","str","String","replace","applyStyle","dom","styleFn","applyClass","classFn","otherClasses","applyTransition","selection","graph","transition","diagram","parser","db","f","renderer","styles","init","cnf","flowchart","arrowMarkerAbsolute","setConf","clear","setGen","color","channel","lang","round","parse","conf","addVertices","vert","svgId","doc","diagObj","svg","select","Object","keys","forEach","id","vertex","classStr","classes","join","vertexNode","vertexText","text","l","info","labelType","htmlLabels","s","a","parentNode","removeChild","svgLabel","createElementNS","setAttribute","rows","split","lineBreakRegex","row","tspan","setAttributeNS","textContent","appendChild","radious","_shape","type","setNode","shape","labelText","rx","ry","class","link","linkTarget","tooltip","getTooltip","domId","lookUpDomId","haveCallback","dir","props","padding","addEdges","edges","defaultStyle","defaultLabelStyle","cnt","linkIdCnt","defaultStyles","edge","linkIdBase","start","end","linkId","linkNameStart","linkNameEnd","edgeData","minlen","arrowhead","arrowTypeStart","arrowTypeEnd","stroke","thickness","pattern","interpolate","curve","defaultInterpolate","arrowheadStyle","labelpos","setEdge","flowRendererV2","key","getClasses","draw","async","_version","getDirection","securityLevel","conf2","nodeSpacing","rankSpacing","sandboxElement","nodes","contentDocument","body","document","graphlib","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subG","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","i","j","setParent","element","r","u","insertTitle","titleTopMargin","getDiagramTitle","diagramPadding","useMaxWidth","indexNodes","labels","querySelectorAll","dim","getBBox","rect","insertBefore","firstChild","linkNode","flowStyles","options","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","opacity","b","fade","clusterBkg","clusterBorder","tertiaryColor","border2"],"sourceRoot":""}