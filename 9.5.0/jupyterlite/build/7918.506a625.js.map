{"version":3,"file":"7918.506a625.js","mappings":"gOAUA,MAAMA,EAAS,CACXC,GAAI,6CACJC,SAAU,CAAC,EAAAC,SACXC,WAAW,EACXC,YAAa,yCACbC,SAAU,CAACC,EAAKC,KACZ,MAAM,SAAEC,GAAaF,EACfG,EAAiB,IAAIC,OAAO,kBAC5BC,EAAU,iBAChBH,EAASI,WAAWD,EAAS,CACzBE,QAAUC,IACN,MACMC,EADSD,EACQE,KAAKC,MAAMR,GAClC,IAAKM,EACD,OAEJ,MAAO,CAAEE,GAASF,EAClB,IAAKE,EACD,OAEJ,MAAMD,EAAOE,mBAAmBD,GAChCT,EAASK,QAAQ,iBAAkB,CAAEG,QAAO,IAGpDT,EAAOY,SAAS,CAAER,UAASS,QAASX,GAAiB,GAMvDY,EAAW,CACbrB,GAAI,+CACJC,SAAU,CAAC,EAAAqB,iBACXC,SAAU,CAAC,EAAAC,qBACXrB,WAAW,EACXC,YAAa,6BACbC,SAAU,CAACC,EAAKmB,EAASC,KACrB,MAAMC,EAAU,EAAAC,WAAWC,aACrB9B,EAAS2B,QAA+DA,EAAqB,EAAAI,0BACnGL,EAAQM,YAAYC,SAAQC,MAAOC,EAAMC,KACrC,MAAM,eAAEC,GAAmBD,QACrBC,EAAeC,OACN,IAAAC,MAAKhC,EAAIiC,MAAMC,QAAQ,SAAUC,GAAMA,EAAEzC,KAAOmC,EAAQnC,OAKvED,EAAO2C,KAAK,CACRC,OAAQ,EAAAC,OAAOC,KAAKlB,EAAS,YAC7BX,KAAMoB,EAAepB,KACrB8B,OAAQ,WAGZX,EAAQY,UAAS,GACnB,GAOV,EADgB,CAAChD,EAAQsB,E","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/console-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { IRouter, } from '@jupyterlab/application';\nimport { IConsoleTracker } from '@jupyterlab/console';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { INotebookPathOpener, defaultNotebookPathOpener, } from '@jupyter-notebook/application';\nimport { find } from '@lumino/algorithm';\n/**\n * A plugin to open consoles in a new tab\n */\nconst opener = {\n    id: '@jupyter-notebook/console-extension:opener',\n    requires: [IRouter],\n    autoStart: true,\n    description: 'A plugin to open consoles in a new tab',\n    activate: (app, router) => {\n        const { commands } = app;\n        const consolePattern = new RegExp('/consoles/(.*)');\n        const command = 'router:console';\n        commands.addCommand(command, {\n            execute: (args) => {\n                const parsed = args;\n                const matches = parsed.path.match(consolePattern);\n                if (!matches) {\n                    return;\n                }\n                const [, match] = matches;\n                if (!match) {\n                    return;\n                }\n                const path = decodeURIComponent(match);\n                commands.execute('console:create', { path });\n            },\n        });\n        router.register({ command, pattern: consolePattern });\n    },\n};\n/**\n * Open consoles in a new tab.\n */\nconst redirect = {\n    id: '@jupyter-notebook/console-extension:redirect',\n    requires: [IConsoleTracker],\n    optional: [INotebookPathOpener],\n    autoStart: true,\n    description: 'Open consoles in a new tab',\n    activate: (app, tracker, notebookPathOpener) => {\n        const baseUrl = PageConfig.getBaseUrl();\n        const opener = notebookPathOpener !== null && notebookPathOpener !== void 0 ? notebookPathOpener : defaultNotebookPathOpener;\n        tracker.widgetAdded.connect(async (send, console) => {\n            const { sessionContext } = console;\n            await sessionContext.ready;\n            const widget = find(app.shell.widgets('main'), (w) => w.id === console.id);\n            if (widget) {\n                // bail if the console is already added to the main area\n                return;\n            }\n            opener.open({\n                prefix: URLExt.join(baseUrl, 'consoles'),\n                path: sessionContext.path,\n                target: '_blank',\n            });\n            // the widget is not needed anymore\n            console.dispose();\n        });\n    },\n};\n/**\n * Export the plugins as default.\n */\nconst plugins = [opener, redirect];\nexport default plugins;\n"],"names":["opener","id","requires","IRouter","autoStart","description","activate","app","router","commands","consolePattern","RegExp","command","addCommand","execute","args","matches","path","match","decodeURIComponent","register","pattern","redirect","IConsoleTracker","optional","INotebookPathOpener","tracker","notebookPathOpener","baseUrl","PageConfig","getBaseUrl","defaultNotebookPathOpener","widgetAdded","connect","async","send","console","sessionContext","ready","find","shell","widgets","w","open","prefix","URLExt","join","target","dispose"],"sourceRoot":""}